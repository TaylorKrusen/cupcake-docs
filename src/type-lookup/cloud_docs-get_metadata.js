export default {"cloud_docs": {"UserPermissions": {"stone_type": "struct", "fields": [{"parameter": "can_edit", "type": {"primitive": "Boolean"}, "description": "true if the user can edit the content of this document"}, {"parameter": "can_rename", "type": {"primitive": "Boolean"}, "description": "true if the user can edit the title of this document"}, {"parameter": "can_comment", "type": {"primitive": "Boolean"}, "description": "true if the user can comment on this document"}, {"parameter": "can_download", "type": {"primitive": "Boolean"}, "description": "true if the user can download the contents of this document. currently always true if the user has view access to the document."}]}, "GetMetadataResult": {"stone_type": "struct", "fields": [{"parameter": "file_id", "type": {"primitive": "String"}}, {"parameter": "title", "type": {"primitive": "String"}, "description": "Title of the Cloud Doc without extension."}, {"parameter": "mime_type", "type": {"primitive": "String"}, "description": "MIME type of the Cloud Doc."}, {"parameter": "version", "type": {"primitive": "String"}, "description": "Opaque string representing the version of the document stored in Dropbox (only set for Dropbox-stored Documents)."}, {"parameter": "provider_version", "type": {"primitive": "String"}, "description": "Application specific string representing the revision of a document (only set for App-stored Documents)."}, {"parameter": "user", "type": {"optional": {"datatype": "UserInfo", "namespace": "cloud_docs"}}, "description": "User identified by the auth token."}, {"parameter": "is_deleted", "type": {"primitive": "Boolean"}, "description": "true if the document is deleted or purged."}, {"parameter": "user_permissions", "type": {"optional": {"datatype": "UserPermissions", "namespace": "cloud_docs"}}, "description": "Actions that the user identified by the auth token can performn. This message will not be populated for deleted documents."}]}, "get_metadata_error_tag_union": {"stone_type": "open_union", "fields": [{"parameter": "generic_error", "type": {"datatype": "GenericErrorTag", "namespace": "cloud_docs"}}, {"parameter": "other", "type": {"primitive": "Void"}}]}, "UserInfo": {"stone_type": "struct", "fields": [{"parameter": "id", "type": {"primitive": "String"}, "description": "ID associated with the user."}, {"parameter": "email", "type": {"primitive": "String"}, "description": "Email associated with the user."}]}, "GetMetadataArg": {"stone_type": "struct", "fields": [{"parameter": "file_id", "type": {"primitive": "String"}, "description": "API ID (\"id:...\") associated with the Cloud Doc."}]}, "GenericErrorTag": {"stone_type": "open_union", "fields": [{"parameter": "invalid_argument", "type": {"primitive": "Void"}, "description": "Invalid argument supplied."}, {"parameter": "unauthenticated", "type": {"primitive": "Void"}, "description": "User is unauthenticated."}, {"parameter": "permission_denied", "type": {"primitive": "Void"}, "description": "User does not have access to the specified doc."}, {"parameter": "doc_not_found", "type": {"primitive": "Void"}, "description": "Doc could not be found based on the supplied doc ID."}, {"parameter": "other", "type": {"primitive": "Void"}}]}, "GetMetadataError": {"stone_type": "struct", "fields": [{"parameter": "get_metadata_error_tag", "type": {"optional": {"datatype": "get_metadata_error_tag_union", "namespace": "cloud_docs"}}}]}}}
