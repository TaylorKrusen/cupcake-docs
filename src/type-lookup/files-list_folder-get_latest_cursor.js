export default {"files": {"LookupError": {"stone_type": "open_union", "fields": [{"parameter": "malformed_path", "type": {"optional": {"primitive": "String"}}, "description": "The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information."}, {"parameter": "not_found", "type": {"primitive": "Void"}, "description": "There is nothing at the given path."}, {"parameter": "not_file", "type": {"primitive": "Void"}, "description": "We were expecting a file, but the given path refers to something that isn't a file."}, {"parameter": "not_folder", "type": {"primitive": "Void"}, "description": "We were expecting a folder, but the given path refers to something that isn't a folder."}, {"parameter": "restricted_content", "type": {"primitive": "Void"}, "description": "The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims."}, {"parameter": "unsupported_content_type", "type": {"primitive": "Void"}, "description": "This operation is not supported for this content type."}, {"parameter": "locked", "type": {"primitive": "Void"}, "description": "The given path is locked."}, {"parameter": "other", "type": {"primitive": "Void"}}]}, "SharedLink": {"stone_type": "struct", "fields": [{"parameter": "url", "type": {"primitive": "String"}, "description": "Shared link url."}, {"parameter": "password", "type": {"optional": {"primitive": "String"}}, "description": "Password for the shared link."}]}, "ListFolderError": {"stone_type": "open_union", "fields": [{"parameter": "path", "type": {"datatype": "LookupError", "namespace": "files"}}, {"parameter": "template_error", "type": {"datatype": "TemplateError", "namespace": "file_properties"}}, {"parameter": "other", "type": {"primitive": "Void"}}]}, "ListFolderArg": {"stone_type": "struct", "fields": [{"parameter": "path", "type": {"primitive": "String"}, "description": "A unique identifier for the file."}, {"parameter": "recursive", "type": {"primitive": "Boolean"}, "description": "If true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders."}, {"parameter": "include_media_info", "type": {"primitive": "Boolean"}, "description": "If true, :field:`FileMetadata.media_info` is set for photo and video. This parameter will no longer have an effect starting December 2, 2019."}, {"parameter": "include_deleted", "type": {"primitive": "Boolean"}, "description": "If true, the results will include entries for files and folders that used to exist but were deleted."}, {"parameter": "include_has_explicit_shared_members", "type": {"primitive": "Boolean"}, "description": "If true, the results will include a flag for each file indicating whether or not  that file has any explicit members."}, {"parameter": "include_mounted_folders", "type": {"primitive": "Boolean"}, "description": "If true, the results will include entries under mounted folders which includes app folder, shared folder and team folder."}, {"parameter": "limit", "type": {"optional": {"primitive": "UInt32"}}, "description": "The maximum number of results to return per request. Note: This is an approximate number and there can be slightly more entries returned in some cases."}, {"parameter": "shared_link", "type": {"optional": {"datatype": "SharedLink", "namespace": "files"}}, "description": "A shared link to list the contents of. If the link is password-protected, the password must be provided. If this field is present, :field:`ListFolderArg.path` will be relative to root of the shared link. Only non-recursive mode is supported for shared link."}, {"parameter": "include_property_groups", "type": {"optional": {"datatype": "TemplateFilterBase", "namespace": "file_properties"}}, "description": "If set to a valid list of template IDs, :field:`FileMetadata.property_groups` is set if there exists property data associated with the file and each of the listed templates."}, {"parameter": "include_non_downloadable_files", "type": {"primitive": "Boolean"}, "description": "If true, include files that are not downloadable, i.e. Google Docs."}]}, "ListFolderGetLatestCursorResult": {"stone_type": "struct", "fields": [{"parameter": "cursor", "type": {"primitive": "String"}, "description": "Pass the cursor into :route:`list_folder/continue` to see what's changed in the folder since your previous query."}]}}, "file_properties": {"TemplateFilterBase": {"stone_type": "open_union", "fields": [{"parameter": "filter_some", "type": {"list": {"primitive": "String"}}, "description": "Only templates with an ID in the supplied list will be returned (a subset of templates will be returned)."}, {"parameter": "other", "type": {"primitive": "Void"}}]}, "TemplateError": {"stone_type": "open_union", "fields": [{"parameter": "template_not_found", "type": {"primitive": "String"}, "description": "Template does not exist for the given identifier."}, {"parameter": "restricted_content", "type": {"primitive": "Void"}, "description": "You do not have permission to modify this template."}, {"parameter": "other", "type": {"primitive": "Void"}}]}}}
