export default {"sharing": {"MemberSelector": {"stone_type": "open_union", "fields": [{"parameter": "dropbox_id", "type": {"primitive": "String"}, "description": "Dropbox account, team member, or group ID of member."}, {"parameter": "email", "type": {"primitive": "String"}, "description": "E-mail address of member."}, {"parameter": "other", "type": {"primitive": "Void"}}], "description": "Includes different ways to identify a member of a shared folder."}, "AccessLevel": {"stone_type": "open_union", "fields": [{"parameter": "owner", "type": {"primitive": "Void"}, "description": "The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`."}, {"parameter": "editor", "type": {"primitive": "Void"}, "description": "The collaborator can both view and edit the shared folder."}, {"parameter": "viewer", "type": {"primitive": "Void"}, "description": "The collaborator can only view the shared folder."}, {"parameter": "viewer_no_comment", "type": {"primitive": "Void"}, "description": "The collaborator can only view the shared folder and does not have any access to comments."}, {"parameter": "other", "type": {"primitive": "Void"}}], "description": "Defines the access levels for collaborators."}, "AddFileMemberError": {"stone_type": "open_union", "fields": [{"parameter": "user_error", "type": {"datatype": "SharingUserError", "namespace": "sharing"}}, {"parameter": "access_error", "type": {"datatype": "SharingFileAccessError", "namespace": "sharing"}}, {"parameter": "rate_limit", "type": {"primitive": "Void"}, "description": "The user has reached the rate limit for invitations."}, {"parameter": "invalid_comment", "type": {"primitive": "Void"}, "description": "The custom message did not pass comment permissions checks."}, {"parameter": "other", "type": {"primitive": "Void"}}], "description": "Errors for :route:`add_file_member`."}, "SharingUserError": {"stone_type": "open_union", "fields": [{"parameter": "email_unverified", "type": {"primitive": "Void"}, "description": "The current user must verify the account e-mail address before performing this action."}, {"parameter": "other", "type": {"primitive": "Void"}}], "description": "User account had a problem preventing this action."}, "SharingFileAccessError": {"stone_type": "open_union", "fields": [{"parameter": "no_permission", "type": {"primitive": "Void"}, "description": "Current user does not have sufficient privileges to perform the desired action."}, {"parameter": "invalid_file", "type": {"primitive": "Void"}, "description": "File specified was not found."}, {"parameter": "is_folder", "type": {"primitive": "Void"}, "description": "A folder can't be shared this way. Use folder sharing or a shared link instead."}, {"parameter": "inside_public_folder", "type": {"primitive": "Void"}, "description": "A file inside a public folder can't be shared this way. Use a public link instead."}, {"parameter": "inside_osx_package", "type": {"primitive": "Void"}, "description": "A Mac OS X package can't be shared this way. Use a shared link instead."}, {"parameter": "other", "type": {"primitive": "Void"}}], "description": "User could not access this file."}, "AddFileMemberArgs": {"stone_type": "struct", "fields": [{"parameter": "file", "type": {"primitive": "String"}, "description": "File to which to add members."}, {"parameter": "members", "type": {"list": {"datatype": "MemberSelector", "namespace": "sharing"}}, "description": "Members to add. Note that even an email address is given, this may result in a user being directy added to the membership if that email is the user's main account email."}, {"parameter": "custom_message", "type": {"optional": {"primitive": "String"}}, "description": "Message to send to added members in their invitation."}, {"parameter": "quiet", "type": {"primitive": "Boolean"}, "description": "Whether added members should be notified via device notifications of their invitation."}, {"parameter": "access_level", "type": {"datatype": "AccessLevel", "namespace": "sharing"}, "description": "AccessLevel union object, describing what access level we want to give new members."}, {"parameter": "add_message_as_comment", "type": {"primitive": "Boolean"}, "description": "If the custom message should be added as a comment on the file."}], "description": "Arguments for :route:`add_file_member`."}}}
