export default {"team": {"UserSelectorArg": {"stone_type": "union", "fields": [{"parameter": "team_member_id", "type": {"primitive": "String"}}, {"parameter": "external_id", "type": {"primitive": "String"}}, {"parameter": "email", "type": {"primitive": "String"}}], "description": "Argument for selecting a single user, either by team_member_id, external_id or email."}, "MembersSetPermissionsResult": {"stone_type": "struct", "fields": [{"parameter": "team_member_id", "type": {"primitive": "String"}, "description": "The member ID of the user to which the change was applied."}, {"parameter": "role", "type": {"datatype": "AdminTier", "namespace": "team"}, "description": "The role after the change."}]}, "MembersSetPermissionsError": {"stone_type": "open_union", "fields": [{"parameter": "user_not_found", "type": {"primitive": "Void"}, "description": "No matching user found. The provided team_member_id, email, or external_id does not exist on this team."}, {"parameter": "last_admin", "type": {"primitive": "Void"}, "description": "Cannot remove the admin setting of the last admin."}, {"parameter": "user_not_in_team", "type": {"primitive": "Void"}, "description": "The user is not a member of the team."}, {"parameter": "cannot_set_permissions", "type": {"primitive": "Void"}, "description": "Cannot remove/grant permissions."}, {"parameter": "team_license_limit", "type": {"primitive": "Void"}, "description": "Team is full. The organization has no available licenses."}, {"parameter": "other", "type": {"primitive": "Void"}}]}, "AdminTier": {"stone_type": "union", "fields": [{"parameter": "team_admin", "type": {"primitive": "Void"}, "description": "User is an administrator of the team - has all permissions."}, {"parameter": "user_management_admin", "type": {"primitive": "Void"}, "description": "User can do most user provisioning, de-provisioning and management."}, {"parameter": "support_admin", "type": {"primitive": "Void"}, "description": "User can do a limited set of common support tasks for existing users."}, {"parameter": "member_only", "type": {"primitive": "Void"}, "description": "User is not an admin of the team."}], "description": "Describes which team-related admin permissions a user has."}, "MembersSetPermissionsArg": {"stone_type": "struct", "fields": [{"parameter": "user", "type": {"datatype": "UserSelectorArg", "namespace": "team"}, "description": "Identity of user whose role will be set."}, {"parameter": "new_role", "type": {"datatype": "AdminTier", "namespace": "team"}, "description": "The new role of the member."}], "description": "Exactly one of team_member_id, email, or external_id must be provided to identify the user account."}}}
