export default {"users": {"Name": {"stone_type": "struct", "fields": [{"parameter": "given_name", "type": {"primitive": "String"}, "description": "Also known as a first name."}, {"parameter": "surname", "type": {"primitive": "String"}, "description": "Also known as a last name or family name."}, {"parameter": "familiar_name", "type": {"primitive": "String"}, "description": "Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`."}, {"parameter": "display_name", "type": {"primitive": "String"}, "description": "A name that can be used directly to represent the name of a user's Dropbox account."}, {"parameter": "abbreviated_name", "type": {"primitive": "String"}, "description": "An abbreviated form of the person's name. Their initials in most locales."}], "description": "Representations for a person's name to assist with internationalization."}}, "secondary_emails": {"SecondaryEmail": {"stone_type": "struct", "fields": [{"parameter": "email", "type": {"primitive": "String"}, "description": "Secondary email address."}, {"parameter": "is_verified", "type": {"primitive": "Boolean"}, "description": "Whether or not the secondary email address is verified to be owned by a user."}]}}, "team": {"TeamMemberProfile": {"stone_type": "struct", "fields": [{"parameter": "team_member_id", "type": {"primitive": "String"}, "description": "ID of user as a member of a team."}, {"parameter": "email", "type": {"primitive": "String"}, "description": "Email address of user."}, {"parameter": "email_verified", "type": {"primitive": "Boolean"}, "description": "Is true if the user's email is verified to be owned by the user."}, {"parameter": "status", "type": {"datatype": "TeamMemberStatus", "namespace": "team"}, "description": "The user's status as a member of a specific team."}, {"parameter": "name", "type": {"datatype": "Name", "namespace": "users"}, "description": "Representations for a person's name."}, {"parameter": "membership_type", "type": {"datatype": "TeamMembershipType", "namespace": "team"}, "description": "The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota)."}, {"parameter": "groups", "type": {"list": {"primitive": "String"}}, "description": "List of group IDs of groups that the user belongs to."}, {"parameter": "member_folder_id", "type": {"primitive": "String"}, "description": "The namespace id of the user's root folder."}, {"parameter": "external_id", "type": {"optional": {"primitive": "String"}}, "description": "External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id."}, {"parameter": "account_id", "type": {"optional": {"primitive": "String"}}, "description": "A user's account identifier."}, {"parameter": "secondary_emails", "type": {"optional": {"list": {"datatype": "SecondaryEmail", "namespace": "secondary_emails"}}}, "description": "Secondary emails of a user."}, {"parameter": "invited_on", "type": {"optional": {"primitive": "Timestamp"}}, "description": "The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`)."}, {"parameter": "joined_on", "type": {"optional": {"primitive": "Timestamp"}}, "description": "The date and time the user joined as a member of a specific team."}, {"parameter": "suspended_on", "type": {"optional": {"primitive": "Timestamp"}}, "description": "The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`)."}, {"parameter": "persistent_id", "type": {"optional": {"primitive": "String"}}, "description": "Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication."}, {"parameter": "is_directory_restricted", "type": {"optional": {"primitive": "Boolean"}}, "description": "Whether the user is a directory restricted user."}, {"parameter": "profile_photo_url", "type": {"optional": {"primitive": "String"}}, "description": "URL for the photo representing the user, if one is set."}], "description": "Profile of a user as a member of a team."}, "AdminTier": {"stone_type": "union", "fields": [{"parameter": "team_admin", "type": {"primitive": "Void"}, "description": "User is an administrator of the team - has all permissions."}, {"parameter": "user_management_admin", "type": {"primitive": "Void"}, "description": "User can do most user provisioning, de-provisioning and management."}, {"parameter": "support_admin", "type": {"primitive": "Void"}, "description": "User can do a limited set of common support tasks for existing users."}, {"parameter": "member_only", "type": {"primitive": "Void"}, "description": "User is not an admin of the team."}], "description": "Describes which team-related admin permissions a user has."}, "TeamMembershipType": {"stone_type": "union", "fields": [{"parameter": "full", "type": {"primitive": "Void"}, "description": "User uses a license and has full access to team resources like the shared quota."}, {"parameter": "limited", "type": {"primitive": "Void"}, "description": "User does not have access to the shared quota and team admins have restricted administrative control."}]}, "MembersDeleteProfilePhotoArg": {"stone_type": "struct", "fields": [{"parameter": "user", "type": {"datatype": "UserSelectorArg", "namespace": "team"}, "description": "Identity of the user whose profile photo will be deleted."}]}, "MembersDeleteProfilePhotoError": {"stone_type": "open_union", "fields": [{"parameter": "user_not_found", "type": {"primitive": "Void"}, "description": "No matching user found. The provided team_member_id, email, or external_id does not exist on this team."}, {"parameter": "user_not_in_team", "type": {"primitive": "Void"}, "description": "The user is not a member of the team."}, {"parameter": "set_profile_disallowed", "type": {"primitive": "Void"}, "description": "Modifying deleted users is not allowed."}, {"parameter": "other", "type": {"primitive": "Void"}}]}, "RemovedStatus": {"stone_type": "struct", "fields": [{"parameter": "is_recoverable", "type": {"primitive": "Boolean"}, "description": "True if the removed team member is recoverable."}, {"parameter": "is_disconnected", "type": {"primitive": "Boolean"}, "description": "True if the team member's account was converted to individual account."}]}, "UserSelectorArg": {"stone_type": "union", "fields": [{"parameter": "team_member_id", "type": {"primitive": "String"}}, {"parameter": "external_id", "type": {"primitive": "String"}}, {"parameter": "email", "type": {"primitive": "String"}}], "description": "Argument for selecting a single user, either by team_member_id, external_id or email."}, "TeamMemberStatus": {"stone_type": "union", "fields": [{"parameter": "active", "type": {"primitive": "Void"}, "description": "User has successfully joined the team."}, {"parameter": "invited", "type": {"primitive": "Void"}, "description": "User has been invited to a team, but has not joined the team yet."}, {"parameter": "suspended", "type": {"primitive": "Void"}, "description": "User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member."}, {"parameter": "removed", "type": {"datatype": "RemovedStatus", "namespace": "team"}, "description": "User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list."}], "description": "The user's status as a member of a specific team."}, "TeamMemberInfo": {"stone_type": "struct", "fields": [{"parameter": "profile", "type": {"datatype": "TeamMemberProfile", "namespace": "team"}, "description": "Profile of a user as a member of a team."}, {"parameter": "role", "type": {"datatype": "AdminTier", "namespace": "team"}, "description": "The user's role in the team."}], "description": "Information about a team member."}}}
