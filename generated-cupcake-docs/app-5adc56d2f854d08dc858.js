(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"+0YS":function(e,t,i){"use strict";t.a={file_requests:{FileRequest:{description:"A :link:`file request https://www.dropbox.com/help/9090` for receiving files into the user's Dropbox account.",fields:[{description:"The ID of the file request.",parameter:"id",type:{primitive:"String"}},{description:"The URL of the file request.",parameter:"url",type:{primitive:"String"}},{description:"The title of the file request.",parameter:"title",type:{primitive:"String"}},{description:"When this file request was created.",parameter:"created",type:{primitive:"Timestamp"}},{description:"Whether or not the file request is open. If the file request is closed, it will not accept any more file submissions.",parameter:"is_open",type:{primitive:"Boolean"}},{description:"The number of files this file request has received.",parameter:"file_count",type:{primitive:"Int64"}},{description:"The path of the folder in the Dropbox where uploaded files will be sent. This can be :val:`null` if the destination was removed. For apps with the app folder permission, this will be relative to the app folder.",parameter:"destination",type:{optional:{primitive:"String"}}},{description:"The deadline for this file request. Only set if the request has a deadline.",parameter:"deadline",type:{optional:{datatype:"FileRequestDeadline",namespace:"file_requests"}}}],stone_type:"struct"},FileRequestDeadline:{fields:[{description:"The deadline for this file request.",parameter:"deadline",type:{primitive:"Timestamp"}},{description:"If set, allow uploads after the deadline has passed. These     uploads will be marked overdue.",parameter:"allow_late_uploads",type:{optional:{datatype:"GracePeriod",namespace:"file_requests"}}}],stone_type:"struct"},GetFileRequestArgs:{description:"Arguments for :route:`get`.",fields:[{description:"The ID of the file request to retrieve.",parameter:"id",type:{primitive:"String"}}],stone_type:"struct"},GetFileRequestError:{description:"There was an error retrieving the specified file request.",fields:[{description:"This user's Dropbox Business team doesn't allow file requests.",parameter:"disabled_for_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"This file request ID was not found.",parameter:"not_found",type:{primitive:"Void"}},{description:"The specified path is not a folder.",parameter:"not_a_folder",type:{primitive:"Void"}},{description:"This file request is not accessible to this app. Apps with the app folder permission can only access file requests in their app folder.",parameter:"app_lacks_access",type:{primitive:"Void"}},{description:"This user doesn't have permission to access or modify this file request.",parameter:"no_permission",type:{primitive:"Void"}},{description:"This user's email address is not verified. File requests are only available on accounts with a verified email address. Users can verify their email address :link:`here https://www.dropbox.com/help/317`.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"There was an error validating the request. For example, the title was invalid, or there were disallowed characters in the destination path.",parameter:"validation_error",type:{primitive:"Void"}}],stone_type:"open_union"},GracePeriod:{fields:[{parameter:"one_day",type:{primitive:"Void"}},{parameter:"two_days",type:{primitive:"Void"}},{parameter:"seven_days",type:{primitive:"Void"}},{parameter:"thirty_days",type:{primitive:"Void"}},{parameter:"always",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"+165":function(e,t){e.exports=function(e,t){return e.has(t)}},"+Ckz":function(e,t,i){var r=i("V2ZB"),o=i("tb+2");e.exports=function(e,t){return r(e,o(e),t)}},"+LGp":function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{GroupAccessType:{description:"Role of a user in group.",fields:[{description:"User is a member of the group, but has no special permissions.",parameter:"member",type:{primitive:"Void"}},{description:"User can rename the group, and add/remove members.",parameter:"owner",type:{primitive:"Void"}}],stone_type:"union"},GroupMemberInfo:{description:"Profile of group member, and role in group.",fields:[{description:"Profile of group member.",parameter:"profile",type:{datatype:"MemberProfile",namespace:"team"}},{description:"The role that the user has in the group.",parameter:"access_type",type:{datatype:"GroupAccessType",namespace:"team"}}],stone_type:"struct"},GroupsMembersListContinueArg:{fields:[{description:"Indicates from what point to get the next set of groups.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},GroupsMembersListContinueError:{fields:[{description:"The cursor is invalid.",parameter:"invalid_cursor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupsMembersListResult:{fields:[{parameter:"members",type:{list:{datatype:"GroupMemberInfo",namespace:"team"}}},{description:"Pass the cursor into :route:`groups/members/list/continue` to obtain additional group members.",parameter:"cursor",type:{primitive:"String"}},{description:"Is true if there are additional group members that have not been returned yet. An additional call to :route:`groups/members/list/continue` can retrieve them.",parameter:"has_more",type:{primitive:"Boolean"}}],stone_type:"struct"},MemberProfile:{description:"Basic member profile.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},"+Ltg":function(e,t,i){"use strict";e.exports=function(e,t,i,r,o,a,n,s){if(!e){var p;if(void 0===t)p=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var d=[i,r,o,a,n,s],l=0;(p=new Error(t.replace(/%s/g,(function(){return d[l++]})))).name="Invariant Violation"}throw p.framesToPop=1,p}}},"+QuK":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("2GWU"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"+V6m":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("jVva"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"+Vbj":function(e,t,i){var r=i("jgJv"),o=i("lYsT"),a=i("PqlX"),n=r?r.isConcatSpreadable:void 0;e.exports=function(e){return a(e)||o(e)||!!(n&&e&&e[n])}},"+dZb":function(e,t,i){var r=i("zm72"),o=i("scUu");e.exports=function(e,t,i){return r(o,e,t,i)}},"+iZH":function(e,t,i){"use strict";t.a={file_properties:{GetTemplateArg:{fields:[{description:"An identifier for template added by route  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}}],stone_type:"struct"},GetTemplateResult:{fields:[{description:"Display name for the template. Template names can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description for the template. Template descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Definitions of the property fields associated with this template. There can be up to 32 properties in a single template.",parameter:"fields",type:{list:{datatype:"PropertyFieldTemplate",namespace:"file_properties"}}}],stone_type:"struct"},PropertyFieldTemplate:{description:"Defines how a single property field may be structured. Used exclusively by :type:`PropertyGroupTemplate`.",fields:[{description:"Key of the property field being described. Property field keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description of the property field. Property field descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Data type of the value of this property field. This type will be enforced upon property creation and modifications.",parameter:"type",type:{datatype:"PropertyType",namespace:"file_properties"}}],stone_type:"struct"},PropertyType:{description:"Data type of the given property field added.",fields:[{description:"The associated property field will be of type string. Unicode is supported.",parameter:"string",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"+mqN":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("S6qS"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"+sCh":function(e,t,i){"use strict";t.a={sharing:{AccessInheritance:{description:"Information about the inheritance policy of a shared folder.",fields:[{description:"The shared folder inherits its members from the parent folder.",parameter:"inherit",type:{primitive:"Void"}},{description:"The shared folder does not inherit its members from the parent folder.",parameter:"no_inherit",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AclUpdatePolicy:{description:"Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.",fields:[{description:"Only the owner can update the ACL.",parameter:"owner",type:{primitive:"Void"}},{description:"Any editor can update the ACL. This may be further restricted to editors on the same team.",parameter:"editors",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AudienceExceptionContentInfo:{description:"Information about the content that has a link audience different than that of this folder.",fields:[{description:"The name of the content, which is either a file or a folder.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},AudienceExceptions:{description:"The total count and truncated list of information of content inside this folder that has a different audience than the link on this folder. This is only returned for folders.",fields:[{parameter:"count",type:{primitive:"UInt32"}},{description:"A truncated list of some of the content that is an exception. The length of this list could be smaller than the count since it is only a sample but will not be empty as long as count is not 0.",parameter:"exceptions",type:{list:{datatype:"AudienceExceptionContentInfo",namespace:"sharing"}}}],stone_type:"struct"},AudienceRestrictingSharedFolder:{description:"Information about the shared folder that prevents the link audience for this link from being more restrictive.",fields:[{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The name of the shared folder.",parameter:"name",type:{primitive:"String"}},{description:"The link audience of the shared folder.",parameter:"audience",type:{datatype:"LinkAudience",namespace:"sharing"}}],stone_type:"struct"},FolderAction:{description:"Actions that may be taken on shared folders.",fields:[{description:"Change folder options, such as who can be invited to join the folder.",parameter:"change_options",type:{primitive:"Void"}},{description:"Disable viewer information for this folder.",parameter:"disable_viewer_info",type:{primitive:"Void"}},{description:"Change or edit contents of the folder.",parameter:"edit_contents",type:{primitive:"Void"}},{description:"Enable viewer information on the folder.",parameter:"enable_viewer_info",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read and write permission.",parameter:"invite_editor",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission.",parameter:"invite_viewer",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission but no comment permissions.",parameter:"invite_viewer_no_comment",type:{primitive:"Void"}},{description:"Relinquish one's own membership in the folder.",parameter:"relinquish_membership",type:{primitive:"Void"}},{description:"Unmount the folder.",parameter:"unmount",type:{primitive:"Void"}},{description:"Stop sharing this folder.",parameter:"unshare",type:{primitive:"Void"}},{description:"Keep a copy of the contents upon leaving or being kicked from the folder.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Use create_link instead.",parameter:"share_link",type:{primitive:"Void"}},{description:"Create a shared link for folder.",parameter:"create_link",type:{primitive:"Void"}},{description:"Set whether the folder inherits permissions from its parent.",parameter:"set_access_inheritance",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FolderPermission:{description:"Whether the user is allowed to take the action on the shared folder.",fields:[{description:"The action that the user may wish to take on the folder.",parameter:"action",type:{datatype:"FolderAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed, or if no reason is available.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},FolderPolicy:{description:"A set of policies governing membership and privileges for a shared folder.",fields:[{description:"Who can add and remove members from this shared folder.",parameter:"acl_update_policy",type:{datatype:"AclUpdatePolicy",namespace:"sharing"}},{description:"Who links can be shared with.",parameter:"shared_link_policy",type:{datatype:"SharedLinkPolicy",namespace:"sharing"}},{description:"Who can be a member of this shared folder, as set on the folder itself. The effective policy may differ from this value if the team-wide policy is more restrictive. Present only if the folder is owned by a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can be a member of this shared folder, taking into account both the folder and the team-wide policy. This value may differ from that of member_policy if the team-wide policy is more restrictive than the folder policy. Present only if the folder is owned by a team.",parameter:"resolved_member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAction:{description:"Actions that can be performed on a link.",fields:[{description:"Change the access level of the link.",parameter:"change_access_level",type:{primitive:"Void"}},{description:"Change the audience of the link.",parameter:"change_audience",type:{primitive:"Void"}},{description:"Remove the expiry date of the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Remove the password of the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Create or modify the expiry date of the link.",parameter:"set_expiry",type:{primitive:"Void"}},{description:"Create or modify the password of the link.",parameter:"set_password",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermission:{description:"Permissions for actions that can be performed on a link.",fields:[{parameter:"action",type:{datatype:"LinkAction",namespace:"sharing"}},{parameter:"allow",type:{primitive:"Boolean"}},{parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},ListFoldersContinueArg:{fields:[{description:"The cursor returned by the previous API call specified in the endpoint description.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},ListFoldersContinueError:{fields:[{description:":field:`ListFoldersContinueArg.cursor` is invalid.",parameter:"invalid_cursor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListFoldersResult:{description:"Result for :route:`list_folders` or :route:`list_mountable_folders`, depending on which endpoint was requested.\nUnmounted shared folders can be identified by the absence of :field:`SharedFolderMetadata.path_lower`.",fields:[{description:"List of all shared folders the authenticated user has access to.",parameter:"entries",type:{list:{datatype:"SharedFolderMetadata",namespace:"sharing"}}},{description:"Present if there are additional shared folders that have not been returned yet. Pass the cursor into the corresponding continue endpoint (either :route:`list_folders/continue` or :route:`list_mountable_folders/continue`) to list additional folders.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberPolicy:{description:"Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.",fields:[{description:"Only a teammate can become a member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can become a member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedContentLinkMetadata:{description:"Metadata of a shared link for a file or folder.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The URL of the link.",parameter:"url",type:{primitive:"String"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}},{description:"The content inside this folder with link audience different than this folder's. This is only returned when an endpoint that returns metadata for a single shared folder is called, e.g. /get_folder_metadata.",parameter:"audience_exceptions",type:{optional:{datatype:"AudienceExceptions",namespace:"sharing"}}}],stone_type:"struct"},SharedFolderMetadata:{description:"The metadata which includes basic information about the shared folder.",fields:[{description:"The current user's access level for this shared folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Whether this folder is inside of a team folder.",parameter:"is_inside_team_folder",type:{primitive:"Boolean"}},{description:"Whether this folder is a :link:`team folder https://www.dropbox.com/en/help/986`.",parameter:"is_team_folder",type:{primitive:"Boolean"}},{description:"The name of the this shared folder.",parameter:"name",type:{primitive:"String"}},{description:"Policies governing this shared folder.",parameter:"policy",type:{datatype:"FolderPolicy",namespace:"sharing"}},{description:"URL for displaying a web preview of the shared folder.",parameter:"preview_url",type:{primitive:"String"}},{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"Timestamp indicating when the current user was invited to this shared folder.",parameter:"time_invited",type:{primitive:"Timestamp"}},{description:"The display names of the users that own the folder. If the folder is part of a team folder, the display names of the team admins are also included. Absent if the owner display names cannot be fetched.",parameter:"owner_display_names",type:{optional:{list:{primitive:"String"}}}},{description:"The team that owns the folder. This field is not present if the folder is not owned by a team.",parameter:"owner_team",type:{optional:{datatype:"Team",namespace:"users"}}},{description:"The ID of the parent shared folder. This field is present only if the folder is contained within another shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"The lower-cased full path of this shared folder. Absent for unmounted folders.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"Display name for the parent folder.",parameter:"parent_folder_name",type:{optional:{primitive:"String"}}},{description:"The metadata of the shared content link to this shared folder. Absent if there is no link on the folder. This is for an unreleased feature so it may not be returned yet.",parameter:"link_metadata",type:{optional:{datatype:"SharedContentLinkMetadata",namespace:"sharing"}}},{description:"Actions the current user may perform on the folder and its contents. The set of permissions corresponds to the FolderActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"FolderPermission",namespace:"sharing"}}}},{description:"Whether the folder inherits its members from its parent.",parameter:"access_inheritance",type:{datatype:"AccessInheritance",namespace:"sharing"}}],stone_type:"struct"},SharedLinkPolicy:{description:"Who can view shared links in this folder.",fields:[{description:"Links can be shared with anyone.",parameter:"anyone",type:{primitive:"Void"}},{description:"Links can be shared with anyone on the same team as the owner.",parameter:"team",type:{primitive:"Void"}},{description:"Links can only be shared among members of the shared folder.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ViewerInfoPolicy:{fields:[{description:"Viewer information is available on this file.",parameter:"enabled",type:{primitive:"Void"}},{description:"Viewer information is disabled on this file.",parameter:"disabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},"/1yZ":function(e,t,i){"use strict";t.a={files:{UploadSessionCursor:{fields:[{description:"The upload session ID (returned by :route:`upload_session/start`).",parameter:"session_id",type:{primitive:"String"}},{description:"The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error.",parameter:"offset",type:{primitive:"UInt64"}}],stone_type:"struct"},UploadSessionLookupError:{fields:[{description:"The upload session ID was not found or has expired. Upload sessions are valid for 48 hours.",parameter:"not_found",type:{primitive:"Void"}},{description:"The specified offset was incorrect. See the value for the correct offset. This error may occur when a previous request was received and processed successfully but the client did not receive the response, e.g. due to a network error.",parameter:"incorrect_offset",type:{datatype:"UploadSessionOffsetError",namespace:"files"}},{description:"You are attempting to append data to an upload session that has already been closed (i.e. committed).",parameter:"closed",type:{primitive:"Void"}},{description:"The session must be closed before calling upload_session/finish_batch.",parameter:"not_closed",type:{primitive:"Void"}},{description:"You can not append to the upload session because the size of a file should not reach the max file size limit (i.e. 350GB).",parameter:"too_large",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UploadSessionOffsetError:{fields:[{description:"The offset up to which data has been collected.",parameter:"correct_offset",type:{primitive:"UInt64"}}],stone_type:"struct"}}}},"/5e1":function(e,t){e.exports=function(e){return function(t,i,r){for(var o=-1,a=Object(t),n=r(t),s=n.length;s--;){var p=n[e?s:++o];if(!1===i(a[p],p,a))break}return t}}},"/BNV":function(e,t,i){"use strict";t.a={check:{EchoArg:{description:"EchoArg contains the arguments to be sent to the Dropbox servers.",fields:[{description:"The string that you'd like to be echoed back to you.",parameter:"query",type:{primitive:"String"}}],stone_type:"struct"},EchoResult:{description:"EchoResult contains the result returned from the Dropbox servers.",fields:[{description:"If everything worked correctly, this would be the same as query.",parameter:"result",type:{primitive:"String"}}],stone_type:"struct"}}}},"/FXl":function(e,t,i){"use strict";i.d(t,"a",(function(){return h})),i.d(t,"b",(function(){return y})),i.d(t,"c",(function(){return m}));var r=i("mXGw"),o=i.n(r);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e}).apply(this,arguments)}function s(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function p(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?s(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function d(e,t){if(null==e)return{};var i,r,o=function(e,t){if(null==e)return{};var i,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)i=a[r],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)i=a[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var l=o.a.createContext({}),m=function(e){return function(t){var i=c(t.components);return o.a.createElement(e,n({},t,{components:i}))}},c=function(e){var t=o.a.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):p(p({},t),e)),i},h=function(e){var t=c(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var i=e.components,r=e.mdxType,a=e.originalType,n=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),l=c(i),m=r,h=l["".concat(n,".").concat(m)]||l[m]||u[m]||a;return i?o.a.createElement(h,p(p({ref:t},s),{},{components:i})):o.a.createElement(h,p({ref:t},s))}));function y(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=i.length,n=new Array(a);n[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,n[1]=s;for(var d=2;d<a;d++)n[d]=i[d];return o.a.createElement.apply(null,n)}return o.a.createElement.apply(null,i)}f.displayName="MDXCreateElement"},"/HQh":function(e,t,i){"use strict";t.a={files:{LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},MoveBatchArg:{fields:[{description:"List of entries to be moved or copied. Each entry is :type:`RelocationPath`.",parameter:"entries",type:{list:{datatype:"RelocationPath",namespace:"files"}}},{description:"If there's a conflict with any file, have the Dropbox server try to autorename that file to avoid the conflict.",parameter:"autorename",type:{primitive:"Boolean"}},{description:"Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies.",parameter:"allow_ownership_transfer",type:{primitive:"Boolean"}}],stone_type:"struct"},MoveIntoVaultError:{fields:[{description:"Moving shared folder into Vault is not allowed.",parameter:"is_shared_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchErrorEntry:{fields:[{description:"User errors that retry won't help.",parameter:"relocation_error",type:{datatype:"RelocationError",namespace:"files"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchResultEntry:{fields:[{parameter:"success",type:{datatype:"Metadata",namespace:"files"}},{parameter:"failure",type:{datatype:"RelocationBatchErrorEntry",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchV2Launch:{description:"Result returned by :route:`copy_batch:2` or :route:`move_batch:2` that may either launch an asynchronous job or complete synchronously.",fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{parameter:"complete",type:{datatype:"RelocationBatchV2Result",namespace:"files"}}],stone_type:"union"},RelocationBatchV2Result:{fields:[{description:"Each entry in CopyBatchArg.entries or :field:`MoveBatchArg.entries` will appear at the same position inside :field:`RelocationBatchV2Result.entries`.",parameter:"entries",type:{list:{datatype:"RelocationBatchResultEntry",namespace:"files"}}}],stone_type:"struct"},RelocationError:{fields:[{parameter:"from_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"from_write",type:{datatype:"WriteError",namespace:"files"}},{parameter:"to",type:{datatype:"WriteError",namespace:"files"}},{description:"Shared folders can't be copied.",parameter:"cant_copy_shared_folder",type:{primitive:"Void"}},{description:"Your move operation would result in nested shared folders.  This is not allowed.",parameter:"cant_nest_shared_folder",type:{primitive:"Void"}},{description:"You cannot move a folder into itself.",parameter:"cant_move_folder_into_itself",type:{primitive:"Void"}},{description:"The operation would involve more than 10,000 files and folders.",parameter:"too_many_files",type:{primitive:"Void"}},{description:"There are duplicated/nested paths among :field:`RelocationArg.from_path` and :field:`RelocationArg.to_path`.",parameter:"duplicated_or_nested_paths",type:{primitive:"Void"}},{description:"Your move operation would result in an ownership transfer. You may reissue the request with the field :field:`RelocationArg.allow_ownership_transfer` to true.",parameter:"cant_transfer_ownership",type:{primitive:"Void"}},{description:"The current user does not have enough space to move or copy the files.",parameter:"insufficient_quota",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{description:"Can't move the shared folder to the given destination.",parameter:"cant_move_shared_folder",type:{primitive:"Void"}},{description:"Some content cannot be moved into Vault under certain circumstances, see detailed error.",parameter:"cant_move_into_vault",type:{datatype:"MoveIntoVaultError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationPath:{fields:[{description:"Path in the user's Dropbox to be copied or moved.",parameter:"from_path",type:{primitive:"String"}},{description:"Path in the user's Dropbox that is the destination.",parameter:"to_path",type:{primitive:"String"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"/Qyy":function(e,t,i){var r=i("dIZa"),o=i("SyCk"),a=i("q+I6"),n=i("9aUh");e.exports=function(e,t,i){if(!n(i))return!1;var s=typeof t;return!!("number"==s?o(i)&&a(t,i.length):"string"==s&&t in i)&&r(i[t],e)}},"/YmN":function(e,t,i){"use strict";t.a={team:{GroupsListContinueArg:{fields:[{description:"Indicates from what point to get the next set of groups.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},GroupsListContinueError:{fields:[{description:"The cursor is invalid.",parameter:"invalid_cursor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupsListResult:{fields:[{parameter:"groups",type:{list:{datatype:"GroupSummary",namespace:"team_common"}}},{description:"Pass the cursor into :route:`groups/list/continue` to obtain the additional groups.",parameter:"cursor",type:{primitive:"String"}},{description:"Is true if there are additional groups that have not been returned yet. An additional call to :route:`groups/list/continue` can retrieve them.",parameter:"has_more",type:{primitive:"Boolean"}}],stone_type:"struct"}},team_common:{GroupManagementType:{description:"The group type determines how a group is managed.",fields:[{description:"A group which is managed by selected users.",parameter:"user_managed",type:{primitive:"Void"}},{description:"A group which is managed by team admins only.",parameter:"company_managed",type:{primitive:"Void"}},{description:"A group which is managed automatically by Dropbox.",parameter:"system_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupSummary:{description:"Information about a group.",fields:[{parameter:"group_name",type:{primitive:"String"}},{parameter:"group_id",type:{primitive:"String"}},{description:"Who is allowed to manage the group.",parameter:"group_management_type",type:{datatype:"GroupManagementType",namespace:"team_common"}},{description:"External ID of group. This is an arbitrary ID that an admin can attach to a group.",parameter:"group_external_id",type:{optional:{primitive:"String"}}},{description:"The number of members in the group.",parameter:"member_count",type:{optional:{primitive:"UInt32"}}}],stone_type:"struct"}}}},"/d4A":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("TC1k"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"/knb":function(e,t,i){"use strict";t.a={team:{TeamFolderAccessError:{fields:[{description:"The team folder ID is invalid.",parameter:"invalid_team_folder_id",type:{primitive:"Void"}},{description:"The authenticated app does not have permission to manage that team folder.",parameter:"no_access",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderIdArg:{fields:[{description:"The ID of the team folder.",parameter:"team_folder_id",type:{primitive:"String"}}],stone_type:"struct"},TeamFolderInvalidStatusError:{fields:[{description:"The folder is active and the operation did not succeed.",parameter:"active",type:{primitive:"Void"}},{description:"The folder is archived and the operation did not succeed.",parameter:"archived",type:{primitive:"Void"}},{description:"The folder is being archived and the operation did not succeed.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderPermanentlyDeleteError:{description:"",fields:[{parameter:"access_error",type:{datatype:"TeamFolderAccessError",namespace:"team"}},{parameter:"status_error",type:{datatype:"TeamFolderInvalidStatusError",namespace:"team"}},{parameter:"team_shared_dropbox_error",type:{datatype:"TeamFolderTeamSharedDropboxError",namespace:"team"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderTeamSharedDropboxError:{fields:[{description:"This action is not allowed for a shared team root.",parameter:"disallowed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"/oIy":function(e,t,i){"use strict";t.a={team:{LegalHoldPolicy:{fields:[{description:"The legal hold id.",parameter:"id",type:{primitive:"String"}},{description:"Policy name.",parameter:"name",type:{primitive:"String"}},{description:"Team members IDs and number of permanetly deleted members under hold.",parameter:"members",type:{datatype:"MembersInfo",namespace:"team"}},{description:"The current state of the hold.",parameter:"status",type:{datatype:"LegalHoldStatus",namespace:"team"}},{description:"Start date of the legal hold policy.",parameter:"start_date",type:{primitive:"Timestamp"}},{description:"A description of the legal hold policy.",parameter:"description",type:{optional:{primitive:"String"}}},{description:"The time at which the legal hold was activated.",parameter:"activation_time",type:{optional:{primitive:"Timestamp"}}},{description:"End date of the legal hold policy.",parameter:"end_date",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},LegalHoldStatus:{fields:[{description:"The legal hold policy is active.",parameter:"active",type:{primitive:"Void"}},{description:"The legal hold policy was released.",parameter:"released",type:{primitive:"Void"}},{description:"The legal hold policy is activating.",parameter:"activating",type:{primitive:"Void"}},{description:"The legal hold policy is updating.",parameter:"updating",type:{primitive:"Void"}},{description:"The legal hold policy is exporting.",parameter:"exporting",type:{primitive:"Void"}},{description:"The legal hold policy is releasing.",parameter:"releasing",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LegalHoldsPolicyCreateArg:{fields:[{description:"Policy name.",parameter:"name",type:{primitive:"String"}},{description:"List of team member IDs added to the hold.",parameter:"members",type:{list:{primitive:"String"}}},{description:"A description of the legal hold policy.",parameter:"description",type:{optional:{primitive:"String"}}},{description:"start date of the legal hold policy.",parameter:"start_date",type:{optional:{primitive:"Timestamp"}}},{description:"end date of the legal hold policy.",parameter:"end_date",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},LegalHoldsPolicyCreateError:{fields:[{description:"There has been an unknown legal hold error.",parameter:"unknown_legal_hold_error",type:{primitive:"Void"}},{description:"You don't have permissions to perform this action.",parameter:"insufficient_permissions",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"Start date must be earlier than end date.",parameter:"start_date_is_later_than_end_date",type:{primitive:"Void"}},{description:"The users list must have at least one user.",parameter:"empty_members_list",type:{primitive:"Void"}},{description:"Some members in the members list are not valid to be placed under legal hold.",parameter:"invalid_members",type:{primitive:"Void"}},{description:"You cannot add more than 5 users in a legal hold.",parameter:"number_of_users_on_hold_is_greater_than_hold_limitation",type:{primitive:"Void"}},{description:"Temporary infrastructure failure, please retry.",parameter:"transient_error",type:{primitive:"Void"}},{description:"The name provided is already in use by another legal hold.",parameter:"name_must_be_unique",type:{primitive:"Void"}},{description:"Team exceeded legal hold quota.",parameter:"team_exceeded_legal_hold_quota",type:{primitive:"Void"}}],stone_type:"open_union"},MembersInfo:{fields:[{description:"Team member IDs of the users under this hold.",parameter:"team_member_ids",type:{list:{primitive:"String"}}},{description:"The number of permanently deleted users that were under this hold.",parameter:"permanently_deleted_users",type:{primitive:"UInt64"}}],stone_type:"struct"}}}},"/w4M":function(e,t,i){"use strict";t.a={files:{DeleteArg:{fields:[{description:"Path in the user's Dropbox to delete.",parameter:"path",type:{primitive:"String"}},{description:'Perform delete if given "rev" matches the existing file\'s latest "rev". This field does not support deleting a folder.',parameter:"parent_rev",type:{optional:{primitive:"String"}}}],stone_type:"struct"},DeleteError:{fields:[{parameter:"path_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"path_write",type:{datatype:"WriteError",namespace:"files"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{description:"There are too many files in one request. Please retry with fewer files.",parameter:"too_many_files",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"0711":function(e,t,i){var r=i("WRuO"),o=i("WMT/"),a=i("F3Ab"),n=i("wnk4"),s=i("ArpJ"),p=i("Fldm"),d=i("e766"),l=i("+Ckz"),m=i("CIBY"),c=i("2AbI"),h=i("zIph"),u=i("s3t7"),f=i("316b"),y=i("iXK7"),v=i("FQMq"),_=i("PqlX"),g=i("tfj2"),b=i("Bpme"),w=i("9aUh"),T=i("CPLO"),V=i("h0av"),k={};k["[object Arguments]"]=k["[object Array]"]=k["[object ArrayBuffer]"]=k["[object DataView]"]=k["[object Boolean]"]=k["[object Date]"]=k["[object Float32Array]"]=k["[object Float64Array]"]=k["[object Int8Array]"]=k["[object Int16Array]"]=k["[object Int32Array]"]=k["[object Map]"]=k["[object Number]"]=k["[object Object]"]=k["[object RegExp]"]=k["[object Set]"]=k["[object String]"]=k["[object Symbol]"]=k["[object Uint8Array]"]=k["[object Uint8ClampedArray]"]=k["[object Uint16Array]"]=k["[object Uint32Array]"]=!0,k["[object Error]"]=k["[object Function]"]=k["[object WeakMap]"]=!1,e.exports=function e(t,i,S,x,A,P){var D,I=1&i,E=2&i,L=4&i;if(S&&(D=A?S(t,x,A,P):S(t)),void 0!==D)return D;if(!w(t))return t;var R=_(t);if(R){if(D=f(t),!I)return d(t,D)}else{var M=u(t),F="[object Function]"==M||"[object GeneratorFunction]"==M;if(g(t))return p(t,I);if("[object Object]"==M||"[object Arguments]"==M||F&&!A){if(D=E||F?{}:v(t),!I)return E?m(t,s(D,t)):l(t,n(D,t))}else{if(!k[M])return A?t:{};D=y(t,M,I)}}P||(P=new r);var q=P.get(t);if(q)return q;P.set(t,D),T(t)?t.forEach((function(r){D.add(e(r,i,S,r,t,P))})):b(t)&&t.forEach((function(r,o){D.set(o,e(r,i,S,o,t,P))}));var U=L?E?h:c:E?keysIn:V,C=R?void 0:U(t);return o(C||t,(function(r,o){C&&(r=t[o=r]),a(D,o,e(r,i,S,o,t,P))})),D}},"07F0":function(e,t){e.exports=function(e,t){for(var i=-1,r=null==e?0:e.length,o=0,a=[];++i<r;){var n=e[i];t(n,i,e)&&(a[o++]=n)}return a}},"09y0":function(e,t,i){"use strict";t.a={files:{LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},MoveIntoVaultError:{fields:[{description:"Moving shared folder into Vault is not allowed.",parameter:"is_shared_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationArg:{fields:[{description:"Path in the user's Dropbox to be copied or moved.",parameter:"from_path",type:{primitive:"String"}},{description:"Path in the user's Dropbox that is the destination.",parameter:"to_path",type:{primitive:"String"}},{description:"If true, :route:`copy` will copy contents in shared folder, otherwise :field:`RelocationError.cant_copy_shared_folder` will be returned if :field:`from_path` contains shared folder. This field is always true for :route:`move`.",parameter:"allow_shared_folder",type:{primitive:"Boolean"}},{description:"If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict.",parameter:"autorename",type:{primitive:"Boolean"}},{description:"Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies.",parameter:"allow_ownership_transfer",type:{primitive:"Boolean"}}],stone_type:"struct"},RelocationError:{fields:[{parameter:"from_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"from_write",type:{datatype:"WriteError",namespace:"files"}},{parameter:"to",type:{datatype:"WriteError",namespace:"files"}},{description:"Shared folders can't be copied.",parameter:"cant_copy_shared_folder",type:{primitive:"Void"}},{description:"Your move operation would result in nested shared folders.  This is not allowed.",parameter:"cant_nest_shared_folder",type:{primitive:"Void"}},{description:"You cannot move a folder into itself.",parameter:"cant_move_folder_into_itself",type:{primitive:"Void"}},{description:"The operation would involve more than 10,000 files and folders.",parameter:"too_many_files",type:{primitive:"Void"}},{description:"There are duplicated/nested paths among :field:`RelocationArg.from_path` and :field:`RelocationArg.to_path`.",parameter:"duplicated_or_nested_paths",type:{primitive:"Void"}},{description:"Your move operation would result in an ownership transfer. You may reissue the request with the field :field:`RelocationArg.allow_ownership_transfer` to true.",parameter:"cant_transfer_ownership",type:{primitive:"Void"}},{description:"The current user does not have enough space to move or copy the files.",parameter:"insufficient_quota",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{description:"Can't move the shared folder to the given destination.",parameter:"cant_move_shared_folder",type:{primitive:"Void"}},{description:"Some content cannot be moved into Vault under certain circumstances, see detailed error.",parameter:"cant_move_into_vault",type:{datatype:"MoveIntoVaultError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"0CtA":function(e,t,i){"use strict";t.a={file_properties:{GetTemplateArg:{fields:[{description:"An identifier for template added by route  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}}],stone_type:"struct"},GetTemplateResult:{fields:[{description:"Display name for the template. Template names can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description for the template. Template descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Definitions of the property fields associated with this template. There can be up to 32 properties in a single template.",parameter:"fields",type:{list:{datatype:"PropertyFieldTemplate",namespace:"file_properties"}}}],stone_type:"struct"},PropertyFieldTemplate:{description:"Defines how a single property field may be structured. Used exclusively by :type:`PropertyGroupTemplate`.",fields:[{description:"Key of the property field being described. Property field keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description of the property field. Property field descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Data type of the value of this property field. This type will be enforced upon property creation and modifications.",parameter:"type",type:{datatype:"PropertyType",namespace:"file_properties"}}],stone_type:"struct"},PropertyType:{description:"Data type of the given property field added.",fields:[{description:"The associated property field will be of type string. Unicode is supported.",parameter:"string",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"0DHb":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("ELFn"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"0K2X":function(e,t,i){},"0KRy":function(e,t,i){var r=i("LSEb")(i("s3UK"),"Map");e.exports=r},"0RWC":function(e,t,i){"use strict";t.a={file_properties:{AddTemplateArg:{fields:[{description:"Display name for the template. Template names can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description for the template. Template descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Definitions of the property fields associated with this template. There can be up to 32 properties in a single template.",parameter:"fields",type:{list:{datatype:"PropertyFieldTemplate",namespace:"file_properties"}}}],stone_type:"struct"},AddTemplateResult:{fields:[{description:"An identifier for template added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}}],stone_type:"struct"},ModifyTemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"A property field key with that name already exists in the template.",parameter:"conflicting_property_names",type:{primitive:"Void"}},{description:"There are too many properties in the changed template. The maximum number of properties per template is 32.",parameter:"too_many_properties",type:{primitive:"Void"}},{description:"There are too many templates for the team.",parameter:"too_many_templates",type:{primitive:"Void"}},{description:"The template name, description or one or more of the property field keys is too large.",parameter:"template_attribute_too_large",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyFieldTemplate:{description:"Defines how a single property field may be structured. Used exclusively by :type:`PropertyGroupTemplate`.",fields:[{description:"Key of the property field being described. Property field keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description of the property field. Property field descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Data type of the value of this property field. This type will be enforced upon property creation and modifications.",parameter:"type",type:{datatype:"PropertyType",namespace:"file_properties"}}],stone_type:"struct"},PropertyType:{description:"Data type of the given property field added.",fields:[{description:"The associated property field will be of type string. Unicode is supported.",parameter:"string",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"0njP":function(e,t,i){"use strict";t.a={team:{CustomQuotaResult:{description:"User custom quota.",fields:[{description:"User's custom quota.",parameter:"success",type:{datatype:"UserCustomQuotaResult",namespace:"team"}},{description:"Invalid user (not in team).",parameter:"invalid_user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SetCustomQuotaArg:{fields:[{description:"List of users and their custom quotas.",parameter:"users_and_quotas",type:{list:{datatype:"UserCustomQuotaArg",namespace:"team"}}}],stone_type:"struct"},SetCustomQuotaError:{description:"Error returned when setting member custom quota.",fields:[{description:"A maximum of 1000 users can be set for a single call.",parameter:"too_many_users",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"Some of the users are on the excluded users list and can't have custom quota set.",parameter:"some_users_are_excluded",type:{primitive:"Void"}}],stone_type:"open_union"},UserCustomQuotaArg:{description:"User and their required custom quota in GB (1 TB = 1024 GB).",fields:[{parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"quota_gb",type:{primitive:"UInt32"}}],stone_type:"struct"},UserCustomQuotaResult:{description:"User and their custom quota in GB (1 TB = 1024 GB).  No quota returns if the user has no custom quota set.",fields:[{parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"quota_gb",type:{optional:{primitive:"UInt32"}}}],stone_type:"struct"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},"0qVv":function(e,t,i){var r=i("gKNW"),o=i("u2vY"),a=i("BwbT"),n=i("cTHi");e.exports=function(e){return a(e)?r(n(e)):o(e)}},"0z8Y":function(e,t,i){"use strict";t.a={sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FileMemberActionError:{fields:[{description:"Specified member was not found.",parameter:"invalid_member",type:{primitive:"Void"}},{description:"User does not have permission to perform this action on this member.",parameter:"no_permission",type:{primitive:"Void"}},{description:"Specified file was invalid or user does not have access.",parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{description:"The action cannot be completed because the target member does not have explicit access to the file. The return value is the access that the member has to the file from a parent folder.",parameter:"no_explicit_access",type:{datatype:"MemberAccessLevelResult",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FileMemberActionIndividualResult:{fields:[{description:"Member was successfully removed from this file. If AccessLevel is given, the member still has access via a parent shared folder.",parameter:"success",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"User was not able to perform this action.",parameter:"member_error",type:{datatype:"FileMemberActionError",namespace:"sharing"}}],stone_type:"union"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberAccessLevelResult:{description:"Contains information about a member's access level to content after an operation.",fields:[{description:"The member still has this level of access to the content through a parent folder.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"A localized string with additional information about why the user has this access level to the content.",parameter:"warning",type:{optional:{primitive:"String"}}},{description:"The parent folders that a member has access to. The field is present if the user has access to the first parent folder where the member gains access.",parameter:"access_details",type:{optional:{list:{datatype:"ParentFolderAccessInfo",namespace:"sharing"}}}}],stone_type:"struct"},MemberAction:{description:"Actions that may be taken on members of a shared folder.",fields:[{description:"Allow the member to keep a copy of the folder when removing.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Make the member an editor of the folder.",parameter:"make_editor",type:{primitive:"Void"}},{description:"Make the member an owner of the folder.",parameter:"make_owner",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder.",parameter:"make_viewer",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder without commenting permissions.",parameter:"make_viewer_no_comment",type:{primitive:"Void"}},{description:"Remove the member from the folder.",parameter:"remove",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberPermission:{description:"Whether the user is allowed to take the action on the associated member.",fields:[{description:"The action that the user may wish to take on the member.",parameter:"action",type:{datatype:"MemberAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},MemberSelector:{description:"Includes different ways to identify a member of a shared folder.",fields:[{description:"Dropbox account, team member, or group ID of member.",parameter:"dropbox_id",type:{primitive:"String"}},{description:"E-mail address of member.",parameter:"email",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ParentFolderAccessInfo:{description:"Contains information about a parent folder that a member has access to.",fields:[{description:"Display name for the folder.",parameter:"folder_name",type:{primitive:"String"}},{description:"The identifier of the parent shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The user's permissions for the parent shared folder.",parameter:"permissions",type:{list:{datatype:"MemberPermission",namespace:"sharing"}}},{description:"The full path to the parent shared folder relative to the acting user's root.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RemoveFileMemberArg:{description:"Arguments for :route:`remove_file_member_2`.",fields:[{description:"File from which to remove members.",parameter:"file",type:{primitive:"String"}},{description:"Member to remove from this file. Note that even if an email is specified, it may result in the removal of a user (not an invitee) if the user's main account corresponds to that email address.",parameter:"member",type:{datatype:"MemberSelector",namespace:"sharing"}}],stone_type:"struct"},RemoveFileMemberError:{description:"Errors for :route:`remove_file_member_2`.",fields:[{parameter:"user_error",type:{datatype:"SharingUserError",namespace:"sharing"}},{parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{description:"This member does not have explicit access to the file and therefore cannot be removed. The return value is the access that a user might have to the file from a parent folder.",parameter:"no_explicit_access",type:{datatype:"MemberAccessLevelResult",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingFileAccessError:{description:"User could not access this file.",fields:[{description:"Current user does not have sufficient privileges to perform the desired action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"File specified was not found.",parameter:"invalid_file",type:{primitive:"Void"}},{description:"A folder can't be shared this way. Use folder sharing or a shared link instead.",parameter:"is_folder",type:{primitive:"Void"}},{description:"A file inside a public folder can't be shared this way. Use a public link instead.",parameter:"inside_public_folder",type:{primitive:"Void"}},{description:"A Mac OS X package can't be shared this way. Use a shared link instead.",parameter:"inside_osx_package",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingUserError:{description:"User account had a problem preventing this action.",fields:[{description:"The current user must verify the account e-mail address before performing this action.",parameter:"email_unverified",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"1+Sa":function(e,t,i){"use strict";t.a={files:{ContentSyncSetting:{fields:[{description:"Id of the item this setting is applied to.",parameter:"id",type:{primitive:"String"}},{description:"Setting for this item.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SyncSetting:{fields:[{description:"On first sync to members' computers, the specified folder will follow its parent folder's setting or otherwise follow default sync behavior.",parameter:"default",type:{primitive:"Void"}},{description:"On first sync to members' computers, the specified folder will be set to not sync with selective sync.",parameter:"not_synced",type:{primitive:"Void"}},{description:"The specified folder's not_synced setting is inactive due to its location or other configuration changes. It will follow its parent folder's setting.",parameter:"not_synced_inactive",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SyncSettingArg:{fields:[{description:"On first sync to members' computers, the specified folder will follow its parent folder's setting or otherwise follow default sync behavior.",parameter:"default",type:{primitive:"Void"}},{description:"On first sync to members' computers, the specified folder will be set to not sync with selective sync.",parameter:"not_synced",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SyncSettingsError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{description:"Setting this combination of sync settings simultaneously is not supported.",parameter:"unsupported_combination",type:{primitive:"Void"}},{description:"The specified configuration is not supported.",parameter:"unsupported_configuration",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},team:{TeamFolderCreateArg:{fields:[{description:"Name for the new team folder.",parameter:"name",type:{primitive:"String"}},{description:"The sync setting to apply to this team folder. Only permitted if the team has team selective sync enabled.",parameter:"sync_setting",type:{optional:{datatype:"SyncSettingArg",namespace:"files"}}}],stone_type:"struct"},TeamFolderCreateError:{fields:[{description:"The provided name cannot be used.",parameter:"invalid_folder_name",type:{primitive:"Void"}},{description:"There is already a team folder with the provided name.",parameter:"folder_name_already_used",type:{primitive:"Void"}},{description:"The provided name cannot be used because it is reserved.",parameter:"folder_name_reserved",type:{primitive:"Void"}},{description:"An error occurred setting the sync settings.",parameter:"sync_settings_error",type:{datatype:"SyncSettingsError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderMetadata:{description:"Properties of a team folder.",fields:[{description:"The ID of the team folder.",parameter:"team_folder_id",type:{primitive:"String"}},{description:"The name of the team folder.",parameter:"name",type:{primitive:"String"}},{description:"The status of the team folder.",parameter:"status",type:{datatype:"TeamFolderStatus",namespace:"team"}},{description:"True if this team folder is a shared team root.",parameter:"is_team_shared_dropbox",type:{primitive:"Boolean"}},{description:"The sync setting applied to this team folder.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}},{description:"Sync settings applied to contents of this team folder.",parameter:"content_sync_settings",type:{list:{datatype:"ContentSyncSetting",namespace:"files"}}}],stone_type:"struct"},TeamFolderStatus:{fields:[{description:"The team folder and sub-folders are available to all members.",parameter:"active",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archived",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"1BSY":function(e,t,i){"use strict";t.a={file_properties:{PropertiesSearchContinueArg:{fields:[{description:"The cursor returned by your last call to :route:`properties/search` or :route:`properties/search/continue`.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},PropertiesSearchContinueError:{fields:[{description:"Indicates that the cursor has been invalidated. Call :route:`properties/search` to obtain a new cursor.",parameter:"reset",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PropertiesSearchMatch:{fields:[{description:"The ID for the matched file or folder.",parameter:"id",type:{primitive:"String"}},{description:"The path for the matched file or folder.",parameter:"path",type:{primitive:"String"}},{description:"Whether the file or folder is deleted.",parameter:"is_deleted",type:{primitive:"Boolean"}},{description:"List of custom property groups associated with the file.",parameter:"property_groups",type:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}],stone_type:"struct"},PropertiesSearchResult:{fields:[{description:"A list (possibly empty) of matches for the query.",parameter:"matches",type:{list:{datatype:"PropertiesSearchMatch",namespace:"file_properties"}}},{description:"Pass the cursor into :route:`properties/search/continue` to continue to receive search results. Cursor will be null when there are no more results.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}}}},"1CCj":function(e,t,i){"use strict";t.a={team:{AdminTier:{description:"Describes which team-related admin permissions a user has.",fields:[{description:"User is an administrator of the team - has all permissions.",parameter:"team_admin",type:{primitive:"Void"}},{description:"User can do most user provisioning, de-provisioning and management.",parameter:"user_management_admin",type:{primitive:"Void"}},{description:"User can do a limited set of common support tasks for existing users.",parameter:"support_admin",type:{primitive:"Void"}},{description:"User is not an admin of the team.",parameter:"member_only",type:{primitive:"Void"}}],stone_type:"union"},MembersSetPermissionsArg:{description:"Exactly one of team_member_id, email, or external_id must be provided to identify the user account.",fields:[{description:"Identity of user whose role will be set.",parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{description:"The new role of the member.",parameter:"new_role",type:{datatype:"AdminTier",namespace:"team"}}],stone_type:"struct"},MembersSetPermissionsError:{fields:[{description:"No matching user found. The provided team_member_id, email, or external_id does not exist on this team.",parameter:"user_not_found",type:{primitive:"Void"}},{description:"Cannot remove the admin setting of the last admin.",parameter:"last_admin",type:{primitive:"Void"}},{description:"The user is not a member of the team.",parameter:"user_not_in_team",type:{primitive:"Void"}},{description:"Cannot remove/grant permissions.",parameter:"cannot_set_permissions",type:{primitive:"Void"}},{description:"Team is full. The organization has no available licenses.",parameter:"team_license_limit",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MembersSetPermissionsResult:{fields:[{description:"The member ID of the user to which the change was applied.",parameter:"team_member_id",type:{primitive:"String"}},{description:"The role after the change.",parameter:"role",type:{datatype:"AdminTier",namespace:"team"}}],stone_type:"struct"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},"1CY1":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("5fF/"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"1Rff":function(e,t,i){"use strict";t.a={files:{UploadSessionStartArg:{fields:[{description:"If true, the current session will be closed, at which point you won't be able to call :route:`upload_session/append:2` anymore with the current session.",parameter:"close",type:{primitive:"Boolean"}}],stone_type:"struct"},UploadSessionStartResult:{fields:[{description:"A unique identifier for the upload session. Pass this to :route:`upload_session/append:2` and :route:`upload_session/finish`.",parameter:"session_id",type:{primitive:"String"}}],stone_type:"struct"}}}},"1Vew":function(e,t,i){"use strict";t.a={file_properties:{ListTemplateResult:{fields:[{description:"List of identifiers for templates added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_ids",type:{list:{primitive:"String"}}}],stone_type:"struct"},TemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"1d7n":function(e,t,i){"use strict";t.a={team:{DateRange:{description:"Input arguments that can be provided for most reports.",fields:[{description:"Optional starting date (inclusive). If start_date is None or too long ago, this field will  be set to 6 months ago.",parameter:"start_date",type:{optional:{primitive:"Timestamp"}}},{description:"Optional ending date (exclusive).",parameter:"end_date",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},DateRangeError:{description:"Errors that can originate from problems in input arguments to reports.",fields:[{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GetActivityReport:{description:"Activity Report Result. Each of the items in the storage report is an array of values, one value per day. If there is no data for a day, then the value will be None.",fields:[{description:"First date present in the results as 'YYYY-MM-DD' or None.",parameter:"start_date",type:{primitive:"String"}},{description:"Array of total number of adds by team members.",parameter:"adds",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of number of edits by team members. If the same user edits the same file multiple times this is counted as a single edit.",parameter:"edits",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of total number of deletes by team members.",parameter:"deletes",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of the number of users who have been active in the last 28 days.",parameter:"active_users_28_day",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of the number of users who have been active in the last week.",parameter:"active_users_7_day",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of the number of users who have been active in the last day.",parameter:"active_users_1_day",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of the number of shared folders with some activity in the last 28 days.",parameter:"active_shared_folders_28_day",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of the number of shared folders with some activity in the last week.",parameter:"active_shared_folders_7_day",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of the number of shared folders with some activity in the last day.",parameter:"active_shared_folders_1_day",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of the number of shared links created.",parameter:"shared_links_created",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of the number of views by team users to shared links created by the team.",parameter:"shared_links_viewed_by_team",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of the number of views by users outside of the team to shared links created by the team.",parameter:"shared_links_viewed_by_outside_user",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of the number of views by non-logged-in users to shared links created by the team.",parameter:"shared_links_viewed_by_not_logged_in",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of the total number of views to shared links created by the team.",parameter:"shared_links_viewed_total",type:{list:{optional:{primitive:"UInt64"}}}}],stone_type:"struct"}}}},"1dvN":function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(i("mXGw")),a=i("LcPu");t.wrapRootElement=function(e){var t=e.element;return o.default.createElement(a.HelmetProvider,null,t)}},"1ezk":function(e,t){e.exports=function(){return!1}},"1f4F":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("oK5c"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"1pq6":function(e,t,i){"use strict";t.a={account:{PhotoSourceArg:{fields:[{description:"Image data in base64-encoded bytes.",parameter:"base64_data",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SetProfilePhotoArg:{fields:[{description:"Image to set as the user's new profile photo.",parameter:"photo",type:{datatype:"PhotoSourceArg",namespace:"account"}}],stone_type:"struct"},SetProfilePhotoError:{fields:[{description:"File cannot be set as profile photo.",parameter:"file_type_error",type:{primitive:"Void"}},{description:"File cannot exceed 10 MB.",parameter:"file_size_error",type:{primitive:"Void"}},{description:"Image must be larger than 128 x 128.",parameter:"dimension_error",type:{primitive:"Void"}},{description:"Image could not be thumbnailed.",parameter:"thumbnail_error",type:{primitive:"Void"}},{description:"Temporary infrastructure failure, please retry.",parameter:"transient_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SetProfilePhotoResult:{fields:[{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{primitive:"String"}}],stone_type:"struct"}}}},"1ydd":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("EYXL"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"2AbI":function(e,t,i){var r=i("6TGQ"),o=i("tb+2"),a=i("h0av");e.exports=function(e){return r(e,a,o)}},"2DHn":function(e,t,i){"use strict";t.a={sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AddFileMemberArgs:{description:"Arguments for :route:`add_file_member`.",fields:[{description:"File to which to add members.",parameter:"file",type:{primitive:"String"}},{description:"Members to add. Note that even an email address is given, this may result in a user being directy added to the membership if that email is the user's main account email.",parameter:"members",type:{list:{datatype:"MemberSelector",namespace:"sharing"}}},{description:"Message to send to added members in their invitation.",parameter:"custom_message",type:{optional:{primitive:"String"}}},{description:"Whether added members should be notified via device notifications of their invitation.",parameter:"quiet",type:{primitive:"Boolean"}},{description:"AccessLevel union object, describing what access level we want to give new members.",parameter:"access_level",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"If the custom message should be added as a comment on the file.",parameter:"add_message_as_comment",type:{primitive:"Boolean"}}],stone_type:"struct"},AddFileMemberError:{description:"Errors for :route:`add_file_member`.",fields:[{parameter:"user_error",type:{datatype:"SharingUserError",namespace:"sharing"}},{parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{description:"The user has reached the rate limit for invitations.",parameter:"rate_limit",type:{primitive:"Void"}},{description:"The custom message did not pass comment permissions checks.",parameter:"invalid_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FileMemberActionError:{fields:[{description:"Specified member was not found.",parameter:"invalid_member",type:{primitive:"Void"}},{description:"User does not have permission to perform this action on this member.",parameter:"no_permission",type:{primitive:"Void"}},{description:"Specified file was invalid or user does not have access.",parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{description:"The action cannot be completed because the target member does not have explicit access to the file. The return value is the access that the member has to the file from a parent folder.",parameter:"no_explicit_access",type:{datatype:"MemberAccessLevelResult",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FileMemberActionIndividualResult:{fields:[{description:"Member was successfully removed from this file. If AccessLevel is given, the member still has access via a parent shared folder.",parameter:"success",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"User was not able to perform this action.",parameter:"member_error",type:{datatype:"FileMemberActionError",namespace:"sharing"}}],stone_type:"union"},FileMemberActionResult:{description:"Per-member result for :route:`add_file_member` or :route:`change_file_member_access`.",fields:[{description:"One of specified input members.",parameter:"member",type:{datatype:"MemberSelector",namespace:"sharing"}},{description:"The outcome of the action on this member.",parameter:"result",type:{datatype:"FileMemberActionIndividualResult",namespace:"sharing"}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberAccessLevelResult:{description:"Contains information about a member's access level to content after an operation.",fields:[{description:"The member still has this level of access to the content through a parent folder.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"A localized string with additional information about why the user has this access level to the content.",parameter:"warning",type:{optional:{primitive:"String"}}},{description:"The parent folders that a member has access to. The field is present if the user has access to the first parent folder where the member gains access.",parameter:"access_details",type:{optional:{list:{datatype:"ParentFolderAccessInfo",namespace:"sharing"}}}}],stone_type:"struct"},MemberAction:{description:"Actions that may be taken on members of a shared folder.",fields:[{description:"Allow the member to keep a copy of the folder when removing.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Make the member an editor of the folder.",parameter:"make_editor",type:{primitive:"Void"}},{description:"Make the member an owner of the folder.",parameter:"make_owner",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder.",parameter:"make_viewer",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder without commenting permissions.",parameter:"make_viewer_no_comment",type:{primitive:"Void"}},{description:"Remove the member from the folder.",parameter:"remove",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberPermission:{description:"Whether the user is allowed to take the action on the associated member.",fields:[{description:"The action that the user may wish to take on the member.",parameter:"action",type:{datatype:"MemberAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},MemberSelector:{description:"Includes different ways to identify a member of a shared folder.",fields:[{description:"Dropbox account, team member, or group ID of member.",parameter:"dropbox_id",type:{primitive:"String"}},{description:"E-mail address of member.",parameter:"email",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ParentFolderAccessInfo:{description:"Contains information about a parent folder that a member has access to.",fields:[{description:"Display name for the folder.",parameter:"folder_name",type:{primitive:"String"}},{description:"The identifier of the parent shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The user's permissions for the parent shared folder.",parameter:"permissions",type:{list:{datatype:"MemberPermission",namespace:"sharing"}}},{description:"The full path to the parent shared folder relative to the acting user's root.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingFileAccessError:{description:"User could not access this file.",fields:[{description:"Current user does not have sufficient privileges to perform the desired action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"File specified was not found.",parameter:"invalid_file",type:{primitive:"Void"}},{description:"A folder can't be shared this way. Use folder sharing or a shared link instead.",parameter:"is_folder",type:{primitive:"Void"}},{description:"A file inside a public folder can't be shared this way. Use a public link instead.",parameter:"inside_public_folder",type:{primitive:"Void"}},{description:"A Mac OS X package can't be shared this way. Use a shared link instead.",parameter:"inside_osx_package",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingUserError:{description:"User account had a problem preventing this action.",fields:[{description:"The current user must verify the account e-mail address before performing this action.",parameter:"email_unverified",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"2EQx":function(e,t,i){var r=i("9aUh");e.exports=function(e){return e==e&&!r(e)}},"2GMX":function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.codeRenderer=n,t.default=function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=new r.default.Renderer;function s(e,t){for(var i=e.children;;){if(!i.length||i[i.length-1].level===t)return i;i=i[i.length-1].children}}function p(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",i=t.split(/(\{\{.*?\}\})/),r=i.map((function(t){var i=t.match(/\{\{(.*)\}\}/);return i?(e.tree.splice(e.tree.indexOf(e.elements[i[1]]),1),e.elements[i[1]]):""!==t?o.default.decode(t):null}));return r}function d(i){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=arguments.length>2?arguments[2]:void 0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:i,n=e.nextElementId++,s=null,d=t.elements&&t.elements[a];return o&&(s=Array.isArray(o)?o.map(p):p(o)),e.elements[n]=t.createElement(d||i,Object.assign({key:n},r,d?{context:e.context}:{}),s),e.tree.push(e.elements[n]),"{{".concat(n,"}}")}return a.code=i.code||n(e,t),a.html=i.html||function(i){var r=e.nextElementId++;e.tree.push(t.createElement("div",{key:r,dangerouslySetInnerHTML:{__html:i}}))},a.paragraph=i.paragraph||function(e){return d("p",null,e)},a.blockquote=i.blockquote||function(e){return d("blockquote",null,e)},a.link=i.link||function(e,t,i){return d("a",{href:e,title:t},i)},a.br=i.br||function(){return d("br")},a.hr=i.hr||function(){return d("hr")},a.strong=i.strong||function(e){return d("strong",null,e)},a.del=i.del||function(e){return d("del",null,e)},a.em=i.em||function(e){return d("em",null,e)},a.heading=i.heading||function(t,i){e.currentId=e.currentId.slice(0,i-1),e.currentId.push(t.replace(/\s/g,"-").toLowerCase());var r=e.currentId.join("-"),o=e.toc[e.toc.length-1];!o||o.level>i?e.toc.push({id:r,title:t,level:i,children:[]}):s(o,i).push({id:r,title:t,level:i,children:[]});return d("h".concat(i),{id:r},t)},a.list=i.list||function(e,t){return d(t?"ol":"ul",null,e)},a.listitem=i.listitem||function(e){return d("li",null,e)},a.table=i.table||function(e,t){return d("table",null,[d("thead",null,e),d("tbody",null,t)])},a.thead=i.thead||function(e){return d("thead",null,e)},a.tbody=i.tbody||function(e){return d("tbody",null,e)},a.tablerow=i.tablerow||function(e){return d("tr",null,e)},a.tablecell=i.tablecell||function(e,t){return d(t.header?"th":"td",{className:t.align?"text-".concat(t.align):void 0},e)},a.codespan=i.codespan||function(e){return d("code",null,e,"codespan")},a.image=i.image||function(e,t,i){return d("img",{src:e,alt:i})},a};var r=a(i("Ax1p")),o=a(i("P9a0"));function a(e){return e&&e.__esModule?e:{default:e}}function n(e,t){function i(e){var i;try{i=t.createElement("code",{className:"language-".concat(e.language),dangerouslySetInnerHTML:t.highlight?{__html:t.highlight(e.language,e.code)}:null},t.highlight?null:e.code)}catch(r){console.warn("".concat(e.language," is not supported by your defined highlighter.")),i=t.createElement("code",null,e.code)}return t.createElement("pre",null,i)}return function(r,o){var a=e.nextElementId++;return e.elements[a]=t.createElement(t.elements&&t.elements.code||i,{key:a,code:r,language:o}),e.tree.push(e.elements[a]),"{{".concat(a,"}}")}}},"2GWU":function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{ExcludedUsersListArg:{description:"Excluded users list argument.",fields:[{description:"Number of results to return per call.",parameter:"limit",type:{primitive:"UInt32"}}],stone_type:"struct"},ExcludedUsersListError:{description:"Excluded users list error.",fields:[{description:"An error occurred.",parameter:"list_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ExcludedUsersListResult:{description:"Excluded users list result.",fields:[{parameter:"users",type:{list:{datatype:"MemberProfile",namespace:"team"}}},{description:"Is true if there are additional excluded users that have not been returned yet. An additional call to :route:`member_space_limits/excluded_users/list/continue` can retrieve them.",parameter:"has_more",type:{primitive:"Boolean"}},{description:"Pass the cursor into :route:`member_space_limits/excluded_users/list/continue` to obtain additional excluded users.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberProfile:{description:"Basic member profile.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},"2H5u":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("TYo9"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"2Hgx":function(e,t){var i="undefined"!=typeof Element,r="function"==typeof Map,o="function"==typeof Set,a="function"==typeof ArrayBuffer&&!!ArrayBuffer.isView;e.exports=function(e,t){try{return function e(t,n){if(t===n)return!0;if(t&&n&&"object"==typeof t&&"object"==typeof n){if(t.constructor!==n.constructor)return!1;var s,p,d,l;if(Array.isArray(t)){if((s=t.length)!=n.length)return!1;for(p=s;0!=p--;)if(!e(t[p],n[p]))return!1;return!0}if(r&&t instanceof Map&&n instanceof Map){if(t.size!==n.size)return!1;for(l=t.entries();!(p=l.next()).done;)if(!n.has(p.value[0]))return!1;for(l=t.entries();!(p=l.next()).done;)if(!e(p.value[1],n.get(p.value[0])))return!1;return!0}if(o&&t instanceof Set&&n instanceof Set){if(t.size!==n.size)return!1;for(l=t.entries();!(p=l.next()).done;)if(!n.has(p.value[0]))return!1;return!0}if(a&&ArrayBuffer.isView(t)&&ArrayBuffer.isView(n)){if((s=t.length)!=n.length)return!1;for(p=s;0!=p--;)if(t[p]!==n[p])return!1;return!0}if(t.constructor===RegExp)return t.source===n.source&&t.flags===n.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===n.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===n.toString();if((s=(d=Object.keys(t)).length)!==Object.keys(n).length)return!1;for(p=s;0!=p--;)if(!Object.prototype.hasOwnProperty.call(n,d[p]))return!1;if(i&&t instanceof Element)return!1;for(p=s;0!=p--;)if(("_owner"!==d[p]&&"__v"!==d[p]&&"__o"!==d[p]||!t.$$typeof)&&!e(t[d[p]],n[d[p]]))return!1;return!0}return t!=t&&n!=n}(e,t)}catch(n){if((n.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw n}}},"2Nut":function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},files:{DeleteBatchError:{fields:[{description:"Use :field:`DeleteError.too_many_write_operations`. :route:`delete_batch` now provides smaller granularity about which entry has failed because of this.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},DeleteBatchJobStatus:{fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The batch delete has finished.",parameter:"complete",type:{datatype:"DeleteBatchResult",namespace:"files"}},{description:"The batch delete has failed.",parameter:"failed",type:{datatype:"DeleteBatchError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},DeleteBatchResult:{fields:[{description:"Each entry in :field:`DeleteBatchArg.entries` will appear at the same position inside :field:`DeleteBatchResult.entries`.",parameter:"entries",type:{list:{datatype:"DeleteBatchResultEntry",namespace:"files"}}}],stone_type:"struct"},DeleteBatchResultData:{fields:[{description:"Metadata of the deleted object.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}}],stone_type:"struct"},DeleteBatchResultEntry:{fields:[{parameter:"success",type:{datatype:"DeleteBatchResultData",namespace:"files"}},{parameter:"failure",type:{datatype:"DeleteError",namespace:"files"}}],stone_type:"union"},DeleteError:{fields:[{parameter:"path_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"path_write",type:{datatype:"WriteError",namespace:"files"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{description:"There are too many files in one request. Please retry with fewer files.",parameter:"too_many_files",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"2XF/":function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},files:{LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},MoveIntoVaultError:{fields:[{description:"Moving shared folder into Vault is not allowed.",parameter:"is_shared_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchError:{fields:[{parameter:"from_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"from_write",type:{datatype:"WriteError",namespace:"files"}},{parameter:"to",type:{datatype:"WriteError",namespace:"files"}},{description:"Shared folders can't be copied.",parameter:"cant_copy_shared_folder",type:{primitive:"Void"}},{description:"Your move operation would result in nested shared folders.  This is not allowed.",parameter:"cant_nest_shared_folder",type:{primitive:"Void"}},{description:"You cannot move a folder into itself.",parameter:"cant_move_folder_into_itself",type:{primitive:"Void"}},{description:"The operation would involve more than 10,000 files and folders.",parameter:"too_many_files",type:{primitive:"Void"}},{description:"There are duplicated/nested paths among :field:`RelocationArg.from_path` and :field:`RelocationArg.to_path`.",parameter:"duplicated_or_nested_paths",type:{primitive:"Void"}},{description:"Your move operation would result in an ownership transfer. You may reissue the request with the field :field:`RelocationArg.allow_ownership_transfer` to true.",parameter:"cant_transfer_ownership",type:{primitive:"Void"}},{description:"The current user does not have enough space to move or copy the files.",parameter:"insufficient_quota",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{description:"Can't move the shared folder to the given destination.",parameter:"cant_move_shared_folder",type:{primitive:"Void"}},{description:"Some content cannot be moved into Vault under certain circumstances, see detailed error.",parameter:"cant_move_into_vault",type:{datatype:"MoveIntoVaultError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchJobStatus:{fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The copy or move batch job has finished.",parameter:"complete",type:{datatype:"RelocationBatchResult",namespace:"files"}},{description:"The copy or move batch job has failed with exception.",parameter:"failed",type:{datatype:"RelocationBatchError",namespace:"files"}}],stone_type:"union"},RelocationBatchResult:{fields:[{parameter:"entries",type:{list:{datatype:"RelocationBatchResultData",namespace:"files"}}}],stone_type:"struct"},RelocationBatchResultData:{fields:[{description:"Metadata of the relocated object.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"2j3q":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("yEgL"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"2jrP":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("S0fA"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"2rXp":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("JNeY"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"2wRU":function(e,t,i){var r=i("GI0s"),o=i("ckUF"),a=i("T9Ud"),n={};n["[object Float32Array]"]=n["[object Float64Array]"]=n["[object Int8Array]"]=n["[object Int16Array]"]=n["[object Int32Array]"]=n["[object Uint8Array]"]=n["[object Uint8ClampedArray]"]=n["[object Uint16Array]"]=n["[object Uint32Array]"]=!0,n["[object Arguments]"]=n["[object Array]"]=n["[object ArrayBuffer]"]=n["[object Boolean]"]=n["[object DataView]"]=n["[object Date]"]=n["[object Error]"]=n["[object Function]"]=n["[object Map]"]=n["[object Number]"]=n["[object Object]"]=n["[object RegExp]"]=n["[object Set]"]=n["[object String]"]=n["[object WeakMap]"]=!1,e.exports=function(e){return a(e)&&o(e.length)&&!!n[r(e)]}},"2xEH":function(e,t){var i=Math.max;e.exports=function(e,t,r,o){for(var a=-1,n=e.length,s=r.length,p=-1,d=t.length,l=i(n-s,0),m=Array(d+l),c=!o;++p<d;)m[p]=t[p];for(;++a<s;)(c||a<n)&&(m[r[a]]=e[a]);for(;l--;)m[p++]=e[a++];return m}},"316b":function(e,t){var i=Object.prototype.hasOwnProperty;e.exports=function(e){var t=e.length,r=new e.constructor(t);return t&&"string"==typeof e[0]&&i.call(e,"index")&&(r.index=e.index,r.input=e.input),r}},"35gP":function(e,t,i){"use strict";t.a={contacts:{DeleteManualContactsArg:{fields:[{description:"List of manually added contacts to be deleted.",parameter:"email_addresses",type:{list:{primitive:"String"}}}],stone_type:"struct"},DeleteManualContactsError:{fields:[{description:"Can't delete contacts from this list. Make sure the list only has manually added contacts. The deletion was cancelled.",parameter:"contacts_not_found",type:{list:{primitive:"String"}}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"37CK":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("0RWC"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"3AT2":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("cWYs"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"3GNe":function(e,t,i){var r=i("+dZb")("mapValues",i("qg2j"));r.placeholder=i("IOY3"),e.exports=r},"3MED":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("S7zG"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"3Tf3":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("louk"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"3kU/":function(e,t,i){var r=i("2wRU"),o=i("TsNJ"),a=i("DhoL"),n=a&&a.isTypedArray,s=n?o(n):r;e.exports=s},"3ssa":function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},files:{LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},MoveIntoVaultError:{fields:[{description:"Moving shared folder into Vault is not allowed.",parameter:"is_shared_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchErrorEntry:{fields:[{description:"User errors that retry won't help.",parameter:"relocation_error",type:{datatype:"RelocationError",namespace:"files"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchResultEntry:{fields:[{parameter:"success",type:{datatype:"Metadata",namespace:"files"}},{parameter:"failure",type:{datatype:"RelocationBatchErrorEntry",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchV2JobStatus:{description:"Result returned by :route:`copy_batch/check:2` or :route:`move_batch/check:2` that may either be in progress or completed with result for each entry.",fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The copy or move batch job has finished.",parameter:"complete",type:{datatype:"RelocationBatchV2Result",namespace:"files"}}],stone_type:"union"},RelocationBatchV2Result:{fields:[{description:"Each entry in CopyBatchArg.entries or :field:`MoveBatchArg.entries` will appear at the same position inside :field:`RelocationBatchV2Result.entries`.",parameter:"entries",type:{list:{datatype:"RelocationBatchResultEntry",namespace:"files"}}}],stone_type:"struct"},RelocationError:{fields:[{parameter:"from_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"from_write",type:{datatype:"WriteError",namespace:"files"}},{parameter:"to",type:{datatype:"WriteError",namespace:"files"}},{description:"Shared folders can't be copied.",parameter:"cant_copy_shared_folder",type:{primitive:"Void"}},{description:"Your move operation would result in nested shared folders.  This is not allowed.",parameter:"cant_nest_shared_folder",type:{primitive:"Void"}},{description:"You cannot move a folder into itself.",parameter:"cant_move_folder_into_itself",type:{primitive:"Void"}},{description:"The operation would involve more than 10,000 files and folders.",parameter:"too_many_files",type:{primitive:"Void"}},{description:"There are duplicated/nested paths among :field:`RelocationArg.from_path` and :field:`RelocationArg.to_path`.",parameter:"duplicated_or_nested_paths",type:{primitive:"Void"}},{description:"Your move operation would result in an ownership transfer. You may reissue the request with the field :field:`RelocationArg.allow_ownership_transfer` to true.",parameter:"cant_transfer_ownership",type:{primitive:"Void"}},{description:"The current user does not have enough space to move or copy the files.",parameter:"insufficient_quota",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{description:"Can't move the shared folder to the given destination.",parameter:"cant_move_shared_folder",type:{primitive:"Void"}},{description:"Some content cannot be moved into Vault under certain circumstances, see detailed error.",parameter:"cant_move_into_vault",type:{datatype:"MoveIntoVaultError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"4DU+":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("EbHV"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"4a20":function(e,t){e.exports=function(e){return this.__data__.has(e)}},"4lWb":function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{AdminTier:{description:"Describes which team-related admin permissions a user has.",fields:[{description:"User is an administrator of the team - has all permissions.",parameter:"team_admin",type:{primitive:"Void"}},{description:"User can do most user provisioning, de-provisioning and management.",parameter:"user_management_admin",type:{primitive:"Void"}},{description:"User can do a limited set of common support tasks for existing users.",parameter:"support_admin",type:{primitive:"Void"}},{description:"User is not an admin of the team.",parameter:"member_only",type:{primitive:"Void"}}],stone_type:"union"},MemberAddResult:{description:"Describes the result of attempting to add a single user to the team. 'success' is the only value indicating that a user was indeed added to the team - the other values explain the type of failure that occurred, and include the email of the user for which the operation has failed.",fields:[{description:"Describes a user that was successfully added to the team.",parameter:"success",type:{datatype:"TeamMemberInfo",namespace:"team"}},{description:"Team is already full. The organization has no available licenses.",parameter:"team_license_limit",type:{primitive:"String"}},{description:"Team is already full. The free team member limit has been reached.",parameter:"free_team_member_limit_reached",type:{primitive:"String"}},{description:"User is already on this team. The provided email address is associated with a user who is already a member of (including in recoverable state) or invited to the team.",parameter:"user_already_on_team",type:{primitive:"String"}},{description:"User is already on another team. The provided email address is associated with a user that is already a member or invited to another team.",parameter:"user_on_another_team",type:{primitive:"String"}},{description:"User is already paired.",parameter:"user_already_paired",type:{primitive:"String"}},{description:"User migration has failed.",parameter:"user_migration_failed",type:{primitive:"String"}},{description:"A user with the given external member ID already exists on the team (including in recoverable state).",parameter:"duplicate_external_member_id",type:{primitive:"String"}},{description:"A user with the given persistent ID already exists on the team (including in recoverable state).",parameter:"duplicate_member_persistent_id",type:{primitive:"String"}},{description:"Persistent ID is only available to teams with persistent ID SAML configuration. Please contact Dropbox for more information.",parameter:"persistent_id_disabled",type:{primitive:"String"}},{description:"User creation has failed.",parameter:"user_creation_failed",type:{primitive:"String"}}],stone_type:"union"},MembersAddJobStatus:{fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The asynchronous job has finished. For each member that was specified in the parameter :type:`MembersAddArg` that was provided to :route:`members/add`, a corresponding item is returned in this list.",parameter:"complete",type:{list:{datatype:"MemberAddResult",namespace:"team"}}},{description:"The asynchronous job returned an error. The string contains an error message.",parameter:"failed",type:{primitive:"String"}}],stone_type:"union"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberInfo:{description:"Information about a team member.",fields:[{description:"Profile of a user as a member of a team.",parameter:"profile",type:{datatype:"TeamMemberProfile",namespace:"team"}},{description:"The user's role in the team.",parameter:"role",type:{datatype:"AdminTier",namespace:"team"}}],stone_type:"struct"},TeamMemberProfile:{description:"Profile of a user as a member of a team.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"List of group IDs of groups that the user belongs to.",parameter:"groups",type:{list:{primitive:"String"}}},{description:"The namespace id of the user's root folder.",parameter:"member_folder_id",type:{primitive:"String"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},"4mhO":function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},"4pAO":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("UHWX"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"4tS/":function(e,t,i){},"5+lF":function(e,t,i){var r=i("naAV");e.exports=function(e,t){var i=t?r(e.buffer):e.buffer;return new e.constructor(i,e.byteOffset,e.byteLength)}},"5/k4":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("rmlw"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"5Avs":function(e,t){e.exports=function(e,t){for(var i=-1,r=null==e?0:e.length;++i<r;)if(t(e[i],i,e))return!0;return!1}},"5Bmw":function(e,t,i){"use strict";t.a={team:{RevokeLinkedApiAppArg:{fields:[{description:"The application's unique id.",parameter:"app_id",type:{primitive:"String"}},{description:"The unique id of the member owning the device.",parameter:"team_member_id",type:{primitive:"String"}},{description:"This flag is not longer supported, the application dedicated folder (in case the application uses  one) will be kept.",parameter:"keep_app_folder",type:{primitive:"Boolean"}}],stone_type:"struct"},RevokeLinkedApiAppBatchArg:{fields:[{parameter:"revoke_linked_app",type:{list:{datatype:"RevokeLinkedApiAppArg",namespace:"team"}}}],stone_type:"struct"},RevokeLinkedAppBatchError:{description:"Error returned by :route:`linked_apps/revoke_linked_app_batch`.",fields:[{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RevokeLinkedAppBatchResult:{fields:[{parameter:"revoke_linked_app_status",type:{list:{datatype:"RevokeLinkedAppStatus",namespace:"team"}}}],stone_type:"struct"},RevokeLinkedAppError:{description:"Error returned by :route:`linked_apps/revoke_linked_app`.",fields:[{description:"Application not found.",parameter:"app_not_found",type:{primitive:"Void"}},{description:"Member not found.",parameter:"member_not_found",type:{primitive:"Void"}},{description:"App folder removal is not supported.",parameter:"app_folder_removal_not_supported",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RevokeLinkedAppStatus:{fields:[{description:"Result of the revoking request.",parameter:"success",type:{primitive:"Boolean"}},{description:"The error cause in case of a failure.",parameter:"error_type",type:{optional:{datatype:"RevokeLinkedAppError",namespace:"team"}}}],stone_type:"struct"}}}},"5LHb":function(e,t,i){"use strict";t.__esModule=!0,t.useScrollRestoration=t.ScrollContainer=t.ScrollContext=void 0;var r=i("czn3");t.ScrollContext=r.ScrollHandler;var o=i("7UJ8");t.ScrollContainer=o.ScrollContainer;var a=i("xvMO");t.useScrollRestoration=a.useScrollRestoration},"5Q6c":function(e,t,i){"use strict";t.a={sharing:{AccessInheritance:{description:"Information about the inheritance policy of a shared folder.",fields:[{description:"The shared folder inherits its members from the parent folder.",parameter:"inherit",type:{primitive:"Void"}},{description:"The shared folder does not inherit its members from the parent folder.",parameter:"no_inherit",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AclUpdatePolicy:{description:"Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.",fields:[{description:"Only the owner can update the ACL.",parameter:"owner",type:{primitive:"Void"}},{description:"Any editor can update the ACL. This may be further restricted to editors on the same team.",parameter:"editors",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AudienceExceptionContentInfo:{description:"Information about the content that has a link audience different than that of this folder.",fields:[{description:"The name of the content, which is either a file or a folder.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},AudienceExceptions:{description:"The total count and truncated list of information of content inside this folder that has a different audience than the link on this folder. This is only returned for folders.",fields:[{parameter:"count",type:{primitive:"UInt32"}},{description:"A truncated list of some of the content that is an exception. The length of this list could be smaller than the count since it is only a sample but will not be empty as long as count is not 0.",parameter:"exceptions",type:{list:{datatype:"AudienceExceptionContentInfo",namespace:"sharing"}}}],stone_type:"struct"},AudienceRestrictingSharedFolder:{description:"Information about the shared folder that prevents the link audience for this link from being more restrictive.",fields:[{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The name of the shared folder.",parameter:"name",type:{primitive:"String"}},{description:"The link audience of the shared folder.",parameter:"audience",type:{datatype:"LinkAudience",namespace:"sharing"}}],stone_type:"struct"},FolderAction:{description:"Actions that may be taken on shared folders.",fields:[{description:"Change folder options, such as who can be invited to join the folder.",parameter:"change_options",type:{primitive:"Void"}},{description:"Disable viewer information for this folder.",parameter:"disable_viewer_info",type:{primitive:"Void"}},{description:"Change or edit contents of the folder.",parameter:"edit_contents",type:{primitive:"Void"}},{description:"Enable viewer information on the folder.",parameter:"enable_viewer_info",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read and write permission.",parameter:"invite_editor",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission.",parameter:"invite_viewer",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission but no comment permissions.",parameter:"invite_viewer_no_comment",type:{primitive:"Void"}},{description:"Relinquish one's own membership in the folder.",parameter:"relinquish_membership",type:{primitive:"Void"}},{description:"Unmount the folder.",parameter:"unmount",type:{primitive:"Void"}},{description:"Stop sharing this folder.",parameter:"unshare",type:{primitive:"Void"}},{description:"Keep a copy of the contents upon leaving or being kicked from the folder.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Use create_link instead.",parameter:"share_link",type:{primitive:"Void"}},{description:"Create a shared link for folder.",parameter:"create_link",type:{primitive:"Void"}},{description:"Set whether the folder inherits permissions from its parent.",parameter:"set_access_inheritance",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FolderPermission:{description:"Whether the user is allowed to take the action on the shared folder.",fields:[{description:"The action that the user may wish to take on the folder.",parameter:"action",type:{datatype:"FolderAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed, or if no reason is available.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},FolderPolicy:{description:"A set of policies governing membership and privileges for a shared folder.",fields:[{description:"Who can add and remove members from this shared folder.",parameter:"acl_update_policy",type:{datatype:"AclUpdatePolicy",namespace:"sharing"}},{description:"Who links can be shared with.",parameter:"shared_link_policy",type:{datatype:"SharedLinkPolicy",namespace:"sharing"}},{description:"Who can be a member of this shared folder, as set on the folder itself. The effective policy may differ from this value if the team-wide policy is more restrictive. Present only if the folder is owned by a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can be a member of this shared folder, taking into account both the folder and the team-wide policy. This value may differ from that of member_policy if the team-wide policy is more restrictive than the folder policy. Present only if the folder is owned by a team.",parameter:"resolved_member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAction:{description:"Actions that can be performed on a link.",fields:[{description:"Change the access level of the link.",parameter:"change_access_level",type:{primitive:"Void"}},{description:"Change the audience of the link.",parameter:"change_audience",type:{primitive:"Void"}},{description:"Remove the expiry date of the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Remove the password of the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Create or modify the expiry date of the link.",parameter:"set_expiry",type:{primitive:"Void"}},{description:"Create or modify the password of the link.",parameter:"set_password",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkExpiry:{fields:[{description:"Remove the currently set expiry for the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Set a new expiry or change an existing expiry.",parameter:"set_expiry",type:{primitive:"Timestamp"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPassword:{fields:[{description:"Remove the currently set password for the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Set a new password or change an existing password.",parameter:"set_password",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermission:{description:"Permissions for actions that can be performed on a link.",fields:[{parameter:"action",type:{datatype:"LinkAction",namespace:"sharing"}},{parameter:"allow",type:{primitive:"Boolean"}},{parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},LinkSettings:{description:"Settings that apply to a link.",fields:[{description:"The access level on the link for this file. Currently, it only accepts 'viewer' and 'viewer_no_comment'.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The type of audience on the link for this file.",parameter:"audience",type:{optional:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"An expiry timestamp to set on a link.",parameter:"expiry",type:{optional:{datatype:"LinkExpiry",namespace:"sharing"}}},{description:"The password for the link.",parameter:"password",type:{optional:{datatype:"LinkPassword",namespace:"sharing"}}}],stone_type:"struct"},MemberPolicy:{description:"Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.",fields:[{description:"Only a teammate can become a member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can become a member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ShareFolderArg:{fields:[{description:"The path to the folder to share. If it does not exist, then a new one is created.",parameter:"path",type:{primitive:"String"}},{description:"Who can add and remove members of this shared folder.",parameter:"acl_update_policy",type:{optional:{datatype:"AclUpdatePolicy",namespace:"sharing"}}},{description:"Whether to force the share to happen asynchronously.",parameter:"force_async",type:{primitive:"Boolean"}},{description:"Who can be a member of this shared folder. Only applicable if the current user is on a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"The policy to apply to shared links created for content inside this shared folder.  The current user must be on a team to set this policy to :field:`SharedLinkPolicy.members`.",parameter:"shared_link_policy",type:{optional:{datatype:"SharedLinkPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}},{description:"The access inheritance settings for the folder.",parameter:"access_inheritance",type:{datatype:"AccessInheritance",namespace:"sharing"}},{description:"A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's :field:`SharedFolderMetadata.permissions` field describing the actions the  authenticated user can perform on the folder.",parameter:"actions",type:{optional:{list:{datatype:"FolderAction",namespace:"sharing"}}}},{description:"Settings on the link for this folder.",parameter:"link_settings",type:{optional:{datatype:"LinkSettings",namespace:"sharing"}}}],stone_type:"struct"},ShareFolderError:{fields:[{description:"The current user's e-mail address is unverified.",parameter:"email_unverified",type:{primitive:"Void"}},{description:":field:`ShareFolderArg.path` is invalid.",parameter:"bad_path",type:{datatype:"SharePathError",namespace:"sharing"}},{description:"Team policy is more restrictive than :field:`ShareFolderArg.member_policy`.",parameter:"team_policy_disallows_member_policy",type:{primitive:"Void"}},{description:"The current user's account is not allowed to select the specified :field:`ShareFolderArg.shared_link_policy`.",parameter:"disallowed_shared_link_policy",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}}],stone_type:"open_union"},ShareFolderLaunch:{fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{parameter:"complete",type:{datatype:"SharedFolderMetadata",namespace:"sharing"}}],stone_type:"union"},SharePathError:{fields:[{description:"A file is at the specified path.",parameter:"is_file",type:{primitive:"Void"}},{description:"We do not support sharing a folder inside a shared folder.",parameter:"inside_shared_folder",type:{primitive:"Void"}},{description:"We do not support shared folders that contain shared folders.",parameter:"contains_shared_folder",type:{primitive:"Void"}},{description:"We do not support shared folders that contain app folders.",parameter:"contains_app_folder",type:{primitive:"Void"}},{description:"We do not support shared folders that contain team folders.",parameter:"contains_team_folder",type:{primitive:"Void"}},{description:"We do not support sharing an app folder.",parameter:"is_app_folder",type:{primitive:"Void"}},{description:"We do not support sharing a folder inside an app folder.",parameter:"inside_app_folder",type:{primitive:"Void"}},{description:"A public folder can't be shared this way. Use a public link instead.",parameter:"is_public_folder",type:{primitive:"Void"}},{description:"A folder inside a public folder can't be shared this way. Use a public link instead.",parameter:"inside_public_folder",type:{primitive:"Void"}},{description:"Folder is already shared. Contains metadata about the existing shared folder.",parameter:"already_shared",type:{datatype:"SharedFolderMetadata",namespace:"sharing"}},{description:"Path is not valid.",parameter:"invalid_path",type:{primitive:"Void"}},{description:"We do not support sharing a Mac OS X package.",parameter:"is_osx_package",type:{primitive:"Void"}},{description:"We do not support sharing a folder inside a Mac OS X package.",parameter:"inside_osx_package",type:{primitive:"Void"}},{description:"We do not support sharing the Vault folder.",parameter:"is_vault",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedContentLinkMetadata:{description:"Metadata of a shared link for a file or folder.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The URL of the link.",parameter:"url",type:{primitive:"String"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}},{description:"The content inside this folder with link audience different than this folder's. This is only returned when an endpoint that returns metadata for a single shared folder is called, e.g. /get_folder_metadata.",parameter:"audience_exceptions",type:{optional:{datatype:"AudienceExceptions",namespace:"sharing"}}}],stone_type:"struct"},SharedFolderMetadata:{description:"The metadata which includes basic information about the shared folder.",fields:[{description:"The current user's access level for this shared folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Whether this folder is inside of a team folder.",parameter:"is_inside_team_folder",type:{primitive:"Boolean"}},{description:"Whether this folder is a :link:`team folder https://www.dropbox.com/en/help/986`.",parameter:"is_team_folder",type:{primitive:"Boolean"}},{description:"The name of the this shared folder.",parameter:"name",type:{primitive:"String"}},{description:"Policies governing this shared folder.",parameter:"policy",type:{datatype:"FolderPolicy",namespace:"sharing"}},{description:"URL for displaying a web preview of the shared folder.",parameter:"preview_url",type:{primitive:"String"}},{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"Timestamp indicating when the current user was invited to this shared folder.",parameter:"time_invited",type:{primitive:"Timestamp"}},{description:"The display names of the users that own the folder. If the folder is part of a team folder, the display names of the team admins are also included. Absent if the owner display names cannot be fetched.",parameter:"owner_display_names",type:{optional:{list:{primitive:"String"}}}},{description:"The team that owns the folder. This field is not present if the folder is not owned by a team.",parameter:"owner_team",type:{optional:{datatype:"Team",namespace:"users"}}},{description:"The ID of the parent shared folder. This field is present only if the folder is contained within another shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"The lower-cased full path of this shared folder. Absent for unmounted folders.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"Display name for the parent folder.",parameter:"parent_folder_name",type:{optional:{primitive:"String"}}},{description:"The metadata of the shared content link to this shared folder. Absent if there is no link on the folder. This is for an unreleased feature so it may not be returned yet.",parameter:"link_metadata",type:{optional:{datatype:"SharedContentLinkMetadata",namespace:"sharing"}}},{description:"Actions the current user may perform on the folder and its contents. The set of permissions corresponds to the FolderActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"FolderPermission",namespace:"sharing"}}}},{description:"Whether the folder inherits its members from its parent.",parameter:"access_inheritance",type:{datatype:"AccessInheritance",namespace:"sharing"}}],stone_type:"struct"},SharedLinkPolicy:{description:"Who can view shared links in this folder.",fields:[{description:"Links can be shared with anyone.",parameter:"anyone",type:{primitive:"Void"}},{description:"Links can be shared with anyone on the same team as the owner.",parameter:"team",type:{primitive:"Void"}},{description:"Links can only be shared among members of the shared folder.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ViewerInfoPolicy:{fields:[{description:"Viewer information is available on this file.",parameter:"enabled",type:{primitive:"Void"}},{description:"Viewer information is disabled on this file.",parameter:"disabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},"5TjN":function(e,t,i){"use strict";t.a={seen_state:{PlatformType:{description:"Possible platforms on which a user may view content.",fields:[{description:"The content was viewed on the web.",parameter:"web",type:{primitive:"Void"}},{description:"The content was viewed on a desktop client.",parameter:"desktop",type:{primitive:"Void"}},{description:"The content was viewed on a mobile iOS client.",parameter:"mobile_ios",type:{primitive:"Void"}},{description:"The content was viewed on a mobile android client.",parameter:"mobile_android",type:{primitive:"Void"}},{description:"The content was viewed from an API client.",parameter:"api",type:{primitive:"Void"}},{description:"The content was viewed on an unknown platform.",parameter:"unknown",type:{primitive:"Void"}},{description:"The content was viewed on a mobile client. DEPRECATED: Use mobile_ios or mobile_android instead.",parameter:"mobile",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupInfo:{description:"The information about a group. Groups is a way to manage a list of users  who need same access permission to the shared folder.",fields:[{parameter:"group_name",type:{primitive:"String"}},{parameter:"group_id",type:{primitive:"String"}},{description:"Who is allowed to manage the group.",parameter:"group_management_type",type:{datatype:"GroupManagementType",namespace:"team_common"}},{description:"The type of group.",parameter:"group_type",type:{datatype:"GroupType",namespace:"team_common"}},{description:"If the current user is a member of the group.",parameter:"is_member",type:{primitive:"Boolean"}},{description:"If the current user is an owner of the group.",parameter:"is_owner",type:{primitive:"Boolean"}},{description:"If the group is owned by the current user's team.",parameter:"same_team",type:{primitive:"Boolean"}},{description:"External ID of group. This is an arbitrary ID that an admin can attach to a group.",parameter:"group_external_id",type:{optional:{primitive:"String"}}},{description:"The number of members in the group.",parameter:"member_count",type:{optional:{primitive:"UInt32"}}}],stone_type:"struct"},GroupMembershipInfo:{description:"The information about a group member of the shared content.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"The information about the membership group.",parameter:"group",type:{datatype:"GroupInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},InviteeInfo:{description:"Information about the recipient of a shared content invitation.",fields:[{description:"E-mail address of invited user.",parameter:"email",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},InviteeMembershipInfo:{description:"Information about an invited member of a shared content.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Recipient of the invitation.",parameter:"invitee",type:{datatype:"InviteeInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}},{description:"The user this invitation is tied to, if available.",parameter:"user",type:{optional:{datatype:"UserInfo",namespace:"sharing"}}}],stone_type:"struct"},ListFileMembersBatchArg:{description:"Arguments for :route:`list_file_members/batch`.",fields:[{description:"Files for which to return members.",parameter:"files",type:{list:{primitive:"String"}}},{description:"Number of members to return max per query. Defaults to 10 if no limit is specified.",parameter:"limit",type:{primitive:"UInt32"}}],stone_type:"struct"},ListFileMembersBatchResult:{description:"Per-file result for :route:`list_file_members/batch`.",fields:[{description:"This is the input file identifier, whether an ID or a path.",parameter:"file",type:{primitive:"String"}},{description:"The result for this particular file.",parameter:"result",type:{datatype:"ListFileMembersIndividualResult",namespace:"sharing"}}],stone_type:"struct"},ListFileMembersCountResult:{fields:[{description:"A list of members on this file.",parameter:"members",type:{datatype:"SharedFileMembers",namespace:"sharing"}},{description:"The number of members on this file. This does not include inherited members.",parameter:"member_count",type:{primitive:"UInt32"}}],stone_type:"struct"},ListFileMembersIndividualResult:{fields:[{description:"The results of the query for this file if it was successful.",parameter:"result",type:{datatype:"ListFileMembersCountResult",namespace:"sharing"}},{description:"The result of the query for this file if it was an error.",parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberAction:{description:"Actions that may be taken on members of a shared folder.",fields:[{description:"Allow the member to keep a copy of the folder when removing.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Make the member an editor of the folder.",parameter:"make_editor",type:{primitive:"Void"}},{description:"Make the member an owner of the folder.",parameter:"make_owner",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder.",parameter:"make_viewer",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder without commenting permissions.",parameter:"make_viewer_no_comment",type:{primitive:"Void"}},{description:"Remove the member from the folder.",parameter:"remove",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberPermission:{description:"Whether the user is allowed to take the action on the associated member.",fields:[{description:"The action that the user may wish to take on the member.",parameter:"action",type:{datatype:"MemberAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFileMembers:{description:"Shared file user, group, and invitee membership.\nUsed for the results of :route:`list_file_members` and :route:`list_file_members/continue`, and used as part of the results for :route:`list_file_members/batch`.",fields:[{description:"The list of user members of the shared file.",parameter:"users",type:{list:{datatype:"UserFileMembershipInfo",namespace:"sharing"}}},{description:"The list of group members of the shared file.",parameter:"groups",type:{list:{datatype:"GroupMembershipInfo",namespace:"sharing"}}},{description:"The list of invited members of a file, but have not logged in and claimed this.",parameter:"invitees",type:{list:{datatype:"InviteeMembershipInfo",namespace:"sharing"}}},{description:"Present if there are additional shared file members that have not been returned yet. Pass the cursor into :route:`list_file_members/continue` to list additional members.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},SharingFileAccessError:{description:"User could not access this file.",fields:[{description:"Current user does not have sufficient privileges to perform the desired action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"File specified was not found.",parameter:"invalid_file",type:{primitive:"Void"}},{description:"A folder can't be shared this way. Use folder sharing or a shared link instead.",parameter:"is_folder",type:{primitive:"Void"}},{description:"A file inside a public folder can't be shared this way. Use a public link instead.",parameter:"inside_public_folder",type:{primitive:"Void"}},{description:"A Mac OS X package can't be shared this way. Use a shared link instead.",parameter:"inside_osx_package",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingUserError:{description:"User account had a problem preventing this action.",fields:[{description:"The current user must verify the account e-mail address before performing this action.",parameter:"email_unverified",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserFileMembershipInfo:{description:"The information about a user member of the shared content with an appended last seen timestamp.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"The account information for the membership user.",parameter:"user",type:{datatype:"UserInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}},{description:"The UTC timestamp of when the user has last seen the content, if they have.",parameter:"time_last_seen",type:{optional:{primitive:"Timestamp"}}},{description:"The platform on which the user has last seen the content, or unknown.",parameter:"platform_type",type:{optional:{datatype:"PlatformType",namespace:"seen_state"}}}],stone_type:"struct"},UserInfo:{description:"Basic information about a user. Use :route:`users.get_account` and :route:`users.get_account_batch` to obtain more detailed information.",fields:[{description:"The account ID of the user.",parameter:"account_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"The display name of the user.",parameter:"display_name",type:{primitive:"String"}},{description:"If the user is in the same team as current user.",parameter:"same_team",type:{primitive:"Boolean"}},{description:"The team member ID of the shared folder member. Only present if :field:`same_team` is true.",parameter:"team_member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"}},team_common:{GroupManagementType:{description:"The group type determines how a group is managed.",fields:[{description:"A group which is managed by selected users.",parameter:"user_managed",type:{primitive:"Void"}},{description:"A group which is managed by team admins only.",parameter:"company_managed",type:{primitive:"Void"}},{description:"A group which is managed automatically by Dropbox.",parameter:"system_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupType:{description:"The group type determines how a group is created and managed.",fields:[{description:"A group to which team members are automatically added. Applicable to :link:`team folders https://www.dropbox.com/help/986` only.",parameter:"team",type:{primitive:"Void"}},{description:"A group is created and managed by a user.",parameter:"user_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"5Zwl":function(e,t,i){var r=i("9aUh"),o=i("hfno"),a=i("j6ZD"),n=Math.max,s=Math.min;e.exports=function(e,t,i){var p,d,l,m,c,h,u=0,f=!1,y=!1,v=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function _(t){var i=p,r=d;return p=d=void 0,u=t,m=e.apply(r,i)}function g(e){return u=e,c=setTimeout(w,t),f?_(e):m}function b(e){var i=e-h;return void 0===h||i>=t||i<0||y&&e-u>=l}function w(){var e=o();if(b(e))return T(e);c=setTimeout(w,function(e){var i=t-(e-h);return y?s(i,l-(e-u)):i}(e))}function T(e){return c=void 0,v&&p?_(e):(p=d=void 0,m)}function V(){var e=o(),i=b(e);if(p=arguments,d=this,h=e,i){if(void 0===c)return g(h);if(y)return clearTimeout(c),c=setTimeout(w,t),_(h)}return void 0===c&&(c=setTimeout(w,t)),m}return t=a(t)||0,r(i)&&(f=!!i.leading,l=(y="maxWait"in i)?n(a(i.maxWait)||0,t):l,v="trailing"in i?!!i.trailing:v),V.cancel=function(){void 0!==c&&clearTimeout(c),u=0,p=h=d=c=void 0},V.flush=function(){return void 0===c?m:T(o())},V}},"5fF/":function(e,t,i){"use strict";t.a={sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AddFolderMemberError:{fields:[{description:"Unable to access shared folder.",parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{description:"The current user's e-mail address is unverified.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The current user has been banned.",parameter:"banned_member",type:{primitive:"Void"}},{description:":field:`AddFolderMemberArg.members` contains a bad invitation recipient.",parameter:"bad_member",type:{datatype:"AddMemberSelectorError",namespace:"sharing"}},{description:"Your team policy does not allow sharing outside of the team.",parameter:"cant_share_outside_team",type:{primitive:"Void"}},{description:"The value is the member limit that was reached.",parameter:"too_many_members",type:{primitive:"UInt64"}},{description:"The value is the pending invite limit that was reached.",parameter:"too_many_pending_invites",type:{primitive:"UInt64"}},{description:"The current user has hit the limit of invites they can send per day. Try again in 24 hours.",parameter:"rate_limit",type:{primitive:"Void"}},{description:"The current user is trying to share with too many people at once.",parameter:"too_many_invitees",type:{primitive:"Void"}},{description:"The current user's account doesn't support this action. An example of this is when adding a read-only member. This action can only be performed by users that have upgraded to a Pro or Business plan.",parameter:"insufficient_plan",type:{primitive:"Void"}},{description:"This action cannot be performed on a team shared folder.",parameter:"team_folder",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"Invalid shared folder error will be returned as an access_error.",parameter:"invalid_shared_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AddMemberSelectorError:{fields:[{description:"Automatically created groups can only be added to team folders.",parameter:"automatic_group",type:{primitive:"Void"}},{description:"The value is the ID that could not be identified.",parameter:"invalid_dropbox_id",type:{primitive:"String"}},{description:"The value is the e-email address that is malformed.",parameter:"invalid_email",type:{primitive:"String"}},{description:"The value is the ID of the Dropbox user with an unverified e-mail address.  Invite unverified users by e-mail address instead of by their Dropbox ID.",parameter:"unverified_dropbox_id",type:{primitive:"String"}},{description:"At least one of the specified groups in :field:`AddFolderMemberArg.members` is deleted.",parameter:"group_deleted",type:{primitive:"Void"}},{description:"Sharing to a group that is not on the current user's team.",parameter:"group_not_on_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberAccessLevelResult:{description:"Contains information about a member's access level to content after an operation.",fields:[{description:"The member still has this level of access to the content through a parent folder.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"A localized string with additional information about why the user has this access level to the content.",parameter:"warning",type:{optional:{primitive:"String"}}},{description:"The parent folders that a member has access to. The field is present if the user has access to the first parent folder where the member gains access.",parameter:"access_details",type:{optional:{list:{datatype:"ParentFolderAccessInfo",namespace:"sharing"}}}}],stone_type:"struct"},MemberAction:{description:"Actions that may be taken on members of a shared folder.",fields:[{description:"Allow the member to keep a copy of the folder when removing.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Make the member an editor of the folder.",parameter:"make_editor",type:{primitive:"Void"}},{description:"Make the member an owner of the folder.",parameter:"make_owner",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder.",parameter:"make_viewer",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder without commenting permissions.",parameter:"make_viewer_no_comment",type:{primitive:"Void"}},{description:"Remove the member from the folder.",parameter:"remove",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberPermission:{description:"Whether the user is allowed to take the action on the associated member.",fields:[{description:"The action that the user may wish to take on the member.",parameter:"action",type:{datatype:"MemberAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},MemberSelector:{description:"Includes different ways to identify a member of a shared folder.",fields:[{description:"Dropbox account, team member, or group ID of member.",parameter:"dropbox_id",type:{primitive:"String"}},{description:"E-mail address of member.",parameter:"email",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ParentFolderAccessInfo:{description:"Contains information about a parent folder that a member has access to.",fields:[{description:"Display name for the folder.",parameter:"folder_name",type:{primitive:"String"}},{description:"The identifier of the parent shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The user's permissions for the parent shared folder.",parameter:"permissions",type:{list:{datatype:"MemberPermission",namespace:"sharing"}}},{description:"The full path to the parent shared folder relative to the acting user's root.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderMemberError:{fields:[{description:"The target dropbox_id is invalid.",parameter:"invalid_dropbox_id",type:{primitive:"Void"}},{description:"The target dropbox_id is not a member of the shared folder.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"The target member only has inherited access to the shared folder.",parameter:"no_explicit_access",type:{datatype:"MemberAccessLevelResult",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UpdateFolderMemberArg:{fields:[{description:"The ID for the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The member of the shared folder to update.  Only the :field:`MemberSelector.dropbox_id` may be set at this time.",parameter:"member",type:{datatype:"MemberSelector",namespace:"sharing"}},{description:"The new access level for :field:`member`. :field:`AccessLevel.owner` is disallowed.",parameter:"access_level",type:{datatype:"AccessLevel",namespace:"sharing"}}],stone_type:"struct"},UpdateFolderMemberError:{fields:[{parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{parameter:"member_error",type:{datatype:"SharedFolderMemberError",namespace:"sharing"}},{description:"If updating the access type required the member to be added to the shared folder and there was an error when adding the member.",parameter:"no_explicit_access",type:{datatype:"AddFolderMemberError",namespace:"sharing"}},{description:"The current user's account doesn't support this action. An example of this is when downgrading a member from editor to viewer. This action can only be performed by users that have upgraded to a Pro or Business plan.",parameter:"insufficient_plan",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"5ltd":function(e,t,i){},"5sbH":function(e,t,i){"use strict";t.a={file_requests:{FileRequest:{description:"A :link:`file request https://www.dropbox.com/help/9090` for receiving files into the user's Dropbox account.",fields:[{description:"The ID of the file request.",parameter:"id",type:{primitive:"String"}},{description:"The URL of the file request.",parameter:"url",type:{primitive:"String"}},{description:"The title of the file request.",parameter:"title",type:{primitive:"String"}},{description:"When this file request was created.",parameter:"created",type:{primitive:"Timestamp"}},{description:"Whether or not the file request is open. If the file request is closed, it will not accept any more file submissions.",parameter:"is_open",type:{primitive:"Boolean"}},{description:"The number of files this file request has received.",parameter:"file_count",type:{primitive:"Int64"}},{description:"The path of the folder in the Dropbox where uploaded files will be sent. This can be :val:`null` if the destination was removed. For apps with the app folder permission, this will be relative to the app folder.",parameter:"destination",type:{optional:{primitive:"String"}}},{description:"The deadline for this file request. Only set if the request has a deadline.",parameter:"deadline",type:{optional:{datatype:"FileRequestDeadline",namespace:"file_requests"}}}],stone_type:"struct"},FileRequestDeadline:{fields:[{description:"The deadline for this file request.",parameter:"deadline",type:{primitive:"Timestamp"}},{description:"If set, allow uploads after the deadline has passed. These     uploads will be marked overdue.",parameter:"allow_late_uploads",type:{optional:{datatype:"GracePeriod",namespace:"file_requests"}}}],stone_type:"struct"},GracePeriod:{fields:[{parameter:"one_day",type:{primitive:"Void"}},{parameter:"two_days",type:{primitive:"Void"}},{parameter:"seven_days",type:{primitive:"Void"}},{parameter:"thirty_days",type:{primitive:"Void"}},{parameter:"always",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UpdateFileRequestArgs:{description:"Arguments for :route:`update`.",fields:[{description:"The ID of the file request to update.",parameter:"id",type:{primitive:"String"}},{description:"The new title of the file request. Must not be empty.",parameter:"title",type:{optional:{primitive:"String"}}},{description:"The new path of the folder in the Dropbox where uploaded files will be sent. For apps with the app folder permission, this will be relative to the app folder.",parameter:"destination",type:{optional:{primitive:"String"}}},{description:"The new deadline for the file request. Deadlines can only be set by Professional and Business accounts.",parameter:"deadline",type:{datatype:"UpdateFileRequestDeadline",namespace:"file_requests"}},{description:"Whether to set this file request as open or closed.",parameter:"open",type:{optional:{primitive:"Boolean"}}}],stone_type:"struct"},UpdateFileRequestDeadline:{fields:[{description:"Do not change the file request's deadline.",parameter:"no_update",type:{primitive:"Void"}},{description:"If :val:`null`, the file request's deadline is cleared.",parameter:"update",type:{optional:{datatype:"FileRequestDeadline",namespace:"file_requests"}}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UpdateFileRequestError:{description:"There is an error updating the file request.",fields:[{description:"This user's Dropbox Business team doesn't allow file requests.",parameter:"disabled_for_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"This file request ID was not found.",parameter:"not_found",type:{primitive:"Void"}},{description:"The specified path is not a folder.",parameter:"not_a_folder",type:{primitive:"Void"}},{description:"This file request is not accessible to this app. Apps with the app folder permission can only access file requests in their app folder.",parameter:"app_lacks_access",type:{primitive:"Void"}},{description:"This user doesn't have permission to access or modify this file request.",parameter:"no_permission",type:{primitive:"Void"}},{description:"This user's email address is not verified. File requests are only available on accounts with a verified email address. Users can verify their email address :link:`here https://www.dropbox.com/help/317`.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"There was an error validating the request. For example, the title was invalid, or there were disallowed characters in the destination path.",parameter:"validation_error",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"5u71":function(e,t,i){var r=i("0711");e.exports=function(e){return r(e,4)}},"5yr3":function(e,t,i){"use strict";var r=function(e){return e=e||Object.create(null),{on:function(t,i){(e[t]||(e[t]=[])).push(i)},off:function(t,i){e[t]&&e[t].splice(e[t].indexOf(i)>>>0,1)},emit:function(t,i){(e[t]||[]).slice().map((function(e){e(i)})),(e["*"]||[]).slice().map((function(e){e(t,i)}))}}}();t.a=r},"625D":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("lktd"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"63Ad":function(e,t){e.exports=function(e){return e&&e.__esModule?e:{default:e}}},6758:function(e,t){e.exports=function(e){var t=[];if(null!=e)for(var i in Object(e))t.push(i);return t}},"6Hiw":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("H4yh"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"6TGQ":function(e,t,i){var r=i("gwRl"),o=i("PqlX");e.exports=function(e,t,i){var a=t(e);return o(e)?a:r(a,i(e))}},"6a6v":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("vVN2"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"6dxN":function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{DownloadZipArg:{fields:[{description:"The path of the folder to download.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},DownloadZipError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{description:"The folder or a file is too large to download.",parameter:"too_large",type:{primitive:"Void"}},{description:"The folder has too many files to download.",parameter:"too_many_files",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},DownloadZipResult:{fields:[{parameter:"metadata",type:{datatype:"FolderMetadata",namespace:"files"}}],stone_type:"struct"},FolderMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the folder.",parameter:"id",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Please use :field:`sharing_info` instead.",parameter:"shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Set if the folder is contained in a shared folder or is a shared folder mount point.",parameter:"sharing_info",type:{optional:{datatype:"FolderSharingInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified. Note that only properties associated with user-owned templates, not team-owned templates, can be attached to folders.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}}],stone_type:"struct",todo:!0},FolderSharingInfo:{description:"Sharing info for a folder which is contained in a shared folder or is a shared folder mount point.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"Set if the folder is contained by a shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"If this folder is a shared folder mount point, the ID of the shared folder mounted at this location.",parameter:"shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Specifies that the folder can only be traversed and the user can only see a limited subset of the contents of this folder because they don't have read access to this folder. They do, however, have access to some sub folder.",parameter:"traverse_only",type:{primitive:"Boolean"}},{description:"Specifies that the folder cannot be accessed by the user.",parameter:"no_access",type:{primitive:"Boolean"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"6iN7":function(e,t,i){var r=i("HIoB"),o=i("lYsT"),a=i("PqlX"),n=i("tfj2"),s=i("q+I6"),p=i("3kU/"),d=Object.prototype.hasOwnProperty;e.exports=function(e,t){var i=a(e),l=!i&&o(e),m=!i&&!l&&n(e),c=!i&&!l&&!m&&p(e),h=i||l||m||c,u=h?r(e.length,String):[],f=u.length;for(var y in e)!t&&!d.call(e,y)||h&&("length"==y||m&&("offset"==y||"parent"==y)||c&&("buffer"==y||"byteLength"==y||"byteOffset"==y)||s(y,f))||u.push(y);return u}},"6kFe":function(e,t,i){var r=i("jcrF"),o=i("Q8UH"),a=i("ArCz"),n=i("fjdK");e.exports=function(e){var t=a(e),i=n[t];if("function"!=typeof i||!(t in r.prototype))return!1;if(e===i)return!0;var s=o(i);return!!s&&e===s[0]}},"6qGY":function(e,t){e.exports=Object.assign},"6trR":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("lDTu"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"6wPN":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("HdlU"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"7+YT":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("KniS"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"78S0":function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{GroupAccessType:{description:"Role of a user in group.",fields:[{description:"User is a member of the group, but has no special permissions.",parameter:"member",type:{primitive:"Void"}},{description:"User can rename the group, and add/remove members.",parameter:"owner",type:{primitive:"Void"}}],stone_type:"union"},GroupFullInfo:{description:"Full description of a group.",fields:[{parameter:"group_name",type:{primitive:"String"}},{parameter:"group_id",type:{primitive:"String"}},{description:"Who is allowed to manage the group.",parameter:"group_management_type",type:{datatype:"GroupManagementType",namespace:"team_common"}},{description:"The group creation time as a UTC timestamp in milliseconds since the Unix epoch.",parameter:"created",type:{primitive:"UInt64"}},{description:"External ID of group. This is an arbitrary ID that an admin can attach to a group.",parameter:"group_external_id",type:{optional:{primitive:"String"}}},{description:"The number of members in the group.",parameter:"member_count",type:{optional:{primitive:"UInt32"}}},{description:"List of group members.",parameter:"members",type:{optional:{list:{datatype:"GroupMemberInfo",namespace:"team"}}}}],stone_type:"struct"},GroupMemberInfo:{description:"Profile of group member, and role in group.",fields:[{description:"Profile of group member.",parameter:"profile",type:{datatype:"MemberProfile",namespace:"team"}},{description:"The role that the user has in the group.",parameter:"access_type",type:{datatype:"GroupAccessType",namespace:"team"}}],stone_type:"struct"},GroupMembersAddArg:{fields:[{description:"Group to which users will be added.",parameter:"group",type:{datatype:"GroupSelector",namespace:"team"}},{description:"List of users to be added to the group.",parameter:"members",type:{list:{datatype:"MemberAccess",namespace:"team"}}},{description:"Whether to return the list of members in the group.  Note that the default value will cause all the group members  to be returned in the response. This may take a long time for large groups.",parameter:"return_members",type:{primitive:"Boolean"}}],stone_type:"struct"},GroupMembersAddError:{fields:[{description:"No matching group found. No groups match the specified group ID.",parameter:"group_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"This operation is not supported on system-managed groups.",parameter:"system_managed_group_disallowed",type:{primitive:"Void"}},{description:"You cannot add duplicate users. One or more of the members you are trying to add is already a member of the group.",parameter:"duplicate_user",type:{primitive:"Void"}},{description:"Group is not in this team. You cannot add members to a group that is outside of your team.",parameter:"group_not_in_team",type:{primitive:"Void"}},{description:"These members are not part of your team. Currently, you cannot add members to a group if they are not part of your team, though this may change in a subsequent version. To add new members to your Dropbox Business team, use the :route:`members/add` endpoint.",parameter:"members_not_in_team",type:{list:{primitive:"String"}}},{description:"These users were not found in Dropbox.",parameter:"users_not_found",type:{list:{primitive:"String"}}},{description:"A suspended user cannot be added to a group as :field:`GroupAccessType.owner`.",parameter:"user_must_be_active_to_be_owner",type:{primitive:"Void"}},{description:"A company-managed group cannot be managed by a user.",parameter:"user_cannot_be_manager_of_company_managed_group",type:{list:{primitive:"String"}}}],stone_type:"open_union"},GroupMembersChangeResult:{description:"Result returned by :route:`groups/members/add` and :route:`groups/members/remove`.",fields:[{description:"The group info after member change operation has been performed.",parameter:"group_info",type:{datatype:"GroupFullInfo",namespace:"team"}},{description:"For legacy purposes async_job_id will always return one space ' '. Formerly, it was an ID that was used to obtain the status of granting/revoking group-owned resources. It's no longer necessary because the async processing now happens automatically.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},GroupSelector:{description:"Argument for selecting a single group, either by group_id or by external group ID.",fields:[{description:"Group ID.",parameter:"group_id",type:{primitive:"String"}},{description:"External ID of the group.",parameter:"group_external_id",type:{primitive:"String"}}],stone_type:"union"},MemberAccess:{description:"Specify access type a member should have when joined to a group.",fields:[{description:"Identity of a user.",parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{description:"Access type.",parameter:"access_type",type:{datatype:"GroupAccessType",namespace:"team"}}],stone_type:"struct"},MemberProfile:{description:"Basic member profile.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}},team_common:{GroupManagementType:{description:"The group type determines how a group is managed.",fields:[{description:"A group which is managed by selected users.",parameter:"user_managed",type:{primitive:"Void"}},{description:"A group which is managed by team admins only.",parameter:"company_managed",type:{primitive:"Void"}},{description:"A group which is managed automatically by Dropbox.",parameter:"system_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},"7CKI":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("J1Us"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"7D8o":function(e,t,i){"use strict";t.a={cloud_docs:{GenericErrorTag:{fields:[{description:"Invalid argument supplied.",parameter:"invalid_argument",type:{primitive:"Void"}},{description:"User is unauthenticated.",parameter:"unauthenticated",type:{primitive:"Void"}},{description:"User does not have access to the specified doc.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"Doc could not be found based on the supplied doc ID.",parameter:"doc_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LockingErrorTag:{fields:[{description:"A lock on the doc is held by another editor",parameter:"conflict",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RenameArg:{fields:[{description:'The API ID ("id:...") associated with the Cloud Doc',parameter:"file_id",type:{primitive:"String"}},{description:"The new title of the doc, excluding extension",parameter:"title",type:{primitive:"String"}}],stone_type:"struct"},RenameError:{fields:[{parameter:"rename_error_tag",type:{optional:{datatype:"rename_error_tag_union",namespace:"cloud_docs"}}}],stone_type:"struct"},RenameErrorTag:{fields:[{description:"The supplied title is invalid, e.g. the length of the title is longer than max length (255 characters); the title contains illegal characters.",parameter:"invalid_title",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RenameResult:{fields:[{description:"The updated title of the doc without extension, which could be different from the supplied title in the request because Dropbox may remove/replace charaters that are not supported in Dropbox Filesystem.",parameter:"title",type:{primitive:"String"}}],stone_type:"struct"},rename_error_tag_union:{fields:[{parameter:"rename_error",type:{datatype:"RenameErrorTag",namespace:"cloud_docs"}},{parameter:"generic_error",type:{datatype:"GenericErrorTag",namespace:"cloud_docs"}},{parameter:"locking_error",type:{datatype:"LockingErrorTag",namespace:"cloud_docs"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"7IP4":function(e,t){e.exports=function(){}},"7L9N":function(e,t,i){"use strict";function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}i.d(t,"a",(function(){return r}))},"7LhX":function(e,t,i){"use strict";t.a={seen_state:{PlatformType:{description:"Possible platforms on which a user may view content.",fields:[{description:"The content was viewed on the web.",parameter:"web",type:{primitive:"Void"}},{description:"The content was viewed on a desktop client.",parameter:"desktop",type:{primitive:"Void"}},{description:"The content was viewed on a mobile iOS client.",parameter:"mobile_ios",type:{primitive:"Void"}},{description:"The content was viewed on a mobile android client.",parameter:"mobile_android",type:{primitive:"Void"}},{description:"The content was viewed from an API client.",parameter:"api",type:{primitive:"Void"}},{description:"The content was viewed on an unknown platform.",parameter:"unknown",type:{primitive:"Void"}},{description:"The content was viewed on a mobile client. DEPRECATED: Use mobile_ios or mobile_android instead.",parameter:"mobile",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupInfo:{description:"The information about a group. Groups is a way to manage a list of users  who need same access permission to the shared folder.",fields:[{parameter:"group_name",type:{primitive:"String"}},{parameter:"group_id",type:{primitive:"String"}},{description:"Who is allowed to manage the group.",parameter:"group_management_type",type:{datatype:"GroupManagementType",namespace:"team_common"}},{description:"The type of group.",parameter:"group_type",type:{datatype:"GroupType",namespace:"team_common"}},{description:"If the current user is a member of the group.",parameter:"is_member",type:{primitive:"Boolean"}},{description:"If the current user is an owner of the group.",parameter:"is_owner",type:{primitive:"Boolean"}},{description:"If the group is owned by the current user's team.",parameter:"same_team",type:{primitive:"Boolean"}},{description:"External ID of group. This is an arbitrary ID that an admin can attach to a group.",parameter:"group_external_id",type:{optional:{primitive:"String"}}},{description:"The number of members in the group.",parameter:"member_count",type:{optional:{primitive:"UInt32"}}}],stone_type:"struct"},GroupMembershipInfo:{description:"The information about a group member of the shared content.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"The information about the membership group.",parameter:"group",type:{datatype:"GroupInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},InviteeInfo:{description:"Information about the recipient of a shared content invitation.",fields:[{description:"E-mail address of invited user.",parameter:"email",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},InviteeMembershipInfo:{description:"Information about an invited member of a shared content.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Recipient of the invitation.",parameter:"invitee",type:{datatype:"InviteeInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}},{description:"The user this invitation is tied to, if available.",parameter:"user",type:{optional:{datatype:"UserInfo",namespace:"sharing"}}}],stone_type:"struct"},ListFileMembersContinueArg:{description:"Arguments for :route:`list_file_members/continue`.",fields:[{description:"The cursor returned by your last call to :route:`list_file_members`, :route:`list_file_members/continue`, or :route:`list_file_members/batch`.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},ListFileMembersContinueError:{description:"Error for :route:`list_file_members/continue`.",fields:[{parameter:"user_error",type:{datatype:"SharingUserError",namespace:"sharing"}},{parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{description:":field:`ListFileMembersContinueArg.cursor` is invalid.",parameter:"invalid_cursor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberAction:{description:"Actions that may be taken on members of a shared folder.",fields:[{description:"Allow the member to keep a copy of the folder when removing.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Make the member an editor of the folder.",parameter:"make_editor",type:{primitive:"Void"}},{description:"Make the member an owner of the folder.",parameter:"make_owner",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder.",parameter:"make_viewer",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder without commenting permissions.",parameter:"make_viewer_no_comment",type:{primitive:"Void"}},{description:"Remove the member from the folder.",parameter:"remove",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberPermission:{description:"Whether the user is allowed to take the action on the associated member.",fields:[{description:"The action that the user may wish to take on the member.",parameter:"action",type:{datatype:"MemberAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFileMembers:{description:"Shared file user, group, and invitee membership.\nUsed for the results of :route:`list_file_members` and :route:`list_file_members/continue`, and used as part of the results for :route:`list_file_members/batch`.",fields:[{description:"The list of user members of the shared file.",parameter:"users",type:{list:{datatype:"UserFileMembershipInfo",namespace:"sharing"}}},{description:"The list of group members of the shared file.",parameter:"groups",type:{list:{datatype:"GroupMembershipInfo",namespace:"sharing"}}},{description:"The list of invited members of a file, but have not logged in and claimed this.",parameter:"invitees",type:{list:{datatype:"InviteeMembershipInfo",namespace:"sharing"}}},{description:"Present if there are additional shared file members that have not been returned yet. Pass the cursor into :route:`list_file_members/continue` to list additional members.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},SharingFileAccessError:{description:"User could not access this file.",fields:[{description:"Current user does not have sufficient privileges to perform the desired action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"File specified was not found.",parameter:"invalid_file",type:{primitive:"Void"}},{description:"A folder can't be shared this way. Use folder sharing or a shared link instead.",parameter:"is_folder",type:{primitive:"Void"}},{description:"A file inside a public folder can't be shared this way. Use a public link instead.",parameter:"inside_public_folder",type:{primitive:"Void"}},{description:"A Mac OS X package can't be shared this way. Use a shared link instead.",parameter:"inside_osx_package",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingUserError:{description:"User account had a problem preventing this action.",fields:[{description:"The current user must verify the account e-mail address before performing this action.",parameter:"email_unverified",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserFileMembershipInfo:{description:"The information about a user member of the shared content with an appended last seen timestamp.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"The account information for the membership user.",parameter:"user",type:{datatype:"UserInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}},{description:"The UTC timestamp of when the user has last seen the content, if they have.",parameter:"time_last_seen",type:{optional:{primitive:"Timestamp"}}},{description:"The platform on which the user has last seen the content, or unknown.",parameter:"platform_type",type:{optional:{datatype:"PlatformType",namespace:"seen_state"}}}],stone_type:"struct"},UserInfo:{description:"Basic information about a user. Use :route:`users.get_account` and :route:`users.get_account_batch` to obtain more detailed information.",fields:[{description:"The account ID of the user.",parameter:"account_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"The display name of the user.",parameter:"display_name",type:{primitive:"String"}},{description:"If the user is in the same team as current user.",parameter:"same_team",type:{primitive:"Boolean"}},{description:"The team member ID of the shared folder member. Only present if :field:`same_team` is true.",parameter:"team_member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"}},team_common:{GroupManagementType:{description:"The group type determines how a group is managed.",fields:[{description:"A group which is managed by selected users.",parameter:"user_managed",type:{primitive:"Void"}},{description:"A group which is managed by team admins only.",parameter:"company_managed",type:{primitive:"Void"}},{description:"A group which is managed automatically by Dropbox.",parameter:"system_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupType:{description:"The group type determines how a group is created and managed.",fields:[{description:"A group to which team members are automatically added. Applicable to :link:`team folders https://www.dropbox.com/help/986` only.",parameter:"team",type:{primitive:"Void"}},{description:"A group is created and managed by a user.",parameter:"user_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"7UJ8":function(e,t,i){"use strict";var r=i("vdEC"),o=i("63Ad");t.__esModule=!0,t.ScrollContainer=void 0;var a=o(i("8VmE")),n=o(i("QKC2")),s=r(i("mXGw")),p=o(i("xARA")),d=o(i("W0B4")),l=i("czn3"),m=i("JF+v"),c={scrollKey:d.default.string.isRequired,shouldUpdateScroll:d.default.func,children:d.default.element.isRequired},h=function(e){function t(t){return e.call(this,t)||this}(0,n.default)(t,e);var i=t.prototype;return i.componentDidMount=function(){var e=this,t=p.default.findDOMNode(this),i=this.props,r=i.location,o=i.scrollKey;if(t){t.addEventListener("scroll",(function(){e.props.context.save(r,o,t.scrollTop)}));var a=this.props.context.read(r,o);t.scrollTo(0,a||0)}},i.render=function(){return this.props.children},t}(s.Component),u=function(e){return s.createElement(m.Location,null,(function(t){var i=t.location;return s.createElement(l.ScrollContext.Consumer,null,(function(t){return s.createElement(h,(0,a.default)({},e,{context:t,location:i}))}))}))};t.ScrollContainer=u,u.propTypes=c},"7XEX":function(e,t,i){"use strict";t.a={sharing:{AccessInheritance:{description:"Information about the inheritance policy of a shared folder.",fields:[{description:"The shared folder inherits its members from the parent folder.",parameter:"inherit",type:{primitive:"Void"}},{description:"The shared folder does not inherit its members from the parent folder.",parameter:"no_inherit",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AclUpdatePolicy:{description:"Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.",fields:[{description:"Only the owner can update the ACL.",parameter:"owner",type:{primitive:"Void"}},{description:"Any editor can update the ACL. This may be further restricted to editors on the same team.",parameter:"editors",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AudienceExceptionContentInfo:{description:"Information about the content that has a link audience different than that of this folder.",fields:[{description:"The name of the content, which is either a file or a folder.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},AudienceExceptions:{description:"The total count and truncated list of information of content inside this folder that has a different audience than the link on this folder. This is only returned for folders.",fields:[{parameter:"count",type:{primitive:"UInt32"}},{description:"A truncated list of some of the content that is an exception. The length of this list could be smaller than the count since it is only a sample but will not be empty as long as count is not 0.",parameter:"exceptions",type:{list:{datatype:"AudienceExceptionContentInfo",namespace:"sharing"}}}],stone_type:"struct"},AudienceRestrictingSharedFolder:{description:"Information about the shared folder that prevents the link audience for this link from being more restrictive.",fields:[{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The name of the shared folder.",parameter:"name",type:{primitive:"String"}},{description:"The link audience of the shared folder.",parameter:"audience",type:{datatype:"LinkAudience",namespace:"sharing"}}],stone_type:"struct"},FolderAction:{description:"Actions that may be taken on shared folders.",fields:[{description:"Change folder options, such as who can be invited to join the folder.",parameter:"change_options",type:{primitive:"Void"}},{description:"Disable viewer information for this folder.",parameter:"disable_viewer_info",type:{primitive:"Void"}},{description:"Change or edit contents of the folder.",parameter:"edit_contents",type:{primitive:"Void"}},{description:"Enable viewer information on the folder.",parameter:"enable_viewer_info",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read and write permission.",parameter:"invite_editor",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission.",parameter:"invite_viewer",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission but no comment permissions.",parameter:"invite_viewer_no_comment",type:{primitive:"Void"}},{description:"Relinquish one's own membership in the folder.",parameter:"relinquish_membership",type:{primitive:"Void"}},{description:"Unmount the folder.",parameter:"unmount",type:{primitive:"Void"}},{description:"Stop sharing this folder.",parameter:"unshare",type:{primitive:"Void"}},{description:"Keep a copy of the contents upon leaving or being kicked from the folder.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Use create_link instead.",parameter:"share_link",type:{primitive:"Void"}},{description:"Create a shared link for folder.",parameter:"create_link",type:{primitive:"Void"}},{description:"Set whether the folder inherits permissions from its parent.",parameter:"set_access_inheritance",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FolderPermission:{description:"Whether the user is allowed to take the action on the shared folder.",fields:[{description:"The action that the user may wish to take on the folder.",parameter:"action",type:{datatype:"FolderAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed, or if no reason is available.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},FolderPolicy:{description:"A set of policies governing membership and privileges for a shared folder.",fields:[{description:"Who can add and remove members from this shared folder.",parameter:"acl_update_policy",type:{datatype:"AclUpdatePolicy",namespace:"sharing"}},{description:"Who links can be shared with.",parameter:"shared_link_policy",type:{datatype:"SharedLinkPolicy",namespace:"sharing"}},{description:"Who can be a member of this shared folder, as set on the folder itself. The effective policy may differ from this value if the team-wide policy is more restrictive. Present only if the folder is owned by a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can be a member of this shared folder, taking into account both the folder and the team-wide policy. This value may differ from that of member_policy if the team-wide policy is more restrictive than the folder policy. Present only if the folder is owned by a team.",parameter:"resolved_member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAction:{description:"Actions that can be performed on a link.",fields:[{description:"Change the access level of the link.",parameter:"change_access_level",type:{primitive:"Void"}},{description:"Change the audience of the link.",parameter:"change_audience",type:{primitive:"Void"}},{description:"Remove the expiry date of the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Remove the password of the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Create or modify the expiry date of the link.",parameter:"set_expiry",type:{primitive:"Void"}},{description:"Create or modify the password of the link.",parameter:"set_password",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkExpiry:{fields:[{description:"Remove the currently set expiry for the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Set a new expiry or change an existing expiry.",parameter:"set_expiry",type:{primitive:"Timestamp"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPassword:{fields:[{description:"Remove the currently set password for the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Set a new password or change an existing password.",parameter:"set_password",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermission:{description:"Permissions for actions that can be performed on a link.",fields:[{parameter:"action",type:{datatype:"LinkAction",namespace:"sharing"}},{parameter:"allow",type:{primitive:"Boolean"}},{parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},LinkSettings:{description:"Settings that apply to a link.",fields:[{description:"The access level on the link for this file. Currently, it only accepts 'viewer' and 'viewer_no_comment'.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The type of audience on the link for this file.",parameter:"audience",type:{optional:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"An expiry timestamp to set on a link.",parameter:"expiry",type:{optional:{datatype:"LinkExpiry",namespace:"sharing"}}},{description:"The password for the link.",parameter:"password",type:{optional:{datatype:"LinkPassword",namespace:"sharing"}}}],stone_type:"struct"},MemberPolicy:{description:"Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.",fields:[{description:"Only a teammate can become a member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can become a member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedContentLinkMetadata:{description:"Metadata of a shared link for a file or folder.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The URL of the link.",parameter:"url",type:{primitive:"String"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}},{description:"The content inside this folder with link audience different than this folder's. This is only returned when an endpoint that returns metadata for a single shared folder is called, e.g. /get_folder_metadata.",parameter:"audience_exceptions",type:{optional:{datatype:"AudienceExceptions",namespace:"sharing"}}}],stone_type:"struct"},SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderMetadata:{description:"The metadata which includes basic information about the shared folder.",fields:[{description:"The current user's access level for this shared folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Whether this folder is inside of a team folder.",parameter:"is_inside_team_folder",type:{primitive:"Boolean"}},{description:"Whether this folder is a :link:`team folder https://www.dropbox.com/en/help/986`.",parameter:"is_team_folder",type:{primitive:"Boolean"}},{description:"The name of the this shared folder.",parameter:"name",type:{primitive:"String"}},{description:"Policies governing this shared folder.",parameter:"policy",type:{datatype:"FolderPolicy",namespace:"sharing"}},{description:"URL for displaying a web preview of the shared folder.",parameter:"preview_url",type:{primitive:"String"}},{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"Timestamp indicating when the current user was invited to this shared folder.",parameter:"time_invited",type:{primitive:"Timestamp"}},{description:"The display names of the users that own the folder. If the folder is part of a team folder, the display names of the team admins are also included. Absent if the owner display names cannot be fetched.",parameter:"owner_display_names",type:{optional:{list:{primitive:"String"}}}},{description:"The team that owns the folder. This field is not present if the folder is not owned by a team.",parameter:"owner_team",type:{optional:{datatype:"Team",namespace:"users"}}},{description:"The ID of the parent shared folder. This field is present only if the folder is contained within another shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"The lower-cased full path of this shared folder. Absent for unmounted folders.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"Display name for the parent folder.",parameter:"parent_folder_name",type:{optional:{primitive:"String"}}},{description:"The metadata of the shared content link to this shared folder. Absent if there is no link on the folder. This is for an unreleased feature so it may not be returned yet.",parameter:"link_metadata",type:{optional:{datatype:"SharedContentLinkMetadata",namespace:"sharing"}}},{description:"Actions the current user may perform on the folder and its contents. The set of permissions corresponds to the FolderActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"FolderPermission",namespace:"sharing"}}}},{description:"Whether the folder inherits its members from its parent.",parameter:"access_inheritance",type:{datatype:"AccessInheritance",namespace:"sharing"}}],stone_type:"struct"},SharedLinkPolicy:{description:"Who can view shared links in this folder.",fields:[{description:"Links can be shared with anyone.",parameter:"anyone",type:{primitive:"Void"}},{description:"Links can be shared with anyone on the same team as the owner.",parameter:"team",type:{primitive:"Void"}},{description:"Links can only be shared among members of the shared folder.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UpdateFolderPolicyArg:{description:"If any of the policies are unset, then they retain their current setting.",fields:[{description:"The ID for the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"Who can be a member of this shared folder. Only applicable if the current user is on a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can add and remove members of this shared folder.",parameter:"acl_update_policy",type:{optional:{datatype:"AclUpdatePolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}},{description:"The policy to apply to shared links created for content inside this shared folder. The current user must be on a team to set this policy to :field:`SharedLinkPolicy.members`.",parameter:"shared_link_policy",type:{optional:{datatype:"SharedLinkPolicy",namespace:"sharing"}}},{description:"Settings on the link for this folder.",parameter:"link_settings",type:{optional:{datatype:"LinkSettings",namespace:"sharing"}}},{description:"A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's :field:`SharedFolderMetadata.permissions` field describing the actions the  authenticated user can perform on the folder.",parameter:"actions",type:{optional:{list:{datatype:"FolderAction",namespace:"sharing"}}}}],stone_type:"struct"},UpdateFolderPolicyError:{fields:[{parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{description:":field:`UpdateFolderPolicyArg.member_policy` was set even though user is not on a team.",parameter:"not_on_team",type:{primitive:"Void"}},{description:"Team policy is more restrictive than :field:`ShareFolderArg.member_policy`.",parameter:"team_policy_disallows_member_policy",type:{primitive:"Void"}},{description:"The current account is not allowed to select the specified :field:`ShareFolderArg.shared_link_policy`.",parameter:"disallowed_shared_link_policy",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"This action cannot be performed on a team shared folder.",parameter:"team_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ViewerInfoPolicy:{fields:[{description:"Viewer information is available on this file.",parameter:"enabled",type:{primitive:"Void"}},{description:"Viewer information is disabled on this file.",parameter:"disabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},"7ZbK":function(e,t,i){"use strict";t.a={file_properties:{LookUpPropertiesError:{fields:[{description:"No property group was found.",parameter:"property_group_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{parameter:"malformed_path",type:{primitive:"String"}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroupUpdate:{fields:[{description:"A unique identifier for a property template.",parameter:"template_id",type:{primitive:"String"}},{description:"Property fields to update. If the property field already exists, it is updated. If the property field doesn't exist, the property group is added.",parameter:"add_or_update_fields",type:{optional:{list:{datatype:"PropertyField",namespace:"file_properties"}}}},{description:"Property fields to remove (by name), provided they exist.",parameter:"remove_fields",type:{optional:{list:{primitive:"String"}}}}],stone_type:"struct"},UpdatePropertiesArg:{fields:[{description:"A unique identifier for the file or folder.",parameter:"path",type:{primitive:"String"}},{description:'The property groups "delta" updates to apply.',parameter:"update_property_groups",type:{list:{datatype:"PropertyGroupUpdate",namespace:"file_properties"}}}],stone_type:"struct"},UpdatePropertiesError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{parameter:"path",type:{datatype:"LookupError",namespace:"file_properties"}},{description:"This folder cannot be tagged. Tagging folders is not supported for team-owned templates.",parameter:"unsupported_folder",type:{primitive:"Void"}},{description:"One or more of the supplied property field values is too large.",parameter:"property_field_too_large",type:{primitive:"Void"}},{description:"One or more of the supplied property fields does not conform to the template specifications.",parameter:"does_not_fit_template",type:{primitive:"Void"}},{description:"There are 2 or more property groups referring to the same templates in the input.",parameter:"duplicate_property_groups",type:{primitive:"Void"}},{parameter:"property_group_lookup",type:{datatype:"LookUpPropertiesError",namespace:"file_properties"}}],stone_type:"open_union"}}}},"7bRu":function(e,t){e.exports=function(e,t,i,r){var o=-1,a=null==e?0:e.length;for(r&&a&&(i=e[++o]);++o<a;)i=t(i,e[o],o,e);return i}},"7bue":function(e,t,i){"use strict";t.a={file_properties:{ListTemplateResult:{fields:[{description:"List of identifiers for templates added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_ids",type:{list:{primitive:"String"}}}],stone_type:"struct"},TemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"7cU1":function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{CreateFolderBatchError:{fields:[{description:"The operation would involve too many files or folders.",parameter:"too_many_files",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},CreateFolderBatchJobStatus:{fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The batch create folder has finished.",parameter:"complete",type:{datatype:"CreateFolderBatchResult",namespace:"files"}},{description:"The batch create folder has failed.",parameter:"failed",type:{datatype:"CreateFolderBatchError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},CreateFolderBatchResult:{fields:[{description:"Each entry in :field:`CreateFolderBatchArg.paths` will appear at the same position inside :field:`CreateFolderBatchResult.entries`.",parameter:"entries",type:{list:{datatype:"CreateFolderBatchResultEntry",namespace:"files"}}}],stone_type:"struct"},CreateFolderBatchResultEntry:{fields:[{parameter:"success",type:{datatype:"CreateFolderEntryResult",namespace:"files"}},{parameter:"failure",type:{datatype:"CreateFolderEntryError",namespace:"files"}}],stone_type:"union"},CreateFolderEntryError:{fields:[{parameter:"path",type:{datatype:"WriteError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},CreateFolderEntryResult:{fields:[{description:"Metadata of the created folder.",parameter:"metadata",type:{datatype:"FolderMetadata",namespace:"files"}}],stone_type:"struct"},FolderMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the folder.",parameter:"id",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Please use :field:`sharing_info` instead.",parameter:"shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Set if the folder is contained in a shared folder or is a shared folder mount point.",parameter:"sharing_info",type:{optional:{datatype:"FolderSharingInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified. Note that only properties associated with user-owned templates, not team-owned templates, can be attached to folders.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}}],stone_type:"struct",todo:!0},FolderSharingInfo:{description:"Sharing info for a folder which is contained in a shared folder or is a shared folder mount point.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"Set if the folder is contained by a shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"If this folder is a shared folder mount point, the ID of the shared folder mounted at this location.",parameter:"shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Specifies that the folder can only be traversed and the user can only see a limited subset of the contents of this folder because they don't have read access to this folder. They do, however, have access to some sub folder.",parameter:"traverse_only",type:{primitive:"Boolean"}},{description:"Specifies that the folder cannot be accessed by the user.",parameter:"no_access",type:{primitive:"Boolean"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"7jbF":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("G3ts"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"7o+A":function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},"7qnD":function(e,t){var i=/\w*$/;e.exports=function(e){var t=new e.constructor(e.source,i.exec(e));return t.lastIndex=e.lastIndex,t}},"7xeS":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("KtJs"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"7yvy":function(e,t,i){var r=i("pCs0"),o=i("O/Z7"),a=i("zYYD"),n=i("Zs3A");e.exports=function(e,t,i){return e=a(e),void 0===(t=i?void 0:t)?o(e)?n(e):r(e):e.match(t)||[]}},"8+Dw":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("azLn"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"87Xv":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("YNFj"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"8AKS":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("7cU1"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"8KpS":function(e,t,i){"use strict";t.a={file_properties:{LookUpPropertiesError:{fields:[{description:"No property group was found.",parameter:"property_group_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{parameter:"malformed_path",type:{primitive:"String"}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RemovePropertiesArg:{fields:[{description:"A unique identifier for the file or folder.",parameter:"path",type:{primitive:"String"}},{description:"A list of identifiers for a template created by :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"property_template_ids",type:{list:{primitive:"String"}}}],stone_type:"struct"},RemovePropertiesError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{parameter:"path",type:{datatype:"LookupError",namespace:"file_properties"}},{description:"This folder cannot be tagged. Tagging folders is not supported for team-owned templates.",parameter:"unsupported_folder",type:{primitive:"Void"}},{parameter:"property_group_lookup",type:{datatype:"LookUpPropertiesError",namespace:"file_properties"}}],stone_type:"open_union"}}}},"8VmE":function(e,t){function i(){return e.exports=i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e},i.apply(this,arguments)}e.exports=i},"8k5m":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Geoo"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"94VI":function(e,t){t.polyfill=function(e){return e}},"97Yx":function(e,t,i){var r=i("6kFe"),o=i("AN5y"),a=i("c2OK");e.exports=function(e,t,i,n,s,p,d,l,m,c){var h=8&t;t|=h?32:64,4&(t&=~(h?64:32))||(t&=-4);var u=[e,t,s,h?p:void 0,h?d:void 0,h?void 0:p,h?void 0:d,l,m,c],f=i.apply(void 0,u);return r(e)&&o(f,u),f.placeholder=n,a(f,e,t)}},"9Ph8":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("o4P4"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"9RJ8":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("A8nV"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"9aUh":function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},"9axb":function(e,t,i){"use strict";t.a={sharing:{RevokeSharedLinkArg:{fields:[{description:"URL of the shared link.",parameter:"url",type:{primitive:"String"}}],stone_type:"struct"},RevokeSharedLinkError:{fields:[{description:"The shared link wasn't found.",parameter:"shared_link_not_found",type:{primitive:"Void"}},{description:"The caller is not allowed to access this shared link.",parameter:"shared_link_access_denied",type:{primitive:"Void"}},{description:"This type of link is not supported; use :route:`files.export` instead.",parameter:"unsupported_link_type",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"Shared link is malformed.",parameter:"shared_link_malformed",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"9cwD":function(e,t,i){"use strict";t.a={file_properties:{ModifyTemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"A property field key with that name already exists in the template.",parameter:"conflicting_property_names",type:{primitive:"Void"}},{description:"There are too many properties in the changed template. The maximum number of properties per template is 32.",parameter:"too_many_properties",type:{primitive:"Void"}},{description:"There are too many templates for the team.",parameter:"too_many_templates",type:{primitive:"Void"}},{description:"The template name, description or one or more of the property field keys is too large.",parameter:"template_attribute_too_large",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyFieldTemplate:{description:"Defines how a single property field may be structured. Used exclusively by :type:`PropertyGroupTemplate`.",fields:[{description:"Key of the property field being described. Property field keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description of the property field. Property field descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Data type of the value of this property field. This type will be enforced upon property creation and modifications.",parameter:"type",type:{datatype:"PropertyType",namespace:"file_properties"}}],stone_type:"struct"},PropertyType:{description:"Data type of the given property field added.",fields:[{description:"The associated property field will be of type string. Unicode is supported.",parameter:"string",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UpdateTemplateArg:{fields:[{description:"An identifier for template added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}},{description:"A display name for the template. template names can be up to 256 bytes.",parameter:"name",type:{optional:{primitive:"String"}}},{description:"Description for the new template. Template descriptions can be up to 1024 bytes.",parameter:"description",type:{optional:{primitive:"String"}}},{description:"Property field templates to be added to the group template. There can be up to 32 properties in a single template.",parameter:"add_fields",type:{optional:{list:{datatype:"PropertyFieldTemplate",namespace:"file_properties"}}}}],stone_type:"struct"},UpdateTemplateResult:{fields:[{description:"An identifier for template added by route  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}}],stone_type:"struct"}}}},"9lU+":function(e,t){e.exports=function(e){return e&&e.length?e[0]:void 0}},"9xmz":function(e,t,i){"use strict";t.a={}},"9xxD":function(e,t,i){"use strict";var r=i("D2wv"),o=i("e46L"),a=i("Rlj/");function n(e,t){return t=t||{},function(i,r){for(var o,a=e.length,n=-1;++n<a&&0===(o=s(e[n],i,r)););return!0===t.reverse?-1*o:o}}function s(e,t,i){return"function"==typeof e?e(t,i,s.bind(null,null)):e&&"object"==typeof t&&"object"==typeof i?s(null,a(t,e),a(i,e)):r(t,i)}function p(e){return[].concat.apply([],e)}e.exports=function(e,t,i){if(null==e)return[];if(!Array.isArray(e))throw new TypeError("array-sort expects an array.");if(1===arguments.length)return e.sort();var r=p([].slice.call(arguments,1));return"object"===o(r[r.length-1])&&(i=r.pop()),e.sort(n(r,i))}},"A+xa":function(e,t,i){"use strict";t.a={files:{Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},SaveCopyReferenceArg:{fields:[{description:"A copy reference returned by :route:`copy_reference/get`.",parameter:"copy_reference",type:{primitive:"String"}},{description:"Path in the user's Dropbox that is the destination.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},SaveCopyReferenceError:{fields:[{parameter:"path",type:{datatype:"WriteError",namespace:"files"}},{description:"The copy reference is invalid.",parameter:"invalid_copy_reference",type:{primitive:"Void"}},{description:"You don't have permission to save the given copy reference. Please make sure this app is same app which created the copy reference and the source user is still linked to the app.",parameter:"no_permission",type:{primitive:"Void"}},{description:"The file referenced by the copy reference cannot be found.",parameter:"not_found",type:{primitive:"Void"}},{description:"The operation would involve more than 10,000 files and folders.",parameter:"too_many_files",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SaveCopyReferenceResult:{fields:[{description:"The metadata of the saved file or folder in the user's Dropbox.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},A057:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("hzhP"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},A277:function(e,t,i){var r=i("Exs5"),o=i("UnPy");e.exports=function(e,t){return t.length<2?e:r(e,o(t,0,-1))}},A36J:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("jgFi"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},A7sB:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("rkZl"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},A8nV:function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},sharing:{AccessInheritance:{description:"Information about the inheritance policy of a shared folder.",fields:[{description:"The shared folder inherits its members from the parent folder.",parameter:"inherit",type:{primitive:"Void"}},{description:"The shared folder does not inherit its members from the parent folder.",parameter:"no_inherit",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AclUpdatePolicy:{description:"Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.",fields:[{description:"Only the owner can update the ACL.",parameter:"owner",type:{primitive:"Void"}},{description:"Any editor can update the ACL. This may be further restricted to editors on the same team.",parameter:"editors",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AudienceExceptionContentInfo:{description:"Information about the content that has a link audience different than that of this folder.",fields:[{description:"The name of the content, which is either a file or a folder.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},AudienceExceptions:{description:"The total count and truncated list of information of content inside this folder that has a different audience than the link on this folder. This is only returned for folders.",fields:[{parameter:"count",type:{primitive:"UInt32"}},{description:"A truncated list of some of the content that is an exception. The length of this list could be smaller than the count since it is only a sample but will not be empty as long as count is not 0.",parameter:"exceptions",type:{list:{datatype:"AudienceExceptionContentInfo",namespace:"sharing"}}}],stone_type:"struct"},AudienceRestrictingSharedFolder:{description:"Information about the shared folder that prevents the link audience for this link from being more restrictive.",fields:[{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The name of the shared folder.",parameter:"name",type:{primitive:"String"}},{description:"The link audience of the shared folder.",parameter:"audience",type:{datatype:"LinkAudience",namespace:"sharing"}}],stone_type:"struct"},FolderAction:{description:"Actions that may be taken on shared folders.",fields:[{description:"Change folder options, such as who can be invited to join the folder.",parameter:"change_options",type:{primitive:"Void"}},{description:"Disable viewer information for this folder.",parameter:"disable_viewer_info",type:{primitive:"Void"}},{description:"Change or edit contents of the folder.",parameter:"edit_contents",type:{primitive:"Void"}},{description:"Enable viewer information on the folder.",parameter:"enable_viewer_info",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read and write permission.",parameter:"invite_editor",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission.",parameter:"invite_viewer",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission but no comment permissions.",parameter:"invite_viewer_no_comment",type:{primitive:"Void"}},{description:"Relinquish one's own membership in the folder.",parameter:"relinquish_membership",type:{primitive:"Void"}},{description:"Unmount the folder.",parameter:"unmount",type:{primitive:"Void"}},{description:"Stop sharing this folder.",parameter:"unshare",type:{primitive:"Void"}},{description:"Keep a copy of the contents upon leaving or being kicked from the folder.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Use create_link instead.",parameter:"share_link",type:{primitive:"Void"}},{description:"Create a shared link for folder.",parameter:"create_link",type:{primitive:"Void"}},{description:"Set whether the folder inherits permissions from its parent.",parameter:"set_access_inheritance",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FolderPermission:{description:"Whether the user is allowed to take the action on the shared folder.",fields:[{description:"The action that the user may wish to take on the folder.",parameter:"action",type:{datatype:"FolderAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed, or if no reason is available.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},FolderPolicy:{description:"A set of policies governing membership and privileges for a shared folder.",fields:[{description:"Who can add and remove members from this shared folder.",parameter:"acl_update_policy",type:{datatype:"AclUpdatePolicy",namespace:"sharing"}},{description:"Who links can be shared with.",parameter:"shared_link_policy",type:{datatype:"SharedLinkPolicy",namespace:"sharing"}},{description:"Who can be a member of this shared folder, as set on the folder itself. The effective policy may differ from this value if the team-wide policy is more restrictive. Present only if the folder is owned by a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can be a member of this shared folder, taking into account both the folder and the team-wide policy. This value may differ from that of member_policy if the team-wide policy is more restrictive than the folder policy. Present only if the folder is owned by a team.",parameter:"resolved_member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAction:{description:"Actions that can be performed on a link.",fields:[{description:"Change the access level of the link.",parameter:"change_access_level",type:{primitive:"Void"}},{description:"Change the audience of the link.",parameter:"change_audience",type:{primitive:"Void"}},{description:"Remove the expiry date of the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Remove the password of the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Create or modify the expiry date of the link.",parameter:"set_expiry",type:{primitive:"Void"}},{description:"Create or modify the password of the link.",parameter:"set_password",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermission:{description:"Permissions for actions that can be performed on a link.",fields:[{parameter:"action",type:{datatype:"LinkAction",namespace:"sharing"}},{parameter:"allow",type:{primitive:"Boolean"}},{parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},MemberPolicy:{description:"Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.",fields:[{description:"Only a teammate can become a member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can become a member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ShareFolderError:{fields:[{description:"The current user's e-mail address is unverified.",parameter:"email_unverified",type:{primitive:"Void"}},{description:":field:`ShareFolderArg.path` is invalid.",parameter:"bad_path",type:{datatype:"SharePathError",namespace:"sharing"}},{description:"Team policy is more restrictive than :field:`ShareFolderArg.member_policy`.",parameter:"team_policy_disallows_member_policy",type:{primitive:"Void"}},{description:"The current user's account is not allowed to select the specified :field:`ShareFolderArg.shared_link_policy`.",parameter:"disallowed_shared_link_policy",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}}],stone_type:"open_union"},ShareFolderJobStatus:{fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The share job has finished. The value is the metadata for the folder.",parameter:"complete",type:{datatype:"SharedFolderMetadata",namespace:"sharing"}},{parameter:"failed",type:{datatype:"ShareFolderError",namespace:"sharing"}}],stone_type:"union"},SharePathError:{fields:[{description:"A file is at the specified path.",parameter:"is_file",type:{primitive:"Void"}},{description:"We do not support sharing a folder inside a shared folder.",parameter:"inside_shared_folder",type:{primitive:"Void"}},{description:"We do not support shared folders that contain shared folders.",parameter:"contains_shared_folder",type:{primitive:"Void"}},{description:"We do not support shared folders that contain app folders.",parameter:"contains_app_folder",type:{primitive:"Void"}},{description:"We do not support shared folders that contain team folders.",parameter:"contains_team_folder",type:{primitive:"Void"}},{description:"We do not support sharing an app folder.",parameter:"is_app_folder",type:{primitive:"Void"}},{description:"We do not support sharing a folder inside an app folder.",parameter:"inside_app_folder",type:{primitive:"Void"}},{description:"A public folder can't be shared this way. Use a public link instead.",parameter:"is_public_folder",type:{primitive:"Void"}},{description:"A folder inside a public folder can't be shared this way. Use a public link instead.",parameter:"inside_public_folder",type:{primitive:"Void"}},{description:"Folder is already shared. Contains metadata about the existing shared folder.",parameter:"already_shared",type:{datatype:"SharedFolderMetadata",namespace:"sharing"}},{description:"Path is not valid.",parameter:"invalid_path",type:{primitive:"Void"}},{description:"We do not support sharing a Mac OS X package.",parameter:"is_osx_package",type:{primitive:"Void"}},{description:"We do not support sharing a folder inside a Mac OS X package.",parameter:"inside_osx_package",type:{primitive:"Void"}},{description:"We do not support sharing the Vault folder.",parameter:"is_vault",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedContentLinkMetadata:{description:"Metadata of a shared link for a file or folder.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The URL of the link.",parameter:"url",type:{primitive:"String"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}},{description:"The content inside this folder with link audience different than this folder's. This is only returned when an endpoint that returns metadata for a single shared folder is called, e.g. /get_folder_metadata.",parameter:"audience_exceptions",type:{optional:{datatype:"AudienceExceptions",namespace:"sharing"}}}],stone_type:"struct"},SharedFolderMetadata:{description:"The metadata which includes basic information about the shared folder.",fields:[{description:"The current user's access level for this shared folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Whether this folder is inside of a team folder.",parameter:"is_inside_team_folder",type:{primitive:"Boolean"}},{description:"Whether this folder is a :link:`team folder https://www.dropbox.com/en/help/986`.",parameter:"is_team_folder",type:{primitive:"Boolean"}},{description:"The name of the this shared folder.",parameter:"name",type:{primitive:"String"}},{description:"Policies governing this shared folder.",parameter:"policy",type:{datatype:"FolderPolicy",namespace:"sharing"}},{description:"URL for displaying a web preview of the shared folder.",parameter:"preview_url",type:{primitive:"String"}},{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"Timestamp indicating when the current user was invited to this shared folder.",parameter:"time_invited",type:{primitive:"Timestamp"}},{description:"The display names of the users that own the folder. If the folder is part of a team folder, the display names of the team admins are also included. Absent if the owner display names cannot be fetched.",parameter:"owner_display_names",type:{optional:{list:{primitive:"String"}}}},{description:"The team that owns the folder. This field is not present if the folder is not owned by a team.",parameter:"owner_team",type:{optional:{datatype:"Team",namespace:"users"}}},{description:"The ID of the parent shared folder. This field is present only if the folder is contained within another shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"The lower-cased full path of this shared folder. Absent for unmounted folders.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"Display name for the parent folder.",parameter:"parent_folder_name",type:{optional:{primitive:"String"}}},{description:"The metadata of the shared content link to this shared folder. Absent if there is no link on the folder. This is for an unreleased feature so it may not be returned yet.",parameter:"link_metadata",type:{optional:{datatype:"SharedContentLinkMetadata",namespace:"sharing"}}},{description:"Actions the current user may perform on the folder and its contents. The set of permissions corresponds to the FolderActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"FolderPermission",namespace:"sharing"}}}},{description:"Whether the folder inherits its members from its parent.",parameter:"access_inheritance",type:{datatype:"AccessInheritance",namespace:"sharing"}}],stone_type:"struct"},SharedLinkPolicy:{description:"Who can view shared links in this folder.",fields:[{description:"Links can be shared with anyone.",parameter:"anyone",type:{primitive:"Void"}},{description:"Links can be shared with anyone on the same team as the owner.",parameter:"team",type:{primitive:"Void"}},{description:"Links can only be shared among members of the shared folder.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ViewerInfoPolicy:{fields:[{description:"Viewer information is available on this file.",parameter:"enabled",type:{primitive:"Void"}},{description:"Viewer information is disabled on this file.",parameter:"disabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},AJMQ:function(e,t){e.exports=function(e){return this.__data__.has(e)}},AN5y:function(e,t,i){var r=i("eEf8"),o=i("u7St")(r);e.exports=o},AP2q:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("lCHq"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},AVLu:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("3ssa"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},AdG2:function(e,t,i){"use strict";i.r(t),i.d(t,"wrapRootElement",(function(){return Rr}));var r=i("mK0O"),o=i("mXGw"),a=i.n(o),n=i("/FXl"),s=Object(o.createContext)({}),p=function(e){var t=Object(o.useContext)(s);return e||t};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"useMDXScope",filename:"node_modules/gatsby-plugin-mdx/context.js"}});var d=function(e){var t=e.__mdxScope,i=e.children;return a.a.createElement(s.Provider,{value:t},i)};void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXScopeProvider",filename:"node_modules/gatsby-plugin-mdx/context.js"}});var l=i("hRIO"),m=i("cpHC").default,c=i("FzuK").default,h=i("hngW").default,u=i("c6iq").default,f=i("3AT2").default,y=i("jf2V").default,v=i("iHmU").default,_=i("N318").default,g=i("vR+s").default,b=i("FX2T").default,w=i("87Xv").default,T=i("p446").default,V=i("nJhi").default,k=i("4DU+").default,S=i("hH31").default,x=i("wS8Z").default,A=i("gUEo").default,P=i("sDwo").default,D=i("CVSJ").default,I=i("iSGk").default,E=i("taMz").default,L=i("+QuK").default,R=i("Dkjd").default,M=i("Q+mf").default,F=i("1ydd").default,q=i("Elot").default,U=i("nJ9S").default,C=i("3MED").default,j=i("cpOc").default,O=i("7CKI").default,B=i("INDh").default,G=i("PUr6").default,W=i("nqmN").default,N=i("FGLY").default,z=i("F4ae").default,X=i("Gn3/").default,H=i("C6aM").default,Y=i("JDyj").default,K=i("gOBv").default,J=i("c8er").default,Z=i("ogc7").default,Q=i("A36J").default,$=i("yBFp").default,ee=i("scqR").default,te=i("Ngii").default,ie=i("8AKS").default,re=i("Kp+s").default,oe=i("ffA+").default,ae=i("sEby").default,ne=i("Mezr").default,se=i("4pAO").default,pe=i("TfkW").default,de=i("ex8D").default,le=i("qAaG").default,me=i("tk5P").default,ce=i("kpGT").default,he=i("x9cT").default,ue=i("JuRr").default,fe=i("WOig").default,ye=i("0DHb").default,ve=i("VXDN").default,_e=i("Jnem").default,ge=i("7xeS").default,be=i("f6Co").default,we=i("Bcfl").default,Te=i("7+YT").default,Ve=i("yhip").default,ke=i("pjzL").default,Se=i("jupw").default,xe=i("aIY4").default,Ae=i("YXIH").default,Pe=i("iiyG").default,De=i("FMyM").default,Ie=i("zq6h").default,Ee=i("MrCn").default,Le=i("IGcY").default,Re=i("FjlX").default,Me=i("8+Dw").default,Fe=i("ucKr").default,qe=i("l2Jq").default,Ue=i("xPR9").default,Ce=i("g2Th").default,je=i("j0HF").default,Oe=i("KC6j").default,Be=i("A7sB").default,Ge=i("uRZf").default,We=i("kuUs").default,Ne=i("Lw3N").default,ze=i("DG7C").default,Xe=i("SaFQ").default,He=i("NT1G").default,Ye=i("JXL5").default,Ke=i("SOtt").default,Je=i("ecQY").default,Ze=i("yDQl").default,Qe=i("aUKq").default,$e=i("b9dK").default,et=i("aMfu").default,tt=i("vh2y").default,it=i("oz0i").default,rt=i("tfKQ").default,ot=i("FGuy").default,at=i("VDtQ").default,nt=i("nyCn").default,st=i("yTOx").default,pt=i("aijU").default,dt=i("zrAz").default,lt=i("AfF8").default,mt=i("+V6m").default,ct=i("nI61").default,ht=i("Allz").default,ut=i("e06f").default,ft=i("Zy3L").default,yt=i("rE0G").default,vt=i("2rXp").default,_t=i("g6ei").default,gt=i("nbMa").default,bt=i("YoP1").default,wt=i("NI83").default,Tt=i("9RJ8").default,Vt=i("HRQj").default,kt=i("gkJB").default,St=i("2jrP").default,xt=i("3Tf3").default,At=i("PlvX").default,Pt=i("LrDU").default,Dt=i("A057").default,It=i("nxsi").default,Et=i("zuYy").default,Lt=i("ogqp").default,Rt=i("o7nK").default,Mt=i("8k5m").default,Ft=i("EoPG").default,qt=i("tilW").default,Ut=i("aqBa").default,Ct=i("jo0q").default,jt=i("6a6v").default,Ot=i("dNKO").default,Bt=i("qOUx").default,Gt=i("IUp9").default,Wt=i("c4bn").default,Nt=i("uj+d").default,zt=i("a7J0").default,Xt=i("S1Qq").default,Ht=i("Qiut").default,Yt=i("rAxJ").default,Kt=i("2H5u").default,Jt=i("Nq+L").default,Zt=i("UypI").default,Qt=i("W2NF").default,$t=i("h1Mq").default,ei=i("/d4A").default,ti=i("fS6M").default,ii=i("AP2q").default,ri=i("p7Fa").default,oi=i("e4fr").default,ai=i("m92C").default,ni=i("TORE").default,si=i("DZwi").default,pi=i("pDng").default,di=i("Szcl").default,li=i("TP4Q").default,mi=i("teEV").default,ci=i("625D").default,hi=i("EmLP").default,ui=i("NMGM").default,fi=i("RtBD").default,yi=i("XzXK").default,vi=i("T19l").default,_i=i("CG+W").default,gi=i("6trR").default,bi=i("s+zF").default,wi=i("RYVD").default,Ti=i("XHrT").default,Vi=i("FS64").default,ki=i("UzSQ").default,Si=i("co44").default,xi=i("C4wT").default,Ai=i("eiPe").default,Pi=i("pGDa").default,Di=i("Djva").default,Ii=i("J3/x").default,Ei=i("6wPN").default,Li=i("paKX").default,Ri=i("DS9h").default,Mi=i("L9MB").default,Fi=i("37CK").default,qi=i("LQnX").default,Ui=i("jJDV").default,Ci=i("Tb/z").default,ji=i("iPAj").default,Oi=i("+mqN").default,Bi=i("WojU").default,Gi=i("pCDC").default,Wi=i("QPBw").default,Ni=i("ndoW").default,zi=i("1CY1").default,Xi=i("qOfy").default,Hi=i("rDv2").default,Yi=i("5/k4").default,Ki=i("UGr4").default,Ji=i("q+OR").default,Zi=i("1f4F").default,Qi=i("Lj7C").default,$i=i("iDBp").default,er=i("sqvh").default,tr=i("9Ph8").default,ir=i("7jbF").default,rr=i("AzFl").default,or=i("HnOD").default,ar=i("2j3q").default,nr=i("fb/6").default,sr=i("AVLu").default,pr=i("NsWh").default,dr=i("ep92").default,lr=i("ZEig").default,mr=i("r9jV").default,cr=i("JTKy").default,hr=i("gVT7").default,ur=i("6Hiw").default,fr=i("DavM").default,yr=i("rDze").default,vr=i("ceQ/").default,_r=i("rsUP").default,gr=i("BoCx").default,br=i("d+2K").default,wr=i("VcOe").default,Tr=i("E15N").default,Vr=Object.assign({},m,c,h,u,f,y,v,_,g,b,w,T,V,k,S,x,A,P,D,I,E,L,R,M,F,q,U,C,j,O,B,G,W,N,z,X,H,Y,K,J,Z,Q,$,ee,te,ie,re,oe,ae,ne,se,pe,de,le,me,ce,he,ue,fe,ye,ve,_e,ge,be,we,Te,Ve,ke,Se,xe,Ae,Pe,De,Ie,Ee,Le,Re,Me,Fe,qe,Ue,Ce,je,Oe,Be,Ge,We,Ne,ze,Xe,He,Ye,Ke,Je,Ze,Qe,$e,et,tt,it,rt,ot,at,nt,st,pt,dt,lt,mt,ct,ht,ut,ft,yt,vt,_t,gt,bt,wt,Tt,Vt,kt,St,xt,At,Pt,Dt,It,Et,Lt,Rt,Mt,Ft,qt,Ut,Ct,jt,Ot,Bt,Gt,Wt,Nt,zt,Xt,Ht,Yt,Kt,Jt,Zt,Qt,$t,ei,ti,ii,ri,oi,ai,ni,si,pi,di,li,mi,ci,hi,ui,fi,yi,vi,_i,gi,bi,wi,Ti,Vi,ki,Si,xi,Ai,Pi,Di,Ii,Ei,Li,Ri,Mi,Fi,qi,Ui,Ci,ji,Oi,Bi,Gi,Wi,Ni,zi,Xi,Hi,Yi,Ki,Ji,Zi,Qi,$i,er,tr,ir,rr,or,ar,nr,sr,pr,dr,lr,mr,cr,hr,ur,fr,yr,vr,_r,gr,br,wr,Tr),kr=Vr;void 0!==Vr&&Vr&&Vr===Object(Vr)&&Object.isExtensible(Vr)&&!Vr.hasOwnProperty("__filemeta")&&Object.defineProperty(Vr,"__filemeta",{configurable:!0,value:{name:"__DOCZ_DUMMY_EXPORT_DEFAULT",filename:"node_modules/gatsby-plugin-mdx/loaders/mdx-scopes.js"}}),void 0!==Vr&&Vr&&Vr===Object(Vr)&&Object.isExtensible(Vr)&&!Vr.hasOwnProperty("__filemeta")&&Object.defineProperty(Vr,"__filemeta",{configurable:!0,value:{name:"__DOCZ_DUMMY_EXPORT_DEFAULT",filename:"node_modules/gatsby-plugin-mdx/loaders/mdx-scopes.js"}});var Sr=i("aD51");function xr(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function Ar(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?xr(Object(i),!0).forEach((function(t){Object(r.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):xr(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}var Pr={};l.plugins.forEach((function(e){var t=e.guards,i=void 0===t?{}:t,r=e.components;Object.entries(r).forEach((function(e){var t=e[0],r=e[1];Pr[t]?Pr.push({guard:i[t],Component:r}):Pr[t]=[{guard:i[t],Component:r}]}))}));var Dr=Object.entries(Pr).map((function(e){var t,i=e[0],r=e[1];return(t={})[i]=function(e){return function(t){var i=e.find((function(e){var i=e.guard;return!i||i(t)})).Component;return Object(Sr.c)(i,t)}}(r.concat({guard:void 0,Component:i})),t})).reduce((function(e,t){return Ar(Ar({},e),t)}),{}),Ir=Object(n.c)((function(e){var t=e.components,i=e.children;return Object(Sr.c)(d,{__mdxScope:kr},Object(Sr.c)(n.a,{components:Ar(Ar({},t),Dr)},i))})),Er=function(e){var t=e.element;return Object(Sr.c)(Ir,null,t)},Lr=Er;void 0!==Er&&Er&&Er===Object(Er)&&Object.isExtensible(Er)&&!Er.hasOwnProperty("__filemeta")&&Object.defineProperty(Er,"__filemeta",{configurable:!0,value:{name:"WrapRootElement",filename:"node_modules/gatsby-plugin-mdx/wrap-root-element.js"}});var Rr=Lr;void 0!==Rr&&Rr&&Rr===Object(Rr)&&Object.isExtensible(Rr)&&!Rr.hasOwnProperty("__filemeta")&&Object.defineProperty(Rr,"__filemeta",{configurable:!0,value:{name:"wrapRootElement",filename:"node_modules/gatsby-plugin-mdx/gatsby-browser.js"}})},AfF8:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("m3DY"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"Akg/":function(e,t,i){var r=i("2EQx"),o=i("h0av");e.exports=function(e){for(var t=o(e),i=t.length;i--;){var a=t[i],n=e[a];t[i]=[a,n,r(n)]}return t}},Allz:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("/HQh"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},ArCz:function(e,t,i){var r=i("IrTi"),o=Object.prototype.hasOwnProperty;e.exports=function(e){for(var t=e.name+"",i=r[t],a=o.call(r,t)?i.length:0;a--;){var n=i[a],s=n.func;if(null==s||s==e)return n.name}return t}},ArpJ:function(e,t,i){var r=i("V2ZB"),o=i("Vujp");e.exports=function(e,t){return e&&r(t,o(t),e)}},Ax1p:function(e,t,i){(function(t){!function(t){"use strict";var i={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:f,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,nptable:f,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:/^ *(?:comment *(?:\n|\s*$)|closed *(?:\n{2,}|\s*$)|closing *(?:\n{2,}|\s*$))/,def:/^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,table:f,lheading:/^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,paragraph:/^([^\n]+(?:\n?(?!hr|heading|lheading| {0,3}>|tag)[^\n]+)+)/,text:/^[^\n]+/};function r(e){this.tokens=[],this.tokens.links={},this.options=e||v.defaults,this.rules=i.normal,this.options.gfm&&(this.options.tables?this.rules=i.tables:this.rules=i.gfm)}i._label=/(?:\\[\[\]]|[^\[\]])+/,i._title=/(?:"(?:\\"|[^"]|"[^"\n]*")*"|'\n?(?:[^'\n]+\n?)*'|\([^()]*\))/,i.def=m(i.def).replace("label",i._label).replace("title",i._title).getRegex(),i.bullet=/(?:[*+-]|\d+\.)/,i.item=/^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/,i.item=m(i.item,"gm").replace(/bull/g,i.bullet).getRegex(),i.list=m(i.list).replace(/bull/g,i.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+i.def.source+")").getRegex(),i._tag="(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b",i.html=m(i.html).replace("comment",/<!--[\s\S]*?-->/).replace("closed",/<(tag)[\s\S]+?<\/\1>/).replace("closing",/<tag(?:"[^"]*"|'[^']*'|\s[^'"\/>\s]*)*?\/?>/).replace(/tag/g,i._tag).getRegex(),i.paragraph=m(i.paragraph).replace("hr",i.hr).replace("heading",i.heading).replace("lheading",i.lheading).replace("tag","<"+i._tag).getRegex(),i.blockquote=m(i.blockquote).replace("paragraph",i.paragraph).getRegex(),i.normal=y({},i),i.gfm=y({},i.normal,{fences:/^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\n? *\1 *(?:\n+|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/}),i.gfm.paragraph=m(i.paragraph).replace("(?!","(?!"+i.gfm.fences.source.replace("\\1","\\2")+"|"+i.list.source.replace("\\1","\\3")+"|").getRegex(),i.tables=y({},i.gfm,{nptable:/^ *(\S.*\|.*)\n *([-:]+ *\|[-| :]*)\n((?:.*\|.*(?:\n|$))*)\n*/,table:/^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/}),r.rules=i,r.lex=function(e,t){return new r(t).lex(e)},r.prototype.lex=function(e){return e=e.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    ").replace(/\u00a0/g," ").replace(/\u2424/g,"\n"),this.token(e,!0)},r.prototype.token=function(e,t){var r,o,a,n,s,p,d,l,m,c,h;for(e=e.replace(/^ +$/gm,"");e;)if((a=this.rules.newline.exec(e))&&(e=e.substring(a[0].length),a[0].length>1&&this.tokens.push({type:"space"})),a=this.rules.code.exec(e))e=e.substring(a[0].length),a=a[0].replace(/^ {4}/gm,""),this.tokens.push({type:"code",text:this.options.pedantic?a:a.replace(/\n+$/,"")});else if(a=this.rules.fences.exec(e))e=e.substring(a[0].length),this.tokens.push({type:"code",lang:a[2],text:a[3]||""});else if(a=this.rules.heading.exec(e))e=e.substring(a[0].length),this.tokens.push({type:"heading",depth:a[1].length,text:a[2]});else if(t&&(a=this.rules.nptable.exec(e))){for(e=e.substring(a[0].length),p={type:"table",header:a[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:a[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:a[3].replace(/\n$/,"").split("\n")},l=0;l<p.align.length;l++)/^ *-+: *$/.test(p.align[l])?p.align[l]="right":/^ *:-+: *$/.test(p.align[l])?p.align[l]="center":/^ *:-+ *$/.test(p.align[l])?p.align[l]="left":p.align[l]=null;for(l=0;l<p.cells.length;l++)p.cells[l]=p.cells[l].split(/ *\| */);this.tokens.push(p)}else if(a=this.rules.hr.exec(e))e=e.substring(a[0].length),this.tokens.push({type:"hr"});else if(a=this.rules.blockquote.exec(e))e=e.substring(a[0].length),this.tokens.push({type:"blockquote_start"}),a=a[0].replace(/^ *> ?/gm,""),this.token(a,t),this.tokens.push({type:"blockquote_end"});else if(a=this.rules.list.exec(e)){for(e=e.substring(a[0].length),h=(n=a[2]).length>1,this.tokens.push({type:"list_start",ordered:h,start:h?+n:""}),r=!1,c=(a=a[0].match(this.rules.item)).length,l=0;l<c;l++)d=(p=a[l]).length,~(p=p.replace(/^ *([*+-]|\d+\.) +/,"")).indexOf("\n ")&&(d-=p.length,p=this.options.pedantic?p.replace(/^ {1,4}/gm,""):p.replace(new RegExp("^ {1,"+d+"}","gm"),"")),this.options.smartLists&&l!==c-1&&(n===(s=i.bullet.exec(a[l+1])[0])||n.length>1&&s.length>1||(e=a.slice(l+1).join("\n")+e,l=c-1)),o=r||/\n\n(?!\s*$)/.test(p),l!==c-1&&(r="\n"===p.charAt(p.length-1),o||(o=r)),this.tokens.push({type:o?"loose_item_start":"list_item_start"}),this.token(p,!1),this.tokens.push({type:"list_item_end"});this.tokens.push({type:"list_end"})}else if(a=this.rules.html.exec(e))e=e.substring(a[0].length),this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&("pre"===a[1]||"script"===a[1]||"style"===a[1]),text:a[0]});else if(t&&(a=this.rules.def.exec(e)))e=e.substring(a[0].length),a[3]&&(a[3]=a[3].substring(1,a[3].length-1)),m=a[1].toLowerCase(),this.tokens.links[m]||(this.tokens.links[m]={href:a[2],title:a[3]});else if(t&&(a=this.rules.table.exec(e))){for(e=e.substring(a[0].length),p={type:"table",header:a[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:a[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:a[3].replace(/(?: *\| *)?\n$/,"").split("\n")},l=0;l<p.align.length;l++)/^ *-+: *$/.test(p.align[l])?p.align[l]="right":/^ *:-+: *$/.test(p.align[l])?p.align[l]="center":/^ *:-+ *$/.test(p.align[l])?p.align[l]="left":p.align[l]=null;for(l=0;l<p.cells.length;l++)p.cells[l]=p.cells[l].replace(/^ *\| *| *\| *$/g,"").split(/ *\| */);this.tokens.push(p)}else if(a=this.rules.lheading.exec(e))e=e.substring(a[0].length),this.tokens.push({type:"heading",depth:"="===a[2]?1:2,text:a[1]});else if(t&&(a=this.rules.paragraph.exec(e)))e=e.substring(a[0].length),this.tokens.push({type:"paragraph",text:"\n"===a[1].charAt(a[1].length-1)?a[1].slice(0,-1):a[1]});else if(a=this.rules.text.exec(e))e=e.substring(a[0].length),this.tokens.push({type:"text",text:a[0]});else if(e)throw new Error("Infinite loop on byte: "+e.charCodeAt(0));return this.tokens};var o={escape:/^\\([\\`*{}\[\]()#+\-.!_>])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:f,tag:/^<!--[\s\S]*?-->|^<\/?[a-zA-Z0-9\-]+(?:"[^"]*"|'[^']*'|\s[^<'">\/\s]*)*?\/?>/,link:/^!?\[(inside)\]\(href\)/,reflink:/^!?\[(inside)\]\s*\[([^\]]*)\]/,nolink:/^!?\[((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\]/,strong:/^__([\s\S]+?)__(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,em:/^_([^\s_](?:[^_]|__)+?[^\s_])_\b|^\*((?:\*\*|[^*])+?)\*(?!\*)/,code:/^(`+)\s*([\s\S]*?[^`]?)\s*\1(?!`)/,br:/^ {2,}\n(?!\s*$)/,del:f,text:/^[\s\S]+?(?=[\\<!\[`*]|\b_| {2,}\n|$)/};function a(e,t){if(this.options=t||v.defaults,this.links=e,this.rules=o.normal,this.renderer=this.options.renderer||new n,this.renderer.options=this.options,!this.links)throw new Error("Tokens array requires a `links` property.");this.options.gfm?this.options.breaks?this.rules=o.breaks:this.rules=o.gfm:this.options.pedantic&&(this.rules=o.pedantic)}function n(e){this.options=e||{}}function s(){}function p(e){this.tokens=[],this.token=null,this.options=e||v.defaults,this.options.renderer=this.options.renderer||new n,this.renderer=this.options.renderer,this.renderer.options=this.options}function d(e,t){return e.replace(t?/&/g:/&(?!#?\w+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function l(e){return e.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi,(function(e,t){return"colon"===(t=t.toLowerCase())?":":"#"===t.charAt(0)?"x"===t.charAt(1)?String.fromCharCode(parseInt(t.substring(2),16)):String.fromCharCode(+t.substring(1)):""}))}function m(e,t){return e=e.source,t=t||"",{replace:function(t,i){return i=(i=i.source||i).replace(/(^|[^\[])\^/g,"$1"),e=e.replace(t,i),this},getRegex:function(){return new RegExp(e,t)}}}function c(e,t){return h[" "+e]||(/^[^:]+:\/*[^/]*$/.test(e)?h[" "+e]=e+"/":h[" "+e]=e.replace(/[^/]*$/,"")),e=h[" "+e],"//"===t.slice(0,2)?e.replace(/:[\s\S]*/,":")+t:"/"===t.charAt(0)?e.replace(/(:\/*[^/]*)[\s\S]*/,"$1")+t:e+t}o._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,o._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,o.autolink=m(o.autolink).replace("scheme",o._scheme).replace("email",o._email).getRegex(),o._inside=/(?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]]|\](?=[^\[]*\]))*/,o._href=/\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/,o.link=m(o.link).replace("inside",o._inside).replace("href",o._href).getRegex(),o.reflink=m(o.reflink).replace("inside",o._inside).getRegex(),o.normal=y({},o),o.pedantic=y({},o.normal,{strong:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/}),o.gfm=y({},o.normal,{escape:m(o.escape).replace("])","~|])").getRegex(),url:m(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/).replace("email",o._email).getRegex(),_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^~~(?=\S)([\s\S]*?\S)~~/,text:m(o.text).replace("]|","~]|").replace("|","|https?://|ftp://|www\\.|[a-zA-Z0-9.!#$%&'*+/=?^_`{\\|}~-]+@|").getRegex()}),o.breaks=y({},o.gfm,{br:m(o.br).replace("{2,}","*").getRegex(),text:m(o.gfm.text).replace("{2,}","*").getRegex()}),a.rules=o,a.output=function(e,t,i){return new a(t,i).output(e)},a.prototype.output=function(e){for(var t,i,r,o,a="";e;)if(o=this.rules.escape.exec(e))e=e.substring(o[0].length),a+=o[1];else if(o=this.rules.autolink.exec(e))e=e.substring(o[0].length),r="@"===o[2]?"mailto:"+(i=d(this.mangle(o[1]))):i=d(o[1]),a+=this.renderer.link(r,null,i);else if(this.inLink||!(o=this.rules.url.exec(e))){if(o=this.rules.tag.exec(e))!this.inLink&&/^<a /i.test(o[0])?this.inLink=!0:this.inLink&&/^<\/a>/i.test(o[0])&&(this.inLink=!1),e=e.substring(o[0].length),a+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(o[0]):d(o[0]):o[0];else if(o=this.rules.link.exec(e))e=e.substring(o[0].length),this.inLink=!0,a+=this.outputLink(o,{href:o[2],title:o[3]}),this.inLink=!1;else if((o=this.rules.reflink.exec(e))||(o=this.rules.nolink.exec(e))){if(e=e.substring(o[0].length),t=(o[2]||o[1]).replace(/\s+/g," "),!(t=this.links[t.toLowerCase()])||!t.href){a+=o[0].charAt(0),e=o[0].substring(1)+e;continue}this.inLink=!0,a+=this.outputLink(o,t),this.inLink=!1}else if(o=this.rules.strong.exec(e))e=e.substring(o[0].length),a+=this.renderer.strong(this.output(o[2]||o[1]));else if(o=this.rules.em.exec(e))e=e.substring(o[0].length),a+=this.renderer.em(this.output(o[2]||o[1]));else if(o=this.rules.code.exec(e))e=e.substring(o[0].length),a+=this.renderer.codespan(d(o[2].trim(),!0));else if(o=this.rules.br.exec(e))e=e.substring(o[0].length),a+=this.renderer.br();else if(o=this.rules.del.exec(e))e=e.substring(o[0].length),a+=this.renderer.del(this.output(o[1]));else if(o=this.rules.text.exec(e))e=e.substring(o[0].length),a+=this.renderer.text(d(this.smartypants(o[0])));else if(e)throw new Error("Infinite loop on byte: "+e.charCodeAt(0))}else o[0]=this.rules._backpedal.exec(o[0])[0],e=e.substring(o[0].length),"@"===o[2]?r="mailto:"+(i=d(o[0])):(i=d(o[0]),r="www."===o[1]?"http://"+i:i),a+=this.renderer.link(r,null,i);return a},a.prototype.outputLink=function(e,t){var i=d(t.href),r=t.title?d(t.title):null;return"!"!==e[0].charAt(0)?this.renderer.link(i,r,this.output(e[1])):this.renderer.image(i,r,d(e[1]))},a.prototype.smartypants=function(e){return this.options.smartypants?e.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…"):e},a.prototype.mangle=function(e){if(!this.options.mangle)return e;for(var t,i="",r=e.length,o=0;o<r;o++)t=e.charCodeAt(o),Math.random()>.5&&(t="x"+t.toString(16)),i+="&#"+t+";";return i},n.prototype.code=function(e,t,i){if(this.options.highlight){var r=this.options.highlight(e,t);null!=r&&r!==e&&(i=!0,e=r)}return t?'<pre><code class="'+this.options.langPrefix+d(t,!0)+'">'+(i?e:d(e,!0))+"\n</code></pre>\n":"<pre><code>"+(i?e:d(e,!0))+"\n</code></pre>"},n.prototype.blockquote=function(e){return"<blockquote>\n"+e+"</blockquote>\n"},n.prototype.html=function(e){return e},n.prototype.heading=function(e,t,i){return"<h"+t+' id="'+this.options.headerPrefix+i.toLowerCase().replace(/[^\w]+/g,"-")+'">'+e+"</h"+t+">\n"},n.prototype.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"},n.prototype.list=function(e,t,i){var r=t?"ol":"ul";return"<"+r+(t&&1!==i?' start="'+i+'"':"")+">\n"+e+"</"+r+">\n"},n.prototype.listitem=function(e){return"<li>"+e+"</li>\n"},n.prototype.paragraph=function(e){return"<p>"+e+"</p>\n"},n.prototype.table=function(e,t){return"<table>\n<thead>\n"+e+"</thead>\n<tbody>\n"+t+"</tbody>\n</table>\n"},n.prototype.tablerow=function(e){return"<tr>\n"+e+"</tr>\n"},n.prototype.tablecell=function(e,t){var i=t.header?"th":"td";return(t.align?"<"+i+' style="text-align:'+t.align+'">':"<"+i+">")+e+"</"+i+">\n"},n.prototype.strong=function(e){return"<strong>"+e+"</strong>"},n.prototype.em=function(e){return"<em>"+e+"</em>"},n.prototype.codespan=function(e){return"<code>"+e+"</code>"},n.prototype.br=function(){return this.options.xhtml?"<br/>":"<br>"},n.prototype.del=function(e){return"<del>"+e+"</del>"},n.prototype.link=function(e,t,i){if(this.options.sanitize){try{var r=decodeURIComponent(l(e)).replace(/[^\w:]/g,"").toLowerCase()}catch(a){return i}if(0===r.indexOf("javascript:")||0===r.indexOf("vbscript:")||0===r.indexOf("data:"))return i}this.options.baseUrl&&!u.test(e)&&(e=c(this.options.baseUrl,e));var o='<a href="'+e+'"';return t&&(o+=' title="'+t+'"'),o+=">"+i+"</a>"},n.prototype.image=function(e,t,i){this.options.baseUrl&&!u.test(e)&&(e=c(this.options.baseUrl,e));var r='<img src="'+e+'" alt="'+i+'"';return t&&(r+=' title="'+t+'"'),r+=this.options.xhtml?"/>":">"},n.prototype.text=function(e){return e},s.prototype.strong=s.prototype.em=s.prototype.codespan=s.prototype.del=s.prototype.text=function(e){return e},s.prototype.link=s.prototype.image=function(e,t,i){return""+i},s.prototype.br=function(){return""},p.parse=function(e,t){return new p(t).parse(e)},p.prototype.parse=function(e){this.inline=new a(e.links,this.options),this.inlineText=new a(e.links,y({},this.options,{renderer:new s})),this.tokens=e.reverse();for(var t="";this.next();)t+=this.tok();return t},p.prototype.next=function(){return this.token=this.tokens.pop()},p.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0},p.prototype.parseText=function(){for(var e=this.token.text;"text"===this.peek().type;)e+="\n"+this.next().text;return this.inline.output(e)},p.prototype.tok=function(){switch(this.token.type){case"space":return"";case"hr":return this.renderer.hr();case"heading":return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,l(this.inlineText.output(this.token.text)));case"code":return this.renderer.code(this.token.text,this.token.lang,this.token.escaped);case"table":var e,t,i,r,o="",a="";for(i="",e=0;e<this.token.header.length;e++)i+=this.renderer.tablecell(this.inline.output(this.token.header[e]),{header:!0,align:this.token.align[e]});for(o+=this.renderer.tablerow(i),e=0;e<this.token.cells.length;e++){for(t=this.token.cells[e],i="",r=0;r<t.length;r++)i+=this.renderer.tablecell(this.inline.output(t[r]),{header:!1,align:this.token.align[r]});a+=this.renderer.tablerow(i)}return this.renderer.table(o,a);case"blockquote_start":for(a="";"blockquote_end"!==this.next().type;)a+=this.tok();return this.renderer.blockquote(a);case"list_start":a="";for(var n=this.token.ordered,s=this.token.start;"list_end"!==this.next().type;)a+=this.tok();return this.renderer.list(a,n,s);case"list_item_start":for(a="";"list_item_end"!==this.next().type;)a+="text"===this.token.type?this.parseText():this.tok();return this.renderer.listitem(a);case"loose_item_start":for(a="";"list_item_end"!==this.next().type;)a+=this.tok();return this.renderer.listitem(a);case"html":var p=this.token.pre||this.options.pedantic?this.token.text:this.inline.output(this.token.text);return this.renderer.html(p);case"paragraph":return this.renderer.paragraph(this.inline.output(this.token.text));case"text":return this.renderer.paragraph(this.parseText())}};var h={},u=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function f(){}function y(e){for(var t,i,r=1;r<arguments.length;r++)for(i in t=arguments[r])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}function v(e,t,i){if(null==e)throw new Error("marked(): input parameter is undefined or null");if("string"!=typeof e)throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(e)+", string expected");if(i||"function"==typeof t){i||(i=t,t=null);var o,a,n=(t=y({},v.defaults,t||{})).highlight,s=0;try{o=r.lex(e,t)}catch(m){return i(m)}a=o.length;var l=function(e){if(e)return t.highlight=n,i(e);var r;try{r=p.parse(o,t)}catch(m){e=m}return t.highlight=n,e?i(e):i(null,r)};if(!n||n.length<3)return l();if(delete t.highlight,!a)return l();for(;s<o.length;s++)!function(e){"code"!==e.type?--a||l():n(e.text,e.lang,(function(t,i){return t?l(t):null==i||i===e.text?--a||l():(e.text=i,e.escaped=!0,void(--a||l()))}))}(o[s])}else try{return t&&(t=y({},v.defaults,t)),p.parse(r.lex(e,t),t)}catch(m){if(m.message+="\nPlease report this to https://github.com/markedjs/marked.",(t||v.defaults).silent)return"<p>An error occurred:</p><pre>"+d(m.message+"",!0)+"</pre>";throw m}}f.exec=f,v.options=v.setOptions=function(e){return y(v.defaults,e),v},v.defaults={gfm:!0,tables:!0,breaks:!1,pedantic:!1,sanitize:!1,sanitizer:null,mangle:!0,smartLists:!1,silent:!1,highlight:null,langPrefix:"lang-",smartypants:!1,headerPrefix:"",renderer:new n,xhtml:!1,baseUrl:null},v.Parser=p,v.parser=p.parse,v.Renderer=n,v.TextRenderer=s,v.Lexer=r,v.lexer=r.lex,v.InlineLexer=a,v.inlineLexer=a.output,v.parse=v,e.exports=v}(this||"undefined"!=typeof window&&window)}).call(this,i("pCvA"))},AzFl:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("/1yZ"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"B4/L":function(e,t,i){var r=i("gwRl"),o=i("LBQr"),a=i("tb+2"),n=i("E7Xw"),s=Object.getOwnPropertySymbols?function(e){for(var t=[];e;)r(t,a(e)),e=o(e);return t}:n;e.exports=s},B4Jh:function(e,t,i){var r=i("fRAL"),o=Math.max;e.exports=function(e,t,i){return t=o(void 0===t?e.length-1:t,0),function(){for(var a=arguments,n=-1,s=o(a.length-t,0),p=Array(s);++n<s;)p[n]=a[t+n];n=-1;for(var d=Array(t+1);++n<t;)d[n]=a[n];return d[t]=i(p),r(e,this,d)}}},BAZ7:function(e,t){e.exports=function(e,t,i){for(var r=-1,o=null==e?0:e.length;++r<o;)if(i(t,e[r]))return!0;return!1}},BB2O:function(e,t,i){"use strict";t.a={cloud_docs:{GenericErrorTag:{fields:[{description:"Invalid argument supplied.",parameter:"invalid_argument",type:{primitive:"Void"}},{description:"User is unauthenticated.",parameter:"unauthenticated",type:{primitive:"Void"}},{description:"User does not have access to the specified doc.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"Doc could not be found based on the supplied doc ID.",parameter:"doc_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LockingError:{fields:[{parameter:"locking_error_tag",type:{optional:{datatype:"locking_error_tag_union",namespace:"cloud_docs"}}}],stone_type:"struct"},LockingErrorTag:{fields:[{description:"A lock on the doc is held by another editor",parameter:"conflict",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UnlockArg:{fields:[{description:'The API ID ("id:...") associated with the Cloud Doc',parameter:"file_id",type:{primitive:"String"}}],stone_type:"struct"},UnlockResult:{description:"Empty message for unlock",fields:[],stone_type:"struct"},locking_error_tag_union:{fields:[{parameter:"locking_error",type:{datatype:"LockingErrorTag",namespace:"cloud_docs"}},{parameter:"generic_error",type:{datatype:"GenericErrorTag",namespace:"cloud_docs"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},BKxz:function(e,t){var i=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;e.exports=function(e,t){var r=t.length;if(!r)return e;var o=r-1;return t[o]=(r>1?"& ":"")+t[o],t=t.join(r>2?", ":" "),e.replace(i,"{\n/* [wrapped with "+t+"] */\n")}},BSFn:function(e,t,i){"use strict";t.a={team:{NamespaceMetadata:{description:"Properties of a namespace.",fields:[{description:"The name of this namespace.",parameter:"name",type:{primitive:"String"}},{description:"The ID of this namespace.",parameter:"namespace_id",type:{primitive:"String"}},{description:"The type of this namespace.",parameter:"namespace_type",type:{datatype:"NamespaceType",namespace:"team"}},{description:"If this is a team member or app folder, the ID of the owning team member. Otherwise, this field is not present.",parameter:"team_member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"},NamespaceType:{fields:[{description:"App sandbox folder.",parameter:"app_folder",type:{primitive:"Void"}},{description:"Shared folder.",parameter:"shared_folder",type:{primitive:"Void"}},{description:"Top-level team-owned folder.",parameter:"team_folder",type:{primitive:"Void"}},{description:"Team member's home folder.",parameter:"team_member_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamNamespacesListContinueArg:{fields:[{description:"Indicates from what point to get the next set of team-accessible namespaces.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},TeamNamespacesListContinueError:{fields:[{description:"Argument passed in is invalid.",parameter:"invalid_arg",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"The cursor is invalid.",parameter:"invalid_cursor",type:{primitive:"Void"}}],stone_type:"open_union"},TeamNamespacesListResult:{description:"Result for :route:`namespaces/list`.",fields:[{description:"List of all namespaces the team can access.",parameter:"namespaces",type:{list:{datatype:"NamespaceMetadata",namespace:"team"}}},{description:"Pass the cursor into :route:`namespaces/list/continue` to obtain additional namespaces. Note that duplicate namespaces may be returned.",parameter:"cursor",type:{primitive:"String"}},{description:"Is true if there are additional namespaces that have not been returned yet.",parameter:"has_more",type:{primitive:"Boolean"}}],stone_type:"struct"}}}},BW49:function(e,t,i){var r=i("sWZd"),o=i("lYsT"),a=i("PqlX"),n=i("q+I6"),s=i("ckUF"),p=i("cTHi");e.exports=function(e,t,i){for(var d=-1,l=(t=r(t,e)).length,m=!1;++d<l;){var c=p(t[d]);if(!(m=null!=e&&i(e,c)))break;e=e[c]}return m||++d!=l?m:!!(l=null==e?0:e.length)&&s(l)&&n(c,l)&&(a(e)||o(e))}},Bcfl:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("9xmz"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},BoCx:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("/w4M"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},BpRd:function(e,t,i){"use strict";t.a={team:{ApiApp:{description:"Information on linked third party applications.",fields:[{description:"The application unique id.",parameter:"app_id",type:{primitive:"String"}},{description:"The application name.",parameter:"app_name",type:{primitive:"String"}},{description:"Whether the linked application uses a dedicated folder.",parameter:"is_app_folder",type:{primitive:"Boolean"}},{description:"The application publisher name.",parameter:"publisher",type:{optional:{primitive:"String"}}},{description:"The publisher's URL.",parameter:"publisher_url",type:{optional:{primitive:"String"}}},{description:"The time this application was linked.",parameter:"linked",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},ListMemberAppsArg:{fields:[{description:"The team member id.",parameter:"team_member_id",type:{primitive:"String"}}],stone_type:"struct"},ListMemberAppsError:{description:"Error returned by :route:`linked_apps/list_member_linked_apps`.",fields:[{description:"Member not found.",parameter:"member_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListMemberAppsResult:{fields:[{description:"List of third party applications linked by this team member.",parameter:"linked_api_apps",type:{list:{datatype:"ApiApp",namespace:"team"}}}],stone_type:"struct"}}}},Bpme:function(e,t,i){var r=i("CIUO"),o=i("TsNJ"),a=i("DhoL"),n=a&&a.isMap,s=n?o(n):r;e.exports=s},Bq5F:function(e,t){e.exports=function(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}},BwbT:function(e,t,i){var r=i("PqlX"),o=i("zXe4"),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,n=/^\w*$/;e.exports=function(e,t){if(r(e))return!1;var i=typeof e;return!("number"!=i&&"symbol"!=i&&"boolean"!=i&&null!=e&&!o(e))||(n.test(e)||!a.test(e)||null!=t&&e in Object(t))}},C4wT:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("lHWt"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},C6aM:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("mmOD"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},CDQ7:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{AddSecondaryEmailResult:{description:"Result of trying to add a secondary email to a user. 'success' is the only value indicating that a secondary email was successfully added to a user. The other values explain the type of error that occurred, and include the email for which the error occured.",fields:[{description:"Describes a secondary email that was successfully added to a user.",parameter:"success",type:{datatype:"SecondaryEmail",namespace:"secondary_emails"}},{description:"Secondary email is not available to be claimed by the user.",parameter:"unavailable",type:{primitive:"String"}},{description:"Secondary email is already a pending email for the user.",parameter:"already_pending",type:{primitive:"String"}},{description:"Secondary email is already a verified email for the user.",parameter:"already_owned_by_user",type:{primitive:"String"}},{description:"User already has the maximum number of secondary emails allowed.",parameter:"reached_limit",type:{primitive:"String"}},{description:"A transient error occurred. Please try again later.",parameter:"transient_error",type:{primitive:"String"}},{description:"An error occurred due to conflicting updates. Please try again later.",parameter:"too_many_updates",type:{primitive:"String"}},{description:"An unknown error occurred.",parameter:"unknown_error",type:{primitive:"String"}},{description:"Too many emails are being sent to this email address. Please try again later.",parameter:"rate_limited",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AddSecondaryEmailsArg:{fields:[{description:"List of users and secondary emails to add.",parameter:"new_secondary_emails",type:{list:{datatype:"UserSecondaryEmailsArg",namespace:"team"}}}],stone_type:"struct"},AddSecondaryEmailsError:{description:"Error returned when adding secondary emails fails.",fields:[{description:"Secondary emails are disabled for the team.",parameter:"secondary_emails_disabled",type:{primitive:"Void"}},{description:"A maximum of 20 secondary emails can be added in a single call.",parameter:"too_many_emails",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AddSecondaryEmailsResult:{fields:[{description:"List of users and secondary email results.",parameter:"results",type:{list:{datatype:"UserAddResult",namespace:"team"}}}],stone_type:"struct"},UserAddResult:{description:"Result of trying to add secondary emails to a user. 'success' is the only value indicating that a user was successfully retrieved for adding secondary emails. The other values explain the type of error that occurred, and include the user for which the error occured.",fields:[{description:"Describes a user and the results for each attempt to add a secondary email.",parameter:"success",type:{datatype:"UserSecondaryEmailsResult",namespace:"team"}},{description:"Specified user is not a valid target for adding secondary emails.",parameter:"invalid_user",type:{datatype:"UserSelectorArg",namespace:"team"}},{description:"Secondary emails can only be added to verified users.",parameter:"unverified",type:{datatype:"UserSelectorArg",namespace:"team"}},{description:"Secondary emails cannot be added to placeholder users.",parameter:"placeholder_user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserSecondaryEmailsArg:{description:"User and a list of secondary emails.",fields:[{parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"secondary_emails",type:{list:{primitive:"String"}}}],stone_type:"struct"},UserSecondaryEmailsResult:{fields:[{parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"results",type:{list:{datatype:"AddSecondaryEmailResult",namespace:"team"}}}],stone_type:"struct"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},"CG+W":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("naDv"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},CIBY:function(e,t,i){var r=i("V2ZB"),o=i("B4/L");e.exports=function(e,t){return r(e,o(e),t)}},CIUO:function(e,t,i){var r=i("s3t7"),o=i("T9Ud");e.exports=function(e){return o(e)&&"[object Map]"==r(e)}},CO6n:function(e,t,i){"use strict";t.a={team:{MembersSendWelcomeError:{description:"",fields:[{description:"No matching user found. The provided team_member_id, email, or external_id does not exist on this team.",parameter:"user_not_found",type:{primitive:"Void"}},{description:"The user is not a member of the team.",parameter:"user_not_in_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},COrk:function(e,t,i){var r=i("E1Sn"),o=i("T9Ud");e.exports=function e(t,i,a,n,s){return t===i||(null==t||null==i||!o(t)&&!o(i)?t!=t&&i!=i:r(t,i,a,n,e,s))}},CPLO:function(e,t,i){var r=i("zlak"),o=i("TsNJ"),a=i("DhoL"),n=a&&a.isSet,s=n?o(n):r;e.exports=s},CVSJ:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("HCVN"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},Chmn:function(e,t){e.exports=function(e){return this.__data__.get(e)}},ClrY:function(e,t,i){"use strict";t.a={team:{ActiveWebSession:{description:"Information on active web sessions.",fields:[{description:"The session id.",parameter:"session_id",type:{primitive:"String"}},{description:"Information on the hosting device.",parameter:"user_agent",type:{primitive:"String"}},{description:"Information on the hosting operating system.",parameter:"os",type:{primitive:"String"}},{description:"Information on the browser used for this web session.",parameter:"browser",type:{primitive:"String"}},{description:"The IP address of the last activity from this session.",parameter:"ip_address",type:{optional:{primitive:"String"}}},{description:"The country from which the last activity from this session was made.",parameter:"country",type:{optional:{primitive:"String"}}},{description:"The time this session was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}},{description:"The time of the last activity from this session.",parameter:"updated",type:{optional:{primitive:"Timestamp"}}},{description:"The time this session expires.",parameter:"expires",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},DesktopClientSession:{description:"Information about linked Dropbox desktop client sessions.",fields:[{description:"The session id.",parameter:"session_id",type:{primitive:"String"}},{description:"Name of the hosting desktop.",parameter:"host_name",type:{primitive:"String"}},{description:"The Dropbox desktop client type.",parameter:"client_type",type:{datatype:"DesktopPlatform",namespace:"team"}},{description:"The Dropbox client version.",parameter:"client_version",type:{primitive:"String"}},{description:"Information on the hosting platform.",parameter:"platform",type:{primitive:"String"}},{description:"Whether it's possible to delete all of the account files upon unlinking.",parameter:"is_delete_on_unlink_supported",type:{primitive:"Boolean"}},{description:"The IP address of the last activity from this session.",parameter:"ip_address",type:{optional:{primitive:"String"}}},{description:"The country from which the last activity from this session was made.",parameter:"country",type:{optional:{primitive:"String"}}},{description:"The time this session was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}},{description:"The time of the last activity from this session.",parameter:"updated",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},DesktopPlatform:{fields:[{description:"Official Windows Dropbox desktop client.",parameter:"windows",type:{primitive:"Void"}},{description:"Official Mac Dropbox desktop client.",parameter:"mac",type:{primitive:"Void"}},{description:"Official Linux Dropbox desktop client.",parameter:"linux",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListMembersDevicesArg:{fields:[{description:"At the first call to the :route:`devices/list_members_devices` the cursor shouldn't be passed. Then, if the result of the call includes a cursor, the following requests should include the received cursors in order to receive the next sub list of team devices.",parameter:"cursor",type:{optional:{primitive:"String"}}},{description:"Whether to list web sessions of the team members.",parameter:"include_web_sessions",type:{primitive:"Boolean"}},{description:"Whether to list desktop clients of the team members.",parameter:"include_desktop_clients",type:{primitive:"Boolean"}},{description:"Whether to list mobile clients of the team members.",parameter:"include_mobile_clients",type:{primitive:"Boolean"}}],stone_type:"struct"},ListMembersDevicesError:{fields:[{description:"Indicates that the cursor has been invalidated. Call :route:`devices/list_members_devices` again with an empty cursor to obtain a new cursor.",parameter:"reset",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListMembersDevicesResult:{fields:[{description:"The devices of each member of the team.",parameter:"devices",type:{list:{datatype:"MemberDevices",namespace:"team"}}},{description:"If true, then there are more devices available. Pass the cursor to :route:`devices/list_members_devices` to retrieve the rest.",parameter:"has_more",type:{primitive:"Boolean"}},{description:"Pass the cursor into :route:`devices/list_members_devices` to receive the next sub list of team's devices.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberDevices:{description:"Information on devices of a team's member.",fields:[{description:"The member unique Id.",parameter:"team_member_id",type:{primitive:"String"}},{description:"List of web sessions made by this team member.",parameter:"web_sessions",type:{optional:{list:{datatype:"ActiveWebSession",namespace:"team"}}}},{description:"List of desktop clients by this team member.",parameter:"desktop_clients",type:{optional:{list:{datatype:"DesktopClientSession",namespace:"team"}}}},{description:"List of mobile clients by this team member.",parameter:"mobile_clients",type:{optional:{list:{datatype:"MobileClientSession",namespace:"team"}}}}],stone_type:"struct"},MobileClientPlatform:{fields:[{description:"Official Dropbox iPhone client.",parameter:"iphone",type:{primitive:"Void"}},{description:"Official Dropbox iPad client.",parameter:"ipad",type:{primitive:"Void"}},{description:"Official Dropbox Android client.",parameter:"android",type:{primitive:"Void"}},{description:"Official Dropbox Windows phone client.",parameter:"windows_phone",type:{primitive:"Void"}},{description:"Official Dropbox Blackberry client.",parameter:"blackberry",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MobileClientSession:{description:"Information about linked Dropbox mobile client sessions.",fields:[{description:"The session id.",parameter:"session_id",type:{primitive:"String"}},{description:"The device name.",parameter:"device_name",type:{primitive:"String"}},{description:"The mobile application type.",parameter:"client_type",type:{datatype:"MobileClientPlatform",namespace:"team"}},{description:"The IP address of the last activity from this session.",parameter:"ip_address",type:{optional:{primitive:"String"}}},{description:"The country from which the last activity from this session was made.",parameter:"country",type:{optional:{primitive:"String"}}},{description:"The time this session was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}},{description:"The time of the last activity from this session.",parameter:"updated",type:{optional:{primitive:"Timestamp"}}},{description:"The dropbox client version.",parameter:"client_version",type:{optional:{primitive:"String"}}},{description:"The hosting OS version.",parameter:"os_version",type:{optional:{primitive:"String"}}},{description:"last carrier used by the device.",parameter:"last_carrier",type:{optional:{primitive:"String"}}}],stone_type:"struct"}}}},CvO6:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{ExcludedUsersListContinueArg:{description:"Excluded users list continue argument.",fields:[{description:"Indicates from what point to get the next set of users.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},ExcludedUsersListContinueError:{description:"Excluded users list continue error.",fields:[{description:"The cursor is invalid.",parameter:"invalid_cursor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ExcludedUsersListResult:{description:"Excluded users list result.",fields:[{parameter:"users",type:{list:{datatype:"MemberProfile",namespace:"team"}}},{description:"Is true if there are additional excluded users that have not been returned yet. An additional call to :route:`member_space_limits/excluded_users/list/continue` can retrieve them.",parameter:"has_more",type:{primitive:"Boolean"}},{description:"Pass the cursor into :route:`member_space_limits/excluded_users/list/continue` to obtain additional excluded users.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberProfile:{description:"Basic member profile.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},CzB4:function(e,t,i){var r=i("w5ta"),o=i("RW/s"),a=i("0KRy");e.exports=function(){this.size=0,this.__data__={hash:new r,map:new(a||o),string:new r}}},D2wv:function(e,t,i){"use strict";var r=i("wpsh");e.exports=function(e,t,i){if(null!=i&&"string"!==r(i))throw new TypeError('expected "prop" to be undefined or a string');var o=r(e),a=r(t);return i&&("object"===o&&(e=e[i],o=r(e)),"object"===a&&(t=t[i],a=r(t))),"null"===o?"null"===a?0:"undefined"===a?-1:1:"undefined"===o?"null"===a?1:"undefined"===a?0:1:"null"===a||"undefined"===a||e<t?-1:e>t?1:0}},DG7C:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("yQuk"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},DGBo:function(e,t){},DOBe:function(e,t,i){"use strict";t.a={files:{ContentSyncSetting:{fields:[{description:"Id of the item this setting is applied to.",parameter:"id",type:{primitive:"String"}},{description:"Setting for this item.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}}],stone_type:"struct"},SyncSetting:{fields:[{description:"On first sync to members' computers, the specified folder will follow its parent folder's setting or otherwise follow default sync behavior.",parameter:"default",type:{primitive:"Void"}},{description:"On first sync to members' computers, the specified folder will be set to not sync with selective sync.",parameter:"not_synced",type:{primitive:"Void"}},{description:"The specified folder's not_synced setting is inactive due to its location or other configuration changes. It will follow its parent folder's setting.",parameter:"not_synced_inactive",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},team:{TeamFolderGetInfoItem:{fields:[{description:"An ID that was provided as a parameter to :route:`team_folder/get_info` did not match any of the team's team folders.",parameter:"id_not_found",type:{primitive:"String"}},{description:"Properties of a team folder.",parameter:"team_folder_metadata",type:{datatype:"TeamFolderMetadata",namespace:"team"}}],stone_type:"union"},TeamFolderIdListArg:{fields:[{description:"The list of team folder IDs.",parameter:"team_folder_ids",type:{list:{primitive:"String"}}}],stone_type:"struct"},TeamFolderMetadata:{description:"Properties of a team folder.",fields:[{description:"The ID of the team folder.",parameter:"team_folder_id",type:{primitive:"String"}},{description:"The name of the team folder.",parameter:"name",type:{primitive:"String"}},{description:"The status of the team folder.",parameter:"status",type:{datatype:"TeamFolderStatus",namespace:"team"}},{description:"True if this team folder is a shared team root.",parameter:"is_team_shared_dropbox",type:{primitive:"Boolean"}},{description:"The sync setting applied to this team folder.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}},{description:"Sync settings applied to contents of this team folder.",parameter:"content_sync_settings",type:{list:{datatype:"ContentSyncSetting",namespace:"files"}}}],stone_type:"struct"},TeamFolderStatus:{fields:[{description:"The team folder and sub-folders are available to all members.",parameter:"active",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archived",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},DS9h:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("BB2O"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},DZMJ:function(e,t,i){var r=i("FEiO"),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(r){var i=t[e];return"__lodash_hash_undefined__"===i?void 0:i}return o.call(t,e)?t[e]:void 0}},DZwi:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("rAe6"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},DavM:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("KQbX"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},Dh2Y:function(e,t,i){var r=i("YaJL");e.exports=function(e,t,i){"__proto__"==t&&r?r(e,t,{configurable:!0,enumerable:!0,value:i,writable:!0}):e[t]=i}},DhoL:function(e,t,i){(function(e){var r=i("FfeU"),o=t&&!t.nodeType&&t,a=o&&"object"==typeof e&&e&&!e.nodeType&&e,n=a&&a.exports===o&&r.process,s=function(){try{var e=a&&a.require&&a.require("util").types;return e||n&&n.binding&&n.binding("util")}catch(t){}}();e.exports=s}).call(this,i("RoC8")(e))},DiqA:function(e,t,i){"use strict";t.a={team:{DateRange:{description:"Input arguments that can be provided for most reports.",fields:[{description:"Optional starting date (inclusive). If start_date is None or too long ago, this field will  be set to 6 months ago.",parameter:"start_date",type:{optional:{primitive:"Timestamp"}}},{description:"Optional ending date (exclusive).",parameter:"end_date",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},DateRangeError:{description:"Errors that can originate from problems in input arguments to reports.",fields:[{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GetStorageReport:{description:"Storage Report Result. Each of the items in the storage report is an array of values, one value per day. If there is no data for a day, then the value will be None.",fields:[{description:"First date present in the results as 'YYYY-MM-DD' or None.",parameter:"start_date",type:{primitive:"String"}},{description:"Sum of the shared, unshared, and datastore usages, for each day.",parameter:"total_usage",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of the combined size (bytes) of team members' shared folders, for each day.",parameter:"shared_usage",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of the combined size (bytes) of team members' root namespaces, for each day.",parameter:"unshared_usage",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of the number of shared folders owned by team members, for each day.",parameter:"shared_folders",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of storage summaries of team members' account sizes. Each storage summary is an array of key, value pairs, where each pair describes a storage bucket. The key indicates the upper bound of the bucket and the value is the number of users in that bucket. There is one such summary per day. If there is no data for a day, the storage summary will be empty.",parameter:"member_storage_map",type:{list:{list:{datatype:"StorageBucket",namespace:"team"}}}}],stone_type:"struct"},StorageBucket:{description:"Describes the number of users in a specific storage bucket.",fields:[{description:"The name of the storage bucket. For example, '1G' is a bucket of users with storage size up to 1 Giga.",parameter:"bucket",type:{primitive:"String"}},{description:"The number of people whose storage is in the range of this storage bucket.",parameter:"users",type:{primitive:"UInt64"}}],stone_type:"struct"}}}},Djva:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("k7xs"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},Dkjd:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Tw9J"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},DlYZ:function(e,t){e.exports=function(e,t){for(var i=e.length,r=0;i--;)e[i]===t&&++r;return r}},"Do+M":function(e,t,i){"use strict";i.d(t,"a",(function(){return P}));var r=i("mXGw"),o=i.n(r),a=(i("5ltd"),i("aD51")),n=function(e){var t=e.children;return Object(a.c)("div",{className:"warning-container"},Object(a.c)("span",{className:"warning-content"},t))},s=n;void 0!==n&&n&&n===Object(n)&&Object.isExtensible(n)&&!n.hasOwnProperty("__filemeta")&&Object.defineProperty(n,"__filemeta",{configurable:!0,value:{name:"Warning",filename:"src/components/Warning.tsx"}});var p=function(e){var t,i=e.deprecatedBy;return i&&(t=Object(a.c)("span",null,"Use ",i," instead.")),Object(a.c)(s,null,"WARNING: This API is deprecated. ",t)},d=i("ZFoC"),l={"App Authentication":"app","User Authentication":"user","Dropbox-API-Select-Admin (Whole Team)":"team"};function m(e){var t=e.authType;if("user"===(t=l[t]||t))return Object(a.c)(d.b,{to:"https://www.dropbox.com/developers/reference/auth-types#user"},"User Authentication");if("app"===t)return Object(a.c)(d.b,{to:"https://www.dropbox.com/developers/reference/auth-types#app"},"App Authentication");if("team"===t)return Object(a.c)(d.b,{to:"https://www.dropbox.com/developers/reference/auth-types#team"},"Team Authentication");if("whole_team"===t)return Object(a.c)(d.b,{to:"https://www.dropbox.com/developers/documentation/http/teams#teams-member-file-access"},"Dropbox-API-Select-Admin (Whole Team)");if("team_admin"===t)return Object(a.c)(d.b,{to:"https://www.dropbox.com/developers/documentation/http/teams#teams-member-file-access"},"Dropbox-API-Select-Admin (Team Admin)");if("noauth"===t)return Object(a.c)(d.b,{to:"https://www.dropbox.com/developers/reference/auth-types#noauth"},"No Authentication");throw new Error("unexpected auth type "+t)}function c(e){var t=e.authTypes;return 0===t.length?null:1===t.length?Object(a.c)(m,{authType:t[0]}):Object(a.c)(o.a.Fragment,null,Object(a.c)(m,{authType:t[0]}),t.slice(1).map((function(e){return Object(a.c)(o.a.Fragment,{key:e},", ",Object(a.c)(m,{authType:e}))})))}void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"AuthTypes",filename:"src/components/AuthTypes.tsx"}});var h=i("zL5+");function u(e){var t=e.children;return Object(h.h)(h.f.pre,{className:"code-block"},t)}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"Code",filename:"src/components/Code.tsx"}});i("TSCL");function f(e){var t=e.shellExample;if(!t)return Object(a.c)(u,null,"Sorry, no curl example is currently available for this endpoint");var i=t.split("&nbsp").join(" ").split("\\n").map((function(e,t){return Object(a.c)("div",{key:"shell-example-"+t},e)}));return Object(a.c)(u,null,i)}function y(e){var t=e.children,i=e.visible?"nesting-type-box":"nesting-type-box hidden";return Object(a.c)("div",{className:i},t)}void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!f.hasOwnProperty("__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"ShellExample",filename:"src/components/ShellExample.tsx"}}),void 0!==y&&y&&y===Object(y)&&Object.isExtensible(y)&&!y.hasOwnProperty("__filemeta")&&Object.defineProperty(y,"__filemeta",{configurable:!0,value:{name:"NestingTypeBox",filename:"src/components/NestingTypeBox.tsx"}});i("0K2X");var v={struct:"Struct",union:"Union",open_union:"Open Union"},_={union:"The value will be one of the following datatypes:",open_union:"The value will be one of the following datatypes. New values may be introduced as our API evolves."};function g(e){var t=e.field,i=e.typeInfo,o=e.expandedByDefault,n=t.parameter,s=t.description,p=t.type,d=Object(r.useMemo)((function(){return function e(t){if("primitive"in t)return{terminal:!0,name:t.primitive,optional:!1};if("namespace"in t){var i=t.datatype;return{terminal:!1,name:i,namespace:t.namespace,datatype:i,optional:!1}}if("list"in t){var r=e(t.list);return Object.assign({},r,{name:"List of ("+r.name+")",optional:!1})}if("map"in t){var o=e(t.map);return Object.assign({},o,{name:"Map from ("+t.key+") to ("+o.name+")",optional:!1})}if("optional"in t){var a=e(t.optional);return Object.assign({},a,{name:a.name+"?",optional:!0})}throw Error("unexpected type "+t)}(p)}),[p]),l=(d.optional,d.name),m=Object(r.useState)(o),c=m[0],h=m[1],u=Object(r.useCallback)((function(e){return h((function(e){return!e}))}),[h]),f=d.terminal?"parameter-type":"parameter-type nested";return Object(a.c)("div",{className:"field-row"},Object(a.c)("div",null,Object(a.c)("div",null,Object(a.c)("div",null,Object(a.c)("span",{className:"parameter-name"},n),Object(a.c)("span",{className:f,onClick:u},l),Object(a.c)("span",{className:"parameter-description"},s)))),d.terminal?null:Object(a.c)(y,{visible:c},Object(a.c)(b,{namespace:d.namespace,datatype:d.datatype,typeInfo:i})))}function b(e){var t=e.namespace,i=e.datatype,r=e.typeInfo;if("Void"==t)return Object(a.c)("div",null,"Nothing");var n=!1;i.endsWith("[]")&&(n=!0,i=i.substring(0,i.length-2));var s=r[t][i],p=s.stone_type,d=s.fields,l=s.description;return Object(a.c)(o.a.Fragment,null,n&&Object(a.c)("div",null,Object(a.c)("i",null,"This route returns a list. This means the route can accept a homogenous list of the following types:")),Object(a.c)("div",null,i," ",Object(a.c)("i",null,"(",v[p],")")),l&&Object(a.c)("p",null,l),"struct"!=p&&Object(a.c)("div",null,_[p]),Object(a.c)("ul",{className:"type-explanation-list"},d.map((function(e,t){return Object(a.c)("li",{key:"TypeExplanation-"+t},Object(a.c)(g,{field:e,typeInfo:r,expandedByDefault:!1}))}))))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"TypeExplanation",filename:"src/components/TypeExplanation.tsx"}});var w=function(e){var t=e.description;if(!t)return Object(a.c)("div",{className:"description-box"},"No description available.");var i=t.split("&nbsp").join(" ").split("\\n").map((function(e,t){return Object(a.c)("div",{key:"description-paragraph-"+t},e)}));return Object(a.c)("div",{className:"description-box"},i)},T=w;void 0!==w&&w&&w===Object(w)&&Object.isExtensible(w)&&!w.hasOwnProperty("__filemeta")&&Object.defineProperty(w,"__filemeta",{configurable:!0,value:{name:"Description",filename:"src/components/Description.tsx"}});i("4tS/");function V(e){var t=e.title,i=e.children;return Object(a.c)("div",{className:"row-container"},Object(a.c)("div",{className:"row-title"},t),Object(a.c)("div",{className:"row-content"},i))}function k(e){var t=e.versions,i=e.selected;return Object(a.c)("select",{id:"versions",name:"versions",defaultValue:i},t.map((function(e){return Object(a.c)("option",{key:"version-"+e,value:e},e)})))}void 0!==V&&V&&V===Object(V)&&Object.isExtensible(V)&&!V.hasOwnProperty("__filemeta")&&Object.defineProperty(V,"__filemeta",{configurable:!0,value:{name:"RowContainer",filename:"src/components/RowContainer.tsx"}}),void 0!==k&&k&&k===Object(k)&&Object.isExtensible(k)&&!k.hasOwnProperty("__filemeta")&&Object.defineProperty(k,"__filemeta",{configurable:!0,value:{name:"VersionDropdown",filename:"src/components/VersionDropdown.tsx"}});var S={rpc:"RPC",download:"Content-download",upload:"Content-upload"};function x(e){var t=e.endpointFormat;return t=S[t]||t,Object(a.c)(d.b,{to:"https://www.dropbox.com/developers/documentation/http/documentation#formats"},t)}void 0!==x&&x&&x===Object(x)&&Object.isExtensible(x)&&!x.hasOwnProperty("__filemeta")&&Object.defineProperty(x,"__filemeta",{configurable:!0,value:{name:"EndpointFormat",filename:"src/components/EndpointFormat.tsx"}});i("n59X");function A(e){var t=e.label,i=e.content;return Object(a.c)("div",{className:"example-container"},Object(a.c)("div",{className:"example-label"},"Example: ",t),Object(a.c)(u,null,JSON.stringify(i,null,2)))}function P(e){var t=e.endpointProps,i=(t.namespace,t.endpoint,t.route),r=t.isDeprecated,n=t.isPreview,d=t.deprecatedBy,l=t.description,m=t.authentication,h=t.shellExample,y=t.paramType,v=t.typeInfo,_=t.returnType,g=t.errorType,w=t.endpointFormat,S=t.scope,P=t.paramExamples,D=t.returnExamples,I=t.errorExamples,E=t.urlStructure,L=t.version,R=function(e){if(e)return e.map((function(e,t){return Object(a.c)(A,{key:"example-"+t+"-"+e.label,label:e.label,content:e.content})}))};return Object(a.c)(o.a.Fragment,null,r&&Object(a.c)(p,{deprecatedBy:d||""}),n&&Object(a.c)(s,null,"PREVIEW - may change or disappear without notice"),Object(a.c)("h1",null,i),Object(a.c)(V,{title:"Version"},Object(a.c)(k,{versions:[L],selected:L})),Object(a.c)(V,{title:"Description"},Object(a.c)(T,{description:l})),Object(a.c)(V,{title:"URL Structure"},Object(a.c)(u,null,E)),Object(a.c)(V,{title:"Authentication"},!!m&&Object(a.c)(c,{authTypes:m})),Object(a.c)(V,{title:"Endpoint Format"},Object(a.c)(x,{endpointFormat:w})),Object(a.c)(V,{title:"Required Scope"},S),Object(a.c)(V,{title:"Example"},Object(a.c)(f,{shellExample:h})),Object(a.c)(V,{title:"Parameters"},R(P),Object(a.c)(b,{namespace:y.namespace,datatype:y.datatype,typeInfo:v})),Object(a.c)(V,{title:"Returns"},R(D),Object(a.c)(b,{namespace:_.namespace,datatype:_.datatype,typeInfo:v})),Object(a.c)(V,{title:"Errors"},R(I),Object(a.c)(b,{namespace:g.namespace,datatype:g.datatype,typeInfo:v})))}void 0!==A&&A&&A===Object(A)&&Object.isExtensible(A)&&!A.hasOwnProperty("__filemeta")&&Object.defineProperty(A,"__filemeta",{configurable:!0,value:{name:"Example",filename:"src/components/Example.tsx"}}),"undefined"!=typeof EndpointProps&&EndpointProps&&EndpointProps===Object(EndpointProps)&&Object.isExtensible(EndpointProps)&&!EndpointProps.hasOwnProperty("__filemeta")&&Object.defineProperty(EndpointProps,"__filemeta",{configurable:!0,value:{name:"EndpointProps",filename:"src/components/Endpoint.tsx"}}),void 0!==P&&P&&P===Object(P)&&Object.isExtensible(P)&&!P.hasOwnProperty("__filemeta")&&Object.defineProperty(P,"__filemeta",{configurable:!0,value:{name:"Endpoint",filename:"src/components/Endpoint.tsx"}})},E15N:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("lHM0"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},E1Sn:function(e,t,i){var r=i("WRuO"),o=i("MBdc"),a=i("LdZC"),n=i("ji6j"),s=i("s3t7"),p=i("PqlX"),d=i("tfj2"),l=i("3kU/"),m="[object Object]",c=Object.prototype.hasOwnProperty;e.exports=function(e,t,i,h,u,f){var y=p(e),v=p(t),_=y?"[object Array]":s(e),g=v?"[object Array]":s(t),b=(_="[object Arguments]"==_?m:_)==m,w=(g="[object Arguments]"==g?m:g)==m,T=_==g;if(T&&d(e)){if(!d(t))return!1;y=!0,b=!1}if(T&&!b)return f||(f=new r),y||l(e)?o(e,t,i,h,u,f):a(e,t,_,i,h,u,f);if(!(1&i)){var V=b&&c.call(e,"__wrapped__"),k=w&&c.call(t,"__wrapped__");if(V||k){var S=V?e.value():e,x=k?t.value():t;return f||(f=new r),u(S,x,i,h,f)}}return!!T&&(f||(f=new r),n(e,t,i,h,u,f))}},E7Xw:function(e,t){e.exports=function(){return[]}},EKeD:function(e,t,i){var r=i("fxeQ"),o=r&&new r;e.exports=o},ELFn:function(e,t,i){"use strict";t.a={file_properties:{LogicalOperator:{description:"Logical operator to join search queries together.",fields:[{description:'Append a query with an "or" operator.',parameter:"or_operator",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LookUpPropertiesError:{fields:[{description:"No property group was found.",parameter:"property_group_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PropertiesSearchArg:{fields:[{description:"Queries to search.",parameter:"queries",type:{list:{datatype:"PropertiesSearchQuery",namespace:"file_properties"}}},{description:"Filter results to contain only properties associated with these template IDs.",parameter:"template_filter",type:{datatype:"TemplateFilter",namespace:"file_properties"}}],stone_type:"struct"},PropertiesSearchError:{fields:[{parameter:"property_group_lookup",type:{datatype:"LookUpPropertiesError",namespace:"file_properties"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PropertiesSearchMatch:{fields:[{description:"The ID for the matched file or folder.",parameter:"id",type:{primitive:"String"}},{description:"The path for the matched file or folder.",parameter:"path",type:{primitive:"String"}},{description:"Whether the file or folder is deleted.",parameter:"is_deleted",type:{primitive:"Boolean"}},{description:"List of custom property groups associated with the file.",parameter:"property_groups",type:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}],stone_type:"struct"},PropertiesSearchMode:{fields:[{description:"Search for a value associated with this field name.",parameter:"field_name",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PropertiesSearchQuery:{fields:[{description:"The property field value for which to search across templates.",parameter:"query",type:{primitive:"String"}},{description:"The mode with which to perform the search.",parameter:"mode",type:{datatype:"PropertiesSearchMode",namespace:"file_properties"}},{description:"The logical operator with which to append the query.",parameter:"logical_operator",type:{datatype:"LogicalOperator",namespace:"file_properties"}}],stone_type:"struct"},PropertiesSearchResult:{fields:[{description:"A list (possibly empty) of matches for the query.",parameter:"matches",type:{list:{datatype:"PropertiesSearchMatch",namespace:"file_properties"}}},{description:"Pass the cursor into :route:`properties/search/continue` to continue to receive search results. Cursor will be null when there are no more results.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"},TemplateFilter:{fields:[{description:"Only templates with an ID in the supplied list will be returned (a subset of templates will be returned).",parameter:"filter_some",type:{list:{primitive:"String"}}},{parameter:"other",type:{primitive:"Void"}},{description:"No templates will be filtered from the result (all templates will be returned).",parameter:"filter_none",type:{primitive:"Void"}}],stone_type:"open_union"}}}},ELdr:function(e,t,i){"use strict";i.d(t,"c",(function(){return p})),i.d(t,"d",(function(){return d})),i.d(t,"a",(function(){return a})),i.d(t,"b",(function(){return n}));var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e},o=function(e){var t=e.location,i=t.search,r=t.hash,o=t.href,a=t.origin,n=t.protocol,p=t.host,d=t.hostname,l=t.port,m=e.location.pathname;!m&&o&&s&&(m=new URL(o).pathname);return{pathname:encodeURI(decodeURI(m)),search:i,hash:r,href:o,origin:a,protocol:n,host:p,hostname:d,port:l,state:e.history.state,key:e.history.state&&e.history.state.key||"initial"}},a=function(e,t){var i=[],a=o(e),n=!1,s=function(){};return{get location(){return a},get transitioning(){return n},_onTransitionComplete:function(){n=!1,s()},listen:function(t){i.push(t);var r=function(){a=o(e),t({location:a,action:"POP"})};return e.addEventListener("popstate",r),function(){e.removeEventListener("popstate",r),i=i.filter((function(e){return e!==t}))}},navigate:function(t){var p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},d=p.state,l=p.replace,m=void 0!==l&&l;if("number"==typeof t)e.history.go(t);else{d=r({},d,{key:Date.now()+""});try{n||m?e.history.replaceState(d,null,t):e.history.pushState(d,null,t)}catch(h){e.location[m?"replace":"assign"](t)}}a=o(e),n=!0;var c=new Promise((function(e){return s=e}));return i.forEach((function(e){return e({location:a,action:"PUSH"})})),c}}},n=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"/",t=e.indexOf("?"),i={pathname:t>-1?e.substr(0,t):e,search:t>-1?e.substr(t):""},r=0,o=[i],a=[null];return{get location(){return o[r]},addEventListener:function(e,t){},removeEventListener:function(e,t){},history:{get entries(){return o},get index(){return r},get state(){return a[r]},pushState:function(e,t,i){var n=i.split("?"),s=n[0],p=n[1],d=void 0===p?"":p;r++,o.push({pathname:s,search:d.length?"?"+d:d}),a.push(e)},replaceState:function(e,t,i){var n=i.split("?"),s=n[0],p=n[1],d=void 0===p?"":p;o[r]={pathname:s,search:d},a[r]=e},go:function(e){var t=r+e;t<0||t>a.length-1||(r=t)}}}},s=!("undefined"==typeof window||!window.document||!window.document.createElement),p=a(s?window:n()),d=p.navigate},EN0E:function(e,t,i){var r=i("/5e1")();e.exports=r},EYXL:function(e,t,i){"use strict";t.a={files:{GetCopyReferenceArg:{fields:[{description:"The path to the file or folder you want to get a copy reference to.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},GetCopyReferenceError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GetCopyReferenceResult:{fields:[{description:"Metadata of the file or folder.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}},{description:"A copy reference to the file or folder.",parameter:"copy_reference",type:{primitive:"String"}},{description:"The expiration date of the copy reference. This value is currently set to be far enough in the future so that expiration is effectively not an issue.",parameter:"expires",type:{primitive:"Timestamp"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0}}}},EbHV:function(e,t,i){"use strict";t.a={team:{MembersRecoverArg:{description:"Exactly one of team_member_id, email, or external_id must be provided to identify the user account.",fields:[{description:"Identity of user to recover.",parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}}],stone_type:"struct"},MembersRecoverError:{fields:[{description:"No matching user found. The provided team_member_id, email, or external_id does not exist on this team.",parameter:"user_not_found",type:{primitive:"Void"}},{description:"The user is not recoverable.",parameter:"user_unrecoverable",type:{primitive:"Void"}},{description:"The user is not a member of the team.",parameter:"user_not_in_team",type:{primitive:"Void"}},{description:"Team is full. The organization has no available licenses.",parameter:"team_license_limit",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},"Egi+":function(e,t,i){var r=i("+dZb")("throttle",i("T5cu"));r.placeholder=i("IOY3"),e.exports=r},Egtg:function(e,t,i){"use strict";t.a={files:{LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},sharing:{CreateSharedLinkWithSettingsArg:{fields:[{description:"The path to be shared by the shared link.",parameter:"path",type:{primitive:"String"}},{description:"The requested settings for the newly created shared link.",parameter:"settings",type:{optional:{datatype:"SharedLinkSettings",namespace:"sharing"}}}],stone_type:"struct"},CreateSharedLinkWithSettingsError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{description:"User's email should be verified.",parameter:"email_not_verified",type:{primitive:"Void"}},{description:"The shared link already exists. You can call :route:`list_shared_links` to get the  existing link, or use the provided metadata if it is returned.",parameter:"shared_link_already_exists",type:{optional:{datatype:"SharedLinkAlreadyExistsMetadata",namespace:"sharing"}}},{description:"There is an error with the given settings.",parameter:"settings_error",type:{datatype:"SharedLinkSettingsError",namespace:"sharing"}},{description:"Access to the requested path is forbidden.",parameter:"access_denied",type:{primitive:"Void"}}],stone_type:"union"},LinkAccessLevel:{fields:[{description:"Users who use the link can view and comment on the content.",parameter:"viewer",type:{primitive:"Void"}},{description:"Users who use the link can edit, view and comment on the content.",parameter:"editor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermissions:{fields:[{description:"Whether the caller can revoke the shared link.",parameter:"can_revoke",type:{primitive:"Boolean"}},{description:"The current visibility of the link after considering the shared links policies of the the team (in case the link's owner is part of a team) and the shared folder (in case the linked file is part of a shared folder). This field is shown only if the caller has access to this info (the link's owner always has access to this data). For some links, an effective_audience value is returned instead.",parameter:"resolved_visibility",type:{optional:{datatype:"ResolvedVisibility",namespace:"sharing"}}},{description:"The shared link's requested visibility. This can be overridden by the team and shared folder policies. The final visibility, after considering these policies, can be found in :field:`resolved_visibility`. This is shown only if the caller is the link's owner and resolved_visibility is returned instead of effective_audience.",parameter:"requested_visibility",type:{optional:{datatype:"RequestedVisibility",namespace:"sharing"}}},{description:"The failure reason for revoking the link. This field will only be present if the :field:`can_revoke` is :val:`false`.",parameter:"revoke_failure_reason",type:{optional:{datatype:"SharedLinkAccessFailureReason",namespace:"sharing"}}},{description:"The type of audience who can benefit from the access level specified by the `link_access_level` field.",parameter:"effective_audience",type:{optional:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The access level that the link will grant to its users. A link can grant additional rights to a user beyond their current access level. For example, if a user was invited as a viewer to a file, and then opens a link with `link_access_level` set to `editor`, then they will gain editor privileges. The `link_access_level` is a property of the link, and does not depend on who is calling this API. In particular, `link_access_level` does not take into account the API caller's current permissions to the content.",parameter:"link_access_level",type:{optional:{datatype:"LinkAccessLevel",namespace:"sharing"}}}],stone_type:"struct"},RequestedLinkAccessLevel:{fields:[{description:"Users who use the link can view and comment on the content.",parameter:"viewer",type:{primitive:"Void"}},{description:"Users who use the link can edit, view and comment on the content. Note not all file types support edit links yet.",parameter:"editor",type:{primitive:"Void"}},{description:"Request for the maximum access level you can set the link to.",parameter:"max",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RequestedVisibility:{description:"The access permission that can be requested by the caller for the shared link. Note that the final resolved visibility of the shared link takes into account other aspects, such as team and shared folder settings. Check the :type:`ResolvedVisibility` for more info on the possible resolved visibility values of shared links.",fields:[{description:"Anyone who has received the link can access it. No login required.",parameter:"public",type:{primitive:"Void"}},{description:"Only members of the same team can access the link. Login is required.",parameter:"team_only",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}}],stone_type:"union"},ResolvedVisibility:{description:"The actual access permissions values of shared links after taking into account user preferences and the team and shared folder settings. Check the :type:`RequestedVisibility` for more info on the possible visibility values that can be set by the shared link's owner.",fields:[{description:"Anyone who has received the link can access it. No login required.",parameter:"public",type:{primitive:"Void"}},{description:"Only members of the same team can access the link. Login is required.",parameter:"team_only",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Only members of the same team who have the link-specific password can access the link. Login is required.",parameter:"team_and_password",type:{primitive:"Void"}},{description:"Only members of the shared folder containing the linked file can access the link. Login is required.",parameter:"shared_folder_only",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLinkAccessFailureReason:{fields:[{description:"User is not logged in.",parameter:"login_required",type:{primitive:"Void"}},{description:"User's email is not verified.",parameter:"email_verify_required",type:{primitive:"Void"}},{description:"The link is password protected.",parameter:"password_required",type:{primitive:"Void"}},{description:"Access is allowed for team members only.",parameter:"team_only",type:{primitive:"Void"}},{description:"Access is allowed for the shared link's owner only.",parameter:"owner_only",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLinkAlreadyExistsMetadata:{fields:[{description:"Metadata of the shared link that already exists.",parameter:"metadata",type:{datatype:"SharedLinkMetadata",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLinkMetadata:{description:"The metadata of a shared link.",fields:[{description:"URL of the shared link.",parameter:"url",type:{primitive:"String"}},{description:"The linked file name (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The link's access permissions.",parameter:"link_permissions",type:{datatype:"LinkPermissions",namespace:"sharing"}},{description:"A unique identifier for the linked file.",parameter:"id",type:{optional:{primitive:"String"}}},{description:"Expiration time, if set. By default the link won't expire.",parameter:"expires",type:{optional:{primitive:"Timestamp"}}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will only be present only if the linked file is in the authenticated user's  dropbox.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The team membership information of the link's owner.  This field will only be present  if the link's owner is a team member.",parameter:"team_member_info",type:{optional:{datatype:"TeamMemberInfo",namespace:"sharing"}}},{description:"The team information of the content's owner. This field will only be present if the content's owner is a team member and the content's owner team is different from the link's owner team.",parameter:"content_owner_team_info",type:{optional:{datatype:"Team",namespace:"users"}}}],stone_type:"struct",todo:!0},SharedLinkSettings:{fields:[{description:"The requested access for this shared link.",parameter:"requested_visibility",type:{optional:{datatype:"RequestedVisibility",namespace:"sharing"}}},{description:"If :field:`requested_visibility` is :field:`RequestedVisibility.password` this is needed to specify the password to access the link.",parameter:"link_password",type:{optional:{primitive:"String"}}},{description:"Expiration time of the shared link. By default the link won't expire.",parameter:"expires",type:{optional:{primitive:"Timestamp"}}},{description:"The new audience who can benefit from the access level specified by the link's access level specified in the `link_access_level` field of `LinkPermissions`. This is used in conjunction with team policies and shared folder policies to determine the final effective audience type in the `effective_audience` field of `LinkPermissions.",parameter:"audience",type:{optional:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"Requested access level you want the audience to gain from this link. Note, modifying access level for an existing link is not supported.",parameter:"access",type:{optional:{datatype:"RequestedLinkAccessLevel",namespace:"sharing"}}}],stone_type:"struct"},SharedLinkSettingsError:{fields:[{description:"The given settings are invalid (for example, all attributes of the :type:`SharedLinkSettings` are empty, the requested visibility is :field:`RequestedVisibility.password` but the :field:`SharedLinkSettings.link_password` is missing, :field:`SharedLinkSettings.expires` is set to the past, etc.).",parameter:"invalid_settings",type:{primitive:"Void"}},{description:"User is not allowed to modify the settings of this link. Note that basic users can only set :field:`RequestedVisibility.public` as the :field:`SharedLinkSettings.requested_visibility` and cannot set :field:`SharedLinkSettings.expires`.",parameter:"not_authorized",type:{primitive:"Void"}}],stone_type:"union"},TeamMemberInfo:{description:"Information about a team member.",fields:[{description:"Information about the member's team.",parameter:"team_info",type:{datatype:"Team",namespace:"users"}},{description:"The display name of the user.",parameter:"display_name",type:{primitive:"String"}},{description:"ID of user as a member of a team. This field will only be present if the member is in the same team as current user.",parameter:"member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},Elot:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("YMTJ"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},EmLP:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("5TjN"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},EoPG:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("2Nut"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},EqhP:function(e,t,i){e.exports=i("exBb")},Exs5:function(e,t,i){var r=i("sWZd"),o=i("cTHi");e.exports=function(e,t){for(var i=0,a=(t=r(t,e)).length;null!=e&&i<a;)e=e[o(t[i++])];return i&&i==a?e:void 0}},F3Ab:function(e,t,i){var r=i("Dh2Y"),o=i("dIZa"),a=Object.prototype.hasOwnProperty;e.exports=function(e,t,i){var n=e[t];a.call(e,t)&&o(n,i)&&(void 0!==i||t in e)||r(e,t,i)}},F4ae:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("+LGp"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},F56x:function(e,t){e.exports=function(e,t,i,r){var o=i?i.call(r,e,t):void 0;if(void 0!==o)return!!o;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var a=Object.keys(e),n=Object.keys(t);if(a.length!==n.length)return!1;for(var s=Object.prototype.hasOwnProperty.bind(t),p=0;p<a.length;p++){var d=a[p];if(!s(d))return!1;var l=e[d],m=t[d];if(!1===(o=i?i.call(r,l,m,d):void 0)||void 0===o&&l!==m)return!1}return!0}},F61Y:function(e,t,i){"use strict";t.a={sharing:{SharingFileAccessError:{description:"User could not access this file.",fields:[{description:"Current user does not have sufficient privileges to perform the desired action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"File specified was not found.",parameter:"invalid_file",type:{primitive:"Void"}},{description:"A folder can't be shared this way. Use folder sharing or a shared link instead.",parameter:"is_folder",type:{primitive:"Void"}},{description:"A file inside a public folder can't be shared this way. Use a public link instead.",parameter:"inside_public_folder",type:{primitive:"Void"}},{description:"A Mac OS X package can't be shared this way. Use a shared link instead.",parameter:"inside_osx_package",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingUserError:{description:"User account had a problem preventing this action.",fields:[{description:"The current user must verify the account e-mail address before performing this action.",parameter:"email_unverified",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UnshareFileArg:{description:"Arguments for :route:`unshare_file`.",fields:[{description:"The file to unshare.",parameter:"file",type:{primitive:"String"}}],stone_type:"struct"},UnshareFileError:{description:"Error result for :route:`unshare_file`.",fields:[{parameter:"user_error",type:{datatype:"SharingUserError",namespace:"sharing"}},{parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},FEiO:function(e,t,i){var r=i("LSEb")(Object,"create");e.exports=r},FGLY:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("eCyd"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},FGuy:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("lwp/"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},FMyM:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("zUua"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},FQMq:function(e,t,i){var r=i("QDPn"),o=i("LBQr"),a=i("jL4t");e.exports=function(e){return"function"!=typeof e.constructor||a(e)?{}:r(o(e))}},FQyP:function(e,t,i){"use strict";t.a={sharing:{GetSharedLinkMetadataArg:{fields:[{description:"URL of the shared link.",parameter:"url",type:{primitive:"String"}},{description:"If the shared link is to a folder, this parameter can be used to retrieve the metadata for a specific file or sub-folder in this folder. A relative path should be used.",parameter:"path",type:{optional:{primitive:"String"}}},{description:"If the shared link has a password, this parameter can be used.",parameter:"link_password",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAccessLevel:{fields:[{description:"Users who use the link can view and comment on the content.",parameter:"viewer",type:{primitive:"Void"}},{description:"Users who use the link can edit, view and comment on the content.",parameter:"editor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermissions:{fields:[{description:"Whether the caller can revoke the shared link.",parameter:"can_revoke",type:{primitive:"Boolean"}},{description:"The current visibility of the link after considering the shared links policies of the the team (in case the link's owner is part of a team) and the shared folder (in case the linked file is part of a shared folder). This field is shown only if the caller has access to this info (the link's owner always has access to this data). For some links, an effective_audience value is returned instead.",parameter:"resolved_visibility",type:{optional:{datatype:"ResolvedVisibility",namespace:"sharing"}}},{description:"The shared link's requested visibility. This can be overridden by the team and shared folder policies. The final visibility, after considering these policies, can be found in :field:`resolved_visibility`. This is shown only if the caller is the link's owner and resolved_visibility is returned instead of effective_audience.",parameter:"requested_visibility",type:{optional:{datatype:"RequestedVisibility",namespace:"sharing"}}},{description:"The failure reason for revoking the link. This field will only be present if the :field:`can_revoke` is :val:`false`.",parameter:"revoke_failure_reason",type:{optional:{datatype:"SharedLinkAccessFailureReason",namespace:"sharing"}}},{description:"The type of audience who can benefit from the access level specified by the `link_access_level` field.",parameter:"effective_audience",type:{optional:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The access level that the link will grant to its users. A link can grant additional rights to a user beyond their current access level. For example, if a user was invited as a viewer to a file, and then opens a link with `link_access_level` set to `editor`, then they will gain editor privileges. The `link_access_level` is a property of the link, and does not depend on who is calling this API. In particular, `link_access_level` does not take into account the API caller's current permissions to the content.",parameter:"link_access_level",type:{optional:{datatype:"LinkAccessLevel",namespace:"sharing"}}}],stone_type:"struct"},RequestedVisibility:{description:"The access permission that can be requested by the caller for the shared link. Note that the final resolved visibility of the shared link takes into account other aspects, such as team and shared folder settings. Check the :type:`ResolvedVisibility` for more info on the possible resolved visibility values of shared links.",fields:[{description:"Anyone who has received the link can access it. No login required.",parameter:"public",type:{primitive:"Void"}},{description:"Only members of the same team can access the link. Login is required.",parameter:"team_only",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}}],stone_type:"union"},ResolvedVisibility:{description:"The actual access permissions values of shared links after taking into account user preferences and the team and shared folder settings. Check the :type:`RequestedVisibility` for more info on the possible visibility values that can be set by the shared link's owner.",fields:[{description:"Anyone who has received the link can access it. No login required.",parameter:"public",type:{primitive:"Void"}},{description:"Only members of the same team can access the link. Login is required.",parameter:"team_only",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Only members of the same team who have the link-specific password can access the link. Login is required.",parameter:"team_and_password",type:{primitive:"Void"}},{description:"Only members of the shared folder containing the linked file can access the link. Login is required.",parameter:"shared_folder_only",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLinkAccessFailureReason:{fields:[{description:"User is not logged in.",parameter:"login_required",type:{primitive:"Void"}},{description:"User's email is not verified.",parameter:"email_verify_required",type:{primitive:"Void"}},{description:"The link is password protected.",parameter:"password_required",type:{primitive:"Void"}},{description:"Access is allowed for team members only.",parameter:"team_only",type:{primitive:"Void"}},{description:"Access is allowed for the shared link's owner only.",parameter:"owner_only",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLinkError:{fields:[{description:"The shared link wasn't found.",parameter:"shared_link_not_found",type:{primitive:"Void"}},{description:"The caller is not allowed to access this shared link.",parameter:"shared_link_access_denied",type:{primitive:"Void"}},{description:"This type of link is not supported; use :route:`files.export` instead.",parameter:"unsupported_link_type",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLinkMetadata:{description:"The metadata of a shared link.",fields:[{description:"URL of the shared link.",parameter:"url",type:{primitive:"String"}},{description:"The linked file name (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The link's access permissions.",parameter:"link_permissions",type:{datatype:"LinkPermissions",namespace:"sharing"}},{description:"A unique identifier for the linked file.",parameter:"id",type:{optional:{primitive:"String"}}},{description:"Expiration time, if set. By default the link won't expire.",parameter:"expires",type:{optional:{primitive:"Timestamp"}}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will only be present only if the linked file is in the authenticated user's  dropbox.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The team membership information of the link's owner.  This field will only be present  if the link's owner is a team member.",parameter:"team_member_info",type:{optional:{datatype:"TeamMemberInfo",namespace:"sharing"}}},{description:"The team information of the content's owner. This field will only be present if the content's owner is a team member and the content's owner team is different from the link's owner team.",parameter:"content_owner_team_info",type:{optional:{datatype:"Team",namespace:"users"}}}],stone_type:"struct",todo:!0},TeamMemberInfo:{description:"Information about a team member.",fields:[{description:"Information about the member's team.",parameter:"team_info",type:{datatype:"Team",namespace:"users"}},{description:"The display name of the user.",parameter:"display_name",type:{primitive:"String"}},{description:"ID of user as a member of a team. This field will only be present if the member is in the same team as current user.",parameter:"member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},FS64:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("iTBc"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},FX2T:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("VdN0"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},Fcif:function(e,t,i){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e}).apply(this,arguments)}i.d(t,"a",(function(){return r}))},FfeU:function(e,t,i){(function(t){var i="object"==typeof t&&t&&t.Object===Object&&t;e.exports=i}).call(this,i("pCvA"))},Fghp:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{AdminTier:{description:"Describes which team-related admin permissions a user has.",fields:[{description:"User is an administrator of the team - has all permissions.",parameter:"team_admin",type:{primitive:"Void"}},{description:"User can do most user provisioning, de-provisioning and management.",parameter:"user_management_admin",type:{primitive:"Void"}},{description:"User can do a limited set of common support tasks for existing users.",parameter:"support_admin",type:{primitive:"Void"}},{description:"User is not an admin of the team.",parameter:"member_only",type:{primitive:"Void"}}],stone_type:"union"},MembersGetInfoArgs:{fields:[{description:"List of team members.",parameter:"members",type:{list:{datatype:"UserSelectorArg",namespace:"team"}}}],stone_type:"struct"},MembersGetInfoError:{description:"",fields:[{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MembersGetInfoItem:{description:"Describes a result obtained for a single user whose id was specified in the parameter of :route:`members/get_info`.",fields:[{description:"An ID that was provided as a parameter to :route:`members/get_info`, and did not match a corresponding user. This might be a team_member_id, an email, or an external ID, depending on how the method was called.",parameter:"id_not_found",type:{primitive:"String"}},{description:"Info about a team member.",parameter:"member_info",type:{datatype:"TeamMemberInfo",namespace:"team"}}],stone_type:"union"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberInfo:{description:"Information about a team member.",fields:[{description:"Profile of a user as a member of a team.",parameter:"profile",type:{datatype:"TeamMemberProfile",namespace:"team"}},{description:"The user's role in the team.",parameter:"role",type:{datatype:"AdminTier",namespace:"team"}}],stone_type:"struct"},TeamMemberProfile:{description:"Profile of a user as a member of a team.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"List of group IDs of groups that the user belongs to.",parameter:"groups",type:{list:{primitive:"String"}}},{description:"The namespace id of the user's root folder.",parameter:"member_folder_id",type:{primitive:"String"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},Fgie:function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},SaveUrlError:{fields:[{parameter:"path",type:{datatype:"WriteError",namespace:"files"}},{description:"Failed downloading the given URL. The URL may be  password-protected and the password provided was incorrect,  or the link may be disabled.",parameter:"download_failed",type:{primitive:"Void"}},{description:"The given URL is invalid.",parameter:"invalid_url",type:{primitive:"Void"}},{description:"The file where the URL is saved to no longer exists.",parameter:"not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SaveUrlJobStatus:{fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"Metadata of the file where the URL is saved to.",parameter:"complete",type:{datatype:"FileMetadata",namespace:"files"}},{parameter:"failed",type:{datatype:"SaveUrlError",namespace:"files"}}],stone_type:"union"},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},FjlX:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("BpRd"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},Fldm:function(e,t,i){(function(e){var r=i("s3UK"),o=t&&!t.nodeType&&t,a=o&&"object"==typeof e&&e&&!e.nodeType&&e,n=a&&a.exports===o?r.Buffer:void 0,s=n?n.allocUnsafe:void 0;e.exports=function(e,t){if(t)return e.slice();var i=e.length,r=s?s(i):new e.constructor(i);return e.copy(r),r}}).call(this,i("RoC8")(e))},FzuK:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("7XEX"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},G3ts:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{AdminTier:{description:"Describes which team-related admin permissions a user has.",fields:[{description:"User is an administrator of the team - has all permissions.",parameter:"team_admin",type:{primitive:"Void"}},{description:"User can do most user provisioning, de-provisioning and management.",parameter:"user_management_admin",type:{primitive:"Void"}},{description:"User can do a limited set of common support tasks for existing users.",parameter:"support_admin",type:{primitive:"Void"}},{description:"User is not an admin of the team.",parameter:"member_only",type:{primitive:"Void"}}],stone_type:"union"},MembersListArg:{fields:[{description:"Number of results to return per call.",parameter:"limit",type:{primitive:"UInt32"}},{description:"Whether to return removed members.",parameter:"include_removed",type:{primitive:"Boolean"}}],stone_type:"struct"},MembersListError:{description:"",fields:[{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MembersListResult:{fields:[{description:"List of team members.",parameter:"members",type:{list:{datatype:"TeamMemberInfo",namespace:"team"}}},{description:"Pass the cursor into :route:`members/list/continue` to obtain the additional members.",parameter:"cursor",type:{primitive:"String"}},{description:"Is true if there are additional team members that have not been returned yet. An additional call to :route:`members/list/continue` can retrieve them.",parameter:"has_more",type:{primitive:"Boolean"}}],stone_type:"struct"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberInfo:{description:"Information about a team member.",fields:[{description:"Profile of a user as a member of a team.",parameter:"profile",type:{datatype:"TeamMemberProfile",namespace:"team"}},{description:"The user's role in the team.",parameter:"role",type:{datatype:"AdminTier",namespace:"team"}}],stone_type:"struct"},TeamMemberProfile:{description:"Profile of a user as a member of a team.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"List of group IDs of groups that the user belongs to.",parameter:"groups",type:{list:{primitive:"String"}}},{description:"The namespace id of the user's root folder.",parameter:"member_folder_id",type:{primitive:"String"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},G4dw:function(e,t,i){var r=i("+dZb")("omit",i("PWxN"));r.placeholder=i("IOY3"),e.exports=r},G9gt:function(e,t,i){var r=i("jgJv"),o=r?r.prototype:void 0,a=o?o.valueOf:void 0;e.exports=function(e){return a?Object(a.call(e)):{}}},GC0P:function(e,t,i){var r=i("+dZb")("flattenDepth",i("HGTD"));r.placeholder=i("IOY3"),e.exports=r},GCnR:function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},files:{LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},MoveIntoVaultError:{fields:[{description:"Moving shared folder into Vault is not allowed.",parameter:"is_shared_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchErrorEntry:{fields:[{description:"User errors that retry won't help.",parameter:"relocation_error",type:{datatype:"RelocationError",namespace:"files"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchResultEntry:{fields:[{parameter:"success",type:{datatype:"Metadata",namespace:"files"}},{parameter:"failure",type:{datatype:"RelocationBatchErrorEntry",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchV2JobStatus:{description:"Result returned by :route:`copy_batch/check:2` or :route:`move_batch/check:2` that may either be in progress or completed with result for each entry.",fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The copy or move batch job has finished.",parameter:"complete",type:{datatype:"RelocationBatchV2Result",namespace:"files"}}],stone_type:"union"},RelocationBatchV2Result:{fields:[{description:"Each entry in CopyBatchArg.entries or :field:`MoveBatchArg.entries` will appear at the same position inside :field:`RelocationBatchV2Result.entries`.",parameter:"entries",type:{list:{datatype:"RelocationBatchResultEntry",namespace:"files"}}}],stone_type:"struct"},RelocationError:{fields:[{parameter:"from_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"from_write",type:{datatype:"WriteError",namespace:"files"}},{parameter:"to",type:{datatype:"WriteError",namespace:"files"}},{description:"Shared folders can't be copied.",parameter:"cant_copy_shared_folder",type:{primitive:"Void"}},{description:"Your move operation would result in nested shared folders.  This is not allowed.",parameter:"cant_nest_shared_folder",type:{primitive:"Void"}},{description:"You cannot move a folder into itself.",parameter:"cant_move_folder_into_itself",type:{primitive:"Void"}},{description:"The operation would involve more than 10,000 files and folders.",parameter:"too_many_files",type:{primitive:"Void"}},{description:"There are duplicated/nested paths among :field:`RelocationArg.from_path` and :field:`RelocationArg.to_path`.",parameter:"duplicated_or_nested_paths",type:{primitive:"Void"}},{description:"Your move operation would result in an ownership transfer. You may reissue the request with the field :field:`RelocationArg.allow_ownership_transfer` to true.",parameter:"cant_transfer_ownership",type:{primitive:"Void"}},{description:"The current user does not have enough space to move or copy the files.",parameter:"insufficient_quota",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{description:"Can't move the shared folder to the given destination.",parameter:"cant_move_shared_folder",type:{primitive:"Void"}},{description:"Some content cannot be moved into Vault under certain circumstances, see detailed error.",parameter:"cant_move_into_vault",type:{datatype:"MoveIntoVaultError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},GDd6:function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{CommitInfo:{fields:[{description:"Path in the user's Dropbox to save the file.",parameter:"path",type:{primitive:"String"}},{description:"Selects what to do if the file already exists.",parameter:"mode",type:{datatype:"WriteMode",namespace:"files"}},{description:"If there's a conflict, as determined by :field:`mode`, have the Dropbox server try to autorename the file to avoid conflict.",parameter:"autorename",type:{primitive:"Boolean"}},{description:"The value to store as the :field:`client_modified` timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified.",parameter:"client_modified",type:{optional:{primitive:"Timestamp"}}},{description:"Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If :val:`true`, this tells the clients that this modification shouldn't result in a user notification.",parameter:"mute",type:{primitive:"Boolean"}},{description:"List of custom properties to add to file.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:'Be more strict about how each :type:`WriteMode` detects conflict. For example, always return a conflict error when :field:`mode` = :field:`WriteMode.update` and the given "rev" doesn\'t match the existing file\'s "rev", even if the existing file has been deleted.',parameter:"strict_conflict",type:{primitive:"Boolean"}}],stone_type:"struct"},GetTemporaryUploadLinkArg:{fields:[{description:"Contains the path and other optional modifiers for the future upload commit. Equivalent to the parameters provided to :route:`upload`.",parameter:"commit_info",type:{datatype:"CommitInfo",namespace:"files"}},{description:"How long before this link expires, in seconds.  Attempting to start an upload with this link longer than this period  of time after link creation will result in an error.",parameter:"duration",type:{primitive:"Float64"}}],stone_type:"struct"},GetTemporaryUploadLinkResult:{fields:[{description:"The temporary link which can be used to stream a file to a Dropbox location.",parameter:"link",type:{primitive:"String"}}],stone_type:"struct"},WriteMode:{description:"Your intent when writing a file to some path. This is used to determine what constitutes a conflict and what the autorename strategy is.\nIn some situations, the conflict behavior is identical: (a) If the target path doesn't refer to anything, the file is always written; no conflict. (b) If the target path refers to a folder, it's always a conflict. (c) If the target path refers to a file with identical contents, nothing gets written; no conflict.\nThe conflict checking differs in the case where there's a file at the target path with contents different from the contents you're trying to write.",fields:[{description:'Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, "document.txt" might become "document (2).txt".',parameter:"add",type:{primitive:"Void"}},{description:"Always overwrite the existing file. The autorename strategy is the same as it is for :field:`add`.",parameter:"overwrite",type:{primitive:"Void"}},{description:'Overwrite if the given "rev" matches the existing file\'s "rev". The autorename strategy is to append the string "conflicted copy" to the file name. For example, "document.txt" might become "document (conflicted copy).txt" or "document (Panda\'s conflicted copy).txt".',parameter:"update",type:{primitive:"String"}}],stone_type:"union"}}}},GDdE:function(e,t,i){"use strict";t.a={file_requests:{CreateFileRequestArgs:{description:"Arguments for :route:`create`.",fields:[{description:"The title of the file request. Must not be empty.",parameter:"title",type:{primitive:"String"}},{description:"The path of the folder in the Dropbox where uploaded files will be sent. For apps with the app folder permission, this will be relative to the app folder.",parameter:"destination",type:{primitive:"String"}},{description:"The deadline for the file request. Deadlines can only be set by Professional and Business accounts.",parameter:"deadline",type:{optional:{datatype:"FileRequestDeadline",namespace:"file_requests"}}},{description:"Whether or not the file request should be open. If the file request is closed, it will not accept any file submissions, but it can be opened later.",parameter:"open",type:{primitive:"Boolean"}}],stone_type:"struct"},CreateFileRequestError:{description:"There was an error creating the file request.",fields:[{description:"This user's Dropbox Business team doesn't allow file requests.",parameter:"disabled_for_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"This file request ID was not found.",parameter:"not_found",type:{primitive:"Void"}},{description:"The specified path is not a folder.",parameter:"not_a_folder",type:{primitive:"Void"}},{description:"This file request is not accessible to this app. Apps with the app folder permission can only access file requests in their app folder.",parameter:"app_lacks_access",type:{primitive:"Void"}},{description:"This user doesn't have permission to access or modify this file request.",parameter:"no_permission",type:{primitive:"Void"}},{description:"This user's email address is not verified. File requests are only available on accounts with a verified email address. Users can verify their email address :link:`here https://www.dropbox.com/help/317`.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"There was an error validating the request. For example, the title was invalid, or there were disallowed characters in the destination path.",parameter:"validation_error",type:{primitive:"Void"}},{description:"File requests are not available on the specified folder.",parameter:"invalid_location",type:{primitive:"Void"}},{description:"The user has reached the rate limit for creating file requests. The limit is currently 4000 file requests total.",parameter:"rate_limit",type:{primitive:"Void"}}],stone_type:"open_union"},FileRequest:{description:"A :link:`file request https://www.dropbox.com/help/9090` for receiving files into the user's Dropbox account.",fields:[{description:"The ID of the file request.",parameter:"id",type:{primitive:"String"}},{description:"The URL of the file request.",parameter:"url",type:{primitive:"String"}},{description:"The title of the file request.",parameter:"title",type:{primitive:"String"}},{description:"When this file request was created.",parameter:"created",type:{primitive:"Timestamp"}},{description:"Whether or not the file request is open. If the file request is closed, it will not accept any more file submissions.",parameter:"is_open",type:{primitive:"Boolean"}},{description:"The number of files this file request has received.",parameter:"file_count",type:{primitive:"Int64"}},{description:"The path of the folder in the Dropbox where uploaded files will be sent. This can be :val:`null` if the destination was removed. For apps with the app folder permission, this will be relative to the app folder.",parameter:"destination",type:{optional:{primitive:"String"}}},{description:"The deadline for this file request. Only set if the request has a deadline.",parameter:"deadline",type:{optional:{datatype:"FileRequestDeadline",namespace:"file_requests"}}}],stone_type:"struct"},FileRequestDeadline:{fields:[{description:"The deadline for this file request.",parameter:"deadline",type:{primitive:"Timestamp"}},{description:"If set, allow uploads after the deadline has passed. These     uploads will be marked overdue.",parameter:"allow_late_uploads",type:{optional:{datatype:"GracePeriod",namespace:"file_requests"}}}],stone_type:"struct"},GracePeriod:{fields:[{parameter:"one_day",type:{primitive:"Void"}},{parameter:"two_days",type:{primitive:"Void"}},{parameter:"seven_days",type:{primitive:"Void"}},{parameter:"thirty_days",type:{primitive:"Void"}},{parameter:"always",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},GE03:function(e,t,i){var r=i("xkFB"),o=i("4mhO"),a=i("4a20");function n(e){var t=-1,i=null==e?0:e.length;for(this.__data__=new r;++t<i;)this.add(e[t])}n.prototype.add=n.prototype.push=o,n.prototype.has=a,e.exports=n},GI0s:function(e,t,i){var r=i("jgJv"),o=i("vMVM"),a=i("HLVI"),n=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":n&&n in Object(e)?o(e):a(e)}},Geoo:function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},PreviewArg:{fields:[{description:"The path of the file to preview.",parameter:"path",type:{primitive:"String"}},{description:"Please specify revision in :field:`path` instead.",parameter:"rev",type:{optional:{primitive:"String"}}}],stone_type:"struct"},PreviewError:{fields:[{description:"An error occurs when downloading metadata for the file.",parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{description:"This preview generation is still in progress and the file is not ready  for preview yet.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The file extension is not supported preview generation.",parameter:"unsupported_extension",type:{primitive:"Void"}},{description:"The file content is not supported for preview generation.",parameter:"unsupported_content",type:{primitive:"Void"}}],stone_type:"union"},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"}}}},"Gn3/":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("/oIy"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"H+3J":function(e,t,i){var r=i("X3Hh"),o=i("yF7r"),a=i("Q8UH"),n=i("ArCz"),s=i("PqlX"),p=i("6kFe");e.exports=function(e){return o((function(t){var i=t.length,o=i,d=r.prototype.thru;for(e&&t.reverse();o--;){var l=t[o];if("function"!=typeof l)throw new TypeError("Expected a function");if(d&&!m&&"wrapper"==n(l))var m=new r([],!0)}for(o=m?o:i;++o<i;){l=t[o];var c=n(l),h="wrapper"==c?a(l):void 0;m=h&&p(h[0])&&424==h[1]&&!h[4].length&&1==h[9]?m[n(h[0])].apply(m,h[3]):1==l.length&&p(l)?m[c]():m.thru(l)}return function(){var e=arguments,r=e[0];if(m&&1==e.length&&s(r))return m.plant(r).value();for(var o=0,a=i?t[o].apply(this,e):r;++o<i;)a=t[o].call(this,a);return a}}))}},H034:function(e,t,i){var r=i("OfXF");e.exports=function(e,t,i){return null==e?e:r(e,t,i)}},"H1/q":function(e,t,i){"use strict";t.a={team:{MembersDeactivateArg:{fields:[{description:"Identity of user to remove/suspend/have their files moved.",parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{description:"If provided, controls if the user's data will be deleted on their linked devices.",parameter:"wipe_data",type:{primitive:"Boolean"}}],stone_type:"struct"},MembersSuspendError:{fields:[{description:"No matching user found. The provided team_member_id, email, or external_id does not exist on this team.",parameter:"user_not_found",type:{primitive:"Void"}},{description:"The user is not a member of the team.",parameter:"user_not_in_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"The user is not active, so it cannot be suspended.",parameter:"suspend_inactive_user",type:{primitive:"Void"}},{description:"The user is the last admin of the team, so it cannot be suspended.",parameter:"suspend_last_admin",type:{primitive:"Void"}},{description:"Team is full. The organization has no available licenses.",parameter:"team_license_limit",type:{primitive:"Void"}}],stone_type:"open_union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},H4yh:function(e,t,i){"use strict";t.a={sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupInfo:{description:"The information about a group. Groups is a way to manage a list of users  who need same access permission to the shared folder.",fields:[{parameter:"group_name",type:{primitive:"String"}},{parameter:"group_id",type:{primitive:"String"}},{description:"Who is allowed to manage the group.",parameter:"group_management_type",type:{datatype:"GroupManagementType",namespace:"team_common"}},{description:"The type of group.",parameter:"group_type",type:{datatype:"GroupType",namespace:"team_common"}},{description:"If the current user is a member of the group.",parameter:"is_member",type:{primitive:"Boolean"}},{description:"If the current user is an owner of the group.",parameter:"is_owner",type:{primitive:"Boolean"}},{description:"If the group is owned by the current user's team.",parameter:"same_team",type:{primitive:"Boolean"}},{description:"External ID of group. This is an arbitrary ID that an admin can attach to a group.",parameter:"group_external_id",type:{optional:{primitive:"String"}}},{description:"The number of members in the group.",parameter:"member_count",type:{optional:{primitive:"UInt32"}}}],stone_type:"struct"},GroupMembershipInfo:{description:"The information about a group member of the shared content.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"The information about the membership group.",parameter:"group",type:{datatype:"GroupInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},InviteeInfo:{description:"Information about the recipient of a shared content invitation.",fields:[{description:"E-mail address of invited user.",parameter:"email",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},InviteeMembershipInfo:{description:"Information about an invited member of a shared content.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Recipient of the invitation.",parameter:"invitee",type:{datatype:"InviteeInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}},{description:"The user this invitation is tied to, if available.",parameter:"user",type:{optional:{datatype:"UserInfo",namespace:"sharing"}}}],stone_type:"struct"},ListFolderMembersArgs:{fields:[{description:"The ID for the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"This is a list indicating whether each returned member will include a boolean value :field:`MemberPermission.allow` that describes whether the current user can perform the MemberAction on the member.",parameter:"actions",type:{optional:{list:{datatype:"MemberAction",namespace:"sharing"}}}},{description:"The maximum number of results that include members, groups and invitees to return per request.",parameter:"limit",type:{primitive:"UInt32"}}],stone_type:"struct"},MemberAction:{description:"Actions that may be taken on members of a shared folder.",fields:[{description:"Allow the member to keep a copy of the folder when removing.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Make the member an editor of the folder.",parameter:"make_editor",type:{primitive:"Void"}},{description:"Make the member an owner of the folder.",parameter:"make_owner",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder.",parameter:"make_viewer",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder without commenting permissions.",parameter:"make_viewer_no_comment",type:{primitive:"Void"}},{description:"Remove the member from the folder.",parameter:"remove",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberPermission:{description:"Whether the user is allowed to take the action on the associated member.",fields:[{description:"The action that the user may wish to take on the member.",parameter:"action",type:{datatype:"MemberAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderMembers:{description:"Shared folder user and group membership.",fields:[{description:"The list of user members of the shared folder.",parameter:"users",type:{list:{datatype:"UserMembershipInfo",namespace:"sharing"}}},{description:"The list of group members of the shared folder.",parameter:"groups",type:{list:{datatype:"GroupMembershipInfo",namespace:"sharing"}}},{description:"The list of invitees to the shared folder.",parameter:"invitees",type:{list:{datatype:"InviteeMembershipInfo",namespace:"sharing"}}},{description:"Present if there are additional shared folder members that have not been returned yet. Pass the cursor into :route:`list_folder_members/continue` to list additional members.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},UserInfo:{description:"Basic information about a user. Use :route:`users.get_account` and :route:`users.get_account_batch` to obtain more detailed information.",fields:[{description:"The account ID of the user.",parameter:"account_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"The display name of the user.",parameter:"display_name",type:{primitive:"String"}},{description:"If the user is in the same team as current user.",parameter:"same_team",type:{primitive:"Boolean"}},{description:"The team member ID of the shared folder member. Only present if :field:`same_team` is true.",parameter:"team_member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"},UserMembershipInfo:{description:"The information about a user member of the shared content.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"The account information for the membership user.",parameter:"user",type:{datatype:"UserInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}}],stone_type:"struct"}},team_common:{GroupManagementType:{description:"The group type determines how a group is managed.",fields:[{description:"A group which is managed by selected users.",parameter:"user_managed",type:{primitive:"Void"}},{description:"A group which is managed by team admins only.",parameter:"company_managed",type:{primitive:"Void"}},{description:"A group which is managed automatically by Dropbox.",parameter:"system_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupType:{description:"The group type determines how a group is created and managed.",fields:[{description:"A group to which team members are automatically added. Applicable to :link:`team folders https://www.dropbox.com/help/986` only.",parameter:"team",type:{primitive:"Void"}},{description:"A group is created and managed by a user.",parameter:"user_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},HCVN:function(e,t,i){"use strict";t.a={sharing:{AccessInheritance:{description:"Information about the inheritance policy of a shared folder.",fields:[{description:"The shared folder inherits its members from the parent folder.",parameter:"inherit",type:{primitive:"Void"}},{description:"The shared folder does not inherit its members from the parent folder.",parameter:"no_inherit",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AclUpdatePolicy:{description:"Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.",fields:[{description:"Only the owner can update the ACL.",parameter:"owner",type:{primitive:"Void"}},{description:"Any editor can update the ACL. This may be further restricted to editors on the same team.",parameter:"editors",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AudienceExceptionContentInfo:{description:"Information about the content that has a link audience different than that of this folder.",fields:[{description:"The name of the content, which is either a file or a folder.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},AudienceExceptions:{description:"The total count and truncated list of information of content inside this folder that has a different audience than the link on this folder. This is only returned for folders.",fields:[{parameter:"count",type:{primitive:"UInt32"}},{description:"A truncated list of some of the content that is an exception. The length of this list could be smaller than the count since it is only a sample but will not be empty as long as count is not 0.",parameter:"exceptions",type:{list:{datatype:"AudienceExceptionContentInfo",namespace:"sharing"}}}],stone_type:"struct"},AudienceRestrictingSharedFolder:{description:"Information about the shared folder that prevents the link audience for this link from being more restrictive.",fields:[{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The name of the shared folder.",parameter:"name",type:{primitive:"String"}},{description:"The link audience of the shared folder.",parameter:"audience",type:{datatype:"LinkAudience",namespace:"sharing"}}],stone_type:"struct"},FolderAction:{description:"Actions that may be taken on shared folders.",fields:[{description:"Change folder options, such as who can be invited to join the folder.",parameter:"change_options",type:{primitive:"Void"}},{description:"Disable viewer information for this folder.",parameter:"disable_viewer_info",type:{primitive:"Void"}},{description:"Change or edit contents of the folder.",parameter:"edit_contents",type:{primitive:"Void"}},{description:"Enable viewer information on the folder.",parameter:"enable_viewer_info",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read and write permission.",parameter:"invite_editor",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission.",parameter:"invite_viewer",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission but no comment permissions.",parameter:"invite_viewer_no_comment",type:{primitive:"Void"}},{description:"Relinquish one's own membership in the folder.",parameter:"relinquish_membership",type:{primitive:"Void"}},{description:"Unmount the folder.",parameter:"unmount",type:{primitive:"Void"}},{description:"Stop sharing this folder.",parameter:"unshare",type:{primitive:"Void"}},{description:"Keep a copy of the contents upon leaving or being kicked from the folder.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Use create_link instead.",parameter:"share_link",type:{primitive:"Void"}},{description:"Create a shared link for folder.",parameter:"create_link",type:{primitive:"Void"}},{description:"Set whether the folder inherits permissions from its parent.",parameter:"set_access_inheritance",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FolderPermission:{description:"Whether the user is allowed to take the action on the shared folder.",fields:[{description:"The action that the user may wish to take on the folder.",parameter:"action",type:{datatype:"FolderAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed, or if no reason is available.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},FolderPolicy:{description:"A set of policies governing membership and privileges for a shared folder.",fields:[{description:"Who can add and remove members from this shared folder.",parameter:"acl_update_policy",type:{datatype:"AclUpdatePolicy",namespace:"sharing"}},{description:"Who links can be shared with.",parameter:"shared_link_policy",type:{datatype:"SharedLinkPolicy",namespace:"sharing"}},{description:"Who can be a member of this shared folder, as set on the folder itself. The effective policy may differ from this value if the team-wide policy is more restrictive. Present only if the folder is owned by a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can be a member of this shared folder, taking into account both the folder and the team-wide policy. This value may differ from that of member_policy if the team-wide policy is more restrictive than the folder policy. Present only if the folder is owned by a team.",parameter:"resolved_member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAction:{description:"Actions that can be performed on a link.",fields:[{description:"Change the access level of the link.",parameter:"change_access_level",type:{primitive:"Void"}},{description:"Change the audience of the link.",parameter:"change_audience",type:{primitive:"Void"}},{description:"Remove the expiry date of the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Remove the password of the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Create or modify the expiry date of the link.",parameter:"set_expiry",type:{primitive:"Void"}},{description:"Create or modify the password of the link.",parameter:"set_password",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermission:{description:"Permissions for actions that can be performed on a link.",fields:[{parameter:"action",type:{datatype:"LinkAction",namespace:"sharing"}},{parameter:"allow",type:{primitive:"Boolean"}},{parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},ListFoldersArgs:{fields:[{description:"The maximum number of results to return per request.",parameter:"limit",type:{primitive:"UInt32"}},{description:"A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's :field:`SharedFolderMetadata.permissions` field describing the actions the  authenticated user can perform on the folder.",parameter:"actions",type:{optional:{list:{datatype:"FolderAction",namespace:"sharing"}}}}],stone_type:"struct"},ListFoldersResult:{description:"Result for :route:`list_folders` or :route:`list_mountable_folders`, depending on which endpoint was requested.\nUnmounted shared folders can be identified by the absence of :field:`SharedFolderMetadata.path_lower`.",fields:[{description:"List of all shared folders the authenticated user has access to.",parameter:"entries",type:{list:{datatype:"SharedFolderMetadata",namespace:"sharing"}}},{description:"Present if there are additional shared folders that have not been returned yet. Pass the cursor into the corresponding continue endpoint (either :route:`list_folders/continue` or :route:`list_mountable_folders/continue`) to list additional folders.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberPolicy:{description:"Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.",fields:[{description:"Only a teammate can become a member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can become a member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedContentLinkMetadata:{description:"Metadata of a shared link for a file or folder.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The URL of the link.",parameter:"url",type:{primitive:"String"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}},{description:"The content inside this folder with link audience different than this folder's. This is only returned when an endpoint that returns metadata for a single shared folder is called, e.g. /get_folder_metadata.",parameter:"audience_exceptions",type:{optional:{datatype:"AudienceExceptions",namespace:"sharing"}}}],stone_type:"struct"},SharedFolderMetadata:{description:"The metadata which includes basic information about the shared folder.",fields:[{description:"The current user's access level for this shared folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Whether this folder is inside of a team folder.",parameter:"is_inside_team_folder",type:{primitive:"Boolean"}},{description:"Whether this folder is a :link:`team folder https://www.dropbox.com/en/help/986`.",parameter:"is_team_folder",type:{primitive:"Boolean"}},{description:"The name of the this shared folder.",parameter:"name",type:{primitive:"String"}},{description:"Policies governing this shared folder.",parameter:"policy",type:{datatype:"FolderPolicy",namespace:"sharing"}},{description:"URL for displaying a web preview of the shared folder.",parameter:"preview_url",type:{primitive:"String"}},{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"Timestamp indicating when the current user was invited to this shared folder.",parameter:"time_invited",type:{primitive:"Timestamp"}},{description:"The display names of the users that own the folder. If the folder is part of a team folder, the display names of the team admins are also included. Absent if the owner display names cannot be fetched.",parameter:"owner_display_names",type:{optional:{list:{primitive:"String"}}}},{description:"The team that owns the folder. This field is not present if the folder is not owned by a team.",parameter:"owner_team",type:{optional:{datatype:"Team",namespace:"users"}}},{description:"The ID of the parent shared folder. This field is present only if the folder is contained within another shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"The lower-cased full path of this shared folder. Absent for unmounted folders.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"Display name for the parent folder.",parameter:"parent_folder_name",type:{optional:{primitive:"String"}}},{description:"The metadata of the shared content link to this shared folder. Absent if there is no link on the folder. This is for an unreleased feature so it may not be returned yet.",parameter:"link_metadata",type:{optional:{datatype:"SharedContentLinkMetadata",namespace:"sharing"}}},{description:"Actions the current user may perform on the folder and its contents. The set of permissions corresponds to the FolderActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"FolderPermission",namespace:"sharing"}}}},{description:"Whether the folder inherits its members from its parent.",parameter:"access_inheritance",type:{datatype:"AccessInheritance",namespace:"sharing"}}],stone_type:"struct"},SharedLinkPolicy:{description:"Who can view shared links in this folder.",fields:[{description:"Links can be shared with anyone.",parameter:"anyone",type:{primitive:"Void"}},{description:"Links can be shared with anyone on the same team as the owner.",parameter:"team",type:{primitive:"Void"}},{description:"Links can only be shared among members of the shared folder.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ViewerInfoPolicy:{fields:[{description:"Viewer information is available on this file.",parameter:"enabled",type:{primitive:"Void"}},{description:"Viewer information is disabled on this file.",parameter:"disabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},HE1N:function(e,t,i){var r=i("cm7J"),o=Array.prototype.splice;e.exports=function(e){var t=this.__data__,i=r(t,e);return!(i<0)&&(i==t.length-1?t.pop():o.call(t,i,1),--this.size,!0)}},"HFc/":function(e,t,i){"use strict";t.a={team:{DateRange:{description:"Input arguments that can be provided for most reports.",fields:[{description:"Optional starting date (inclusive). If start_date is None or too long ago, this field will  be set to 6 months ago.",parameter:"start_date",type:{optional:{primitive:"Timestamp"}}},{description:"Optional ending date (exclusive).",parameter:"end_date",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},DateRangeError:{description:"Errors that can originate from problems in input arguments to reports.",fields:[{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},DevicesActive:{description:"Each of the items is an array of values, one value per day. The value is the number of devices active within a time window, ending with that day.\nIf there is no data for a day, then the value will be None.",fields:[{description:"Array of number of linked windows (desktop) clients with activity.",parameter:"windows",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of number of linked mac (desktop) clients with activity.",parameter:"macos",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of number of linked linus (desktop) clients with activity.",parameter:"linux",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of number of linked ios devices with activity.",parameter:"ios",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of number of linked android devices with activity.",parameter:"android",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of number of other linked devices (blackberry, windows phone, etc)  with activity.",parameter:"other",type:{list:{optional:{primitive:"UInt64"}}}},{description:"Array of total number of linked clients with activity.",parameter:"total",type:{list:{optional:{primitive:"UInt64"}}}}],stone_type:"struct"},GetDevicesReport:{description:"Devices Report Result. Contains subsections for different time ranges of activity. Each of the items in each subsection of the storage report is an array of values, one value per day. If there is no data for a day, then the value will be None.",fields:[{description:"First date present in the results as 'YYYY-MM-DD' or None.",parameter:"start_date",type:{primitive:"String"}},{description:"Report of the number of devices active in the last day.",parameter:"active_1_day",type:{datatype:"DevicesActive",namespace:"team"}},{description:"Report of the number of devices active in the last 7 days.",parameter:"active_7_day",type:{datatype:"DevicesActive",namespace:"team"}},{description:"Report of the number of devices active in the last 28 days.",parameter:"active_28_day",type:{datatype:"DevicesActive",namespace:"team"}}],stone_type:"struct"}}}},HGTD:function(e,t,i){var r=i("IqJI"),o=i("LF0y");e.exports=function(e,t){return(null==e?0:e.length)?(t=void 0===t?1:o(t),r(e,t)):[]}},HIoB:function(e,t){e.exports=function(e,t){for(var i=-1,r=Array(e);++i<e;)r[i]=t(i);return r}},HLVI:function(e,t){var i=Object.prototype.toString;e.exports=function(e){return i.call(e)}},HNLP:function(e,t,i){"use strict";t.a={file_properties:{InvalidPropertyGroupError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{parameter:"path",type:{datatype:"LookupError",namespace:"file_properties"}},{description:"This folder cannot be tagged. Tagging folders is not supported for team-owned templates.",parameter:"unsupported_folder",type:{primitive:"Void"}},{description:"One or more of the supplied property field values is too large.",parameter:"property_field_too_large",type:{primitive:"Void"}},{description:"One or more of the supplied property fields does not conform to the template specifications.",parameter:"does_not_fit_template",type:{primitive:"Void"}},{description:"There are 2 or more property groups referring to the same templates in the input.",parameter:"duplicate_property_groups",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{parameter:"malformed_path",type:{primitive:"String"}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},OverwritePropertyGroupArg:{fields:[{description:"A unique identifier for the file or folder.",parameter:"path",type:{primitive:"String"}},{description:'The property groups "snapshot" updates to force apply. No two groups in the input should  refer to the same template.',parameter:"property_groups",type:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}],stone_type:"struct"},PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}}}},HRQj:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("0CtA"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},HVn3:function(e,t,i){var r=i("l7Do"),o=i("QlKF")((function(e,t,i){r(e,t,i)}));e.exports=o},HcYh:function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.marksy=l,t.default=function(e){return l(e)};var r,o=(r=i("Ax1p"))&&r.__esModule?r:{default:r},a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,i):{};r.get||r.set?Object.defineProperty(t,i,r):t[i]=e[i]}return t.default=e,t}(i("2GMX"));function n(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function s(e,t,i){return(s=n()?Reflect.construct:function(e,t,i){var r=[null];r.push.apply(r,t);var o=new(Function.bind.apply(e,r));return i&&p(o,i.prototype),o}).apply(null,arguments)}function p(e,t){return(p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e){return function(e){if(Array.isArray(e)){for(var t=0,i=new Array(e.length);t<e.length;t++)i[t]=e[t];return i}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function l(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={tree:null,elements:null,nextElementId:null,toc:null,currentIdLevel:0,currentId:[]},i=(0,a.default)(t,e,{code:function(i,r){if("marksy"===r){try{var o=t.nextElementId++,n=Object.keys(e.components).map((function(t){return e.components[t]}));return t.elements[o]=s(Function,["h"].concat(d(Object.keys(e.components)),["return ".concat(i)])).apply(void 0,[function(i){for(var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=n.indexOf(i)>=0?Object.assign(r||{},{key:t.nextElementId++,context:t.context}):r,a=arguments.length,s=new Array(a>2?a-2:0),p=2;p<a;p++)s[p-2]=arguments[p];return e.createElement(i,o,s)}].concat(d(n)))||null,t.tree.push(t.elements[o]),"{{".concat(o,"}}")}catch(p){}return null}return(0,a.codeRenderer)(t,e)(i,r)}});return function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return t.tree=[],t.elements={},t.toc=[],t.nextElementId=0,t.context=a,t.currentId=[],(0,o.default)(e,Object.assign({renderer:i,smartypants:!0},r)),{tree:t.tree,toc:t.toc}}}},HdlU:function(e,t,i){"use strict";t.a={team:{LegalHoldPolicy:{fields:[{description:"The legal hold id.",parameter:"id",type:{primitive:"String"}},{description:"Policy name.",parameter:"name",type:{primitive:"String"}},{description:"Team members IDs and number of permanetly deleted members under hold.",parameter:"members",type:{datatype:"MembersInfo",namespace:"team"}},{description:"The current state of the hold.",parameter:"status",type:{datatype:"LegalHoldStatus",namespace:"team"}},{description:"Start date of the legal hold policy.",parameter:"start_date",type:{primitive:"Timestamp"}},{description:"A description of the legal hold policy.",parameter:"description",type:{optional:{primitive:"String"}}},{description:"The time at which the legal hold was activated.",parameter:"activation_time",type:{optional:{primitive:"Timestamp"}}},{description:"End date of the legal hold policy.",parameter:"end_date",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},LegalHoldStatus:{fields:[{description:"The legal hold policy is active.",parameter:"active",type:{primitive:"Void"}},{description:"The legal hold policy was released.",parameter:"released",type:{primitive:"Void"}},{description:"The legal hold policy is activating.",parameter:"activating",type:{primitive:"Void"}},{description:"The legal hold policy is updating.",parameter:"updating",type:{primitive:"Void"}},{description:"The legal hold policy is exporting.",parameter:"exporting",type:{primitive:"Void"}},{description:"The legal hold policy is releasing.",parameter:"releasing",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LegalHoldsGetPolicyArg:{fields:[{description:"The legal hold Id.",parameter:"id",type:{primitive:"String"}}],stone_type:"struct"},LegalHoldsGetPolicyError:{fields:[{description:"There has been an unknown legal hold error.",parameter:"unknown_legal_hold_error",type:{primitive:"Void"}},{description:"You don't have permissions to perform this action.",parameter:"insufficient_permissions",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"Legal hold policy does not exist for :field:`LegalHoldsGetPolicyArg.id`.",parameter:"legal_hold_policy_not_found",type:{primitive:"Void"}}],stone_type:"open_union"},MembersInfo:{fields:[{description:"Team member IDs of the users under this hold.",parameter:"team_member_ids",type:{list:{primitive:"String"}}},{description:"The number of permanently deleted users that were under this hold.",parameter:"permanently_deleted_users",type:{primitive:"UInt64"}}],stone_type:"struct"}}}},HnOD:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("yT97"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},Hsk6:function(e,t,i){"use strict";t.a={sharing:{AccessInheritance:{description:"Information about the inheritance policy of a shared folder.",fields:[{description:"The shared folder inherits its members from the parent folder.",parameter:"inherit",type:{primitive:"Void"}},{description:"The shared folder does not inherit its members from the parent folder.",parameter:"no_inherit",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AclUpdatePolicy:{description:"Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.",fields:[{description:"Only the owner can update the ACL.",parameter:"owner",type:{primitive:"Void"}},{description:"Any editor can update the ACL. This may be further restricted to editors on the same team.",parameter:"editors",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AudienceExceptionContentInfo:{description:"Information about the content that has a link audience different than that of this folder.",fields:[{description:"The name of the content, which is either a file or a folder.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},AudienceExceptions:{description:"The total count and truncated list of information of content inside this folder that has a different audience than the link on this folder. This is only returned for folders.",fields:[{parameter:"count",type:{primitive:"UInt32"}},{description:"A truncated list of some of the content that is an exception. The length of this list could be smaller than the count since it is only a sample but will not be empty as long as count is not 0.",parameter:"exceptions",type:{list:{datatype:"AudienceExceptionContentInfo",namespace:"sharing"}}}],stone_type:"struct"},AudienceRestrictingSharedFolder:{description:"Information about the shared folder that prevents the link audience for this link from being more restrictive.",fields:[{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The name of the shared folder.",parameter:"name",type:{primitive:"String"}},{description:"The link audience of the shared folder.",parameter:"audience",type:{datatype:"LinkAudience",namespace:"sharing"}}],stone_type:"struct"},FolderAction:{description:"Actions that may be taken on shared folders.",fields:[{description:"Change folder options, such as who can be invited to join the folder.",parameter:"change_options",type:{primitive:"Void"}},{description:"Disable viewer information for this folder.",parameter:"disable_viewer_info",type:{primitive:"Void"}},{description:"Change or edit contents of the folder.",parameter:"edit_contents",type:{primitive:"Void"}},{description:"Enable viewer information on the folder.",parameter:"enable_viewer_info",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read and write permission.",parameter:"invite_editor",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission.",parameter:"invite_viewer",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission but no comment permissions.",parameter:"invite_viewer_no_comment",type:{primitive:"Void"}},{description:"Relinquish one's own membership in the folder.",parameter:"relinquish_membership",type:{primitive:"Void"}},{description:"Unmount the folder.",parameter:"unmount",type:{primitive:"Void"}},{description:"Stop sharing this folder.",parameter:"unshare",type:{primitive:"Void"}},{description:"Keep a copy of the contents upon leaving or being kicked from the folder.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Use create_link instead.",parameter:"share_link",type:{primitive:"Void"}},{description:"Create a shared link for folder.",parameter:"create_link",type:{primitive:"Void"}},{description:"Set whether the folder inherits permissions from its parent.",parameter:"set_access_inheritance",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FolderPermission:{description:"Whether the user is allowed to take the action on the shared folder.",fields:[{description:"The action that the user may wish to take on the folder.",parameter:"action",type:{datatype:"FolderAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed, or if no reason is available.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},FolderPolicy:{description:"A set of policies governing membership and privileges for a shared folder.",fields:[{description:"Who can add and remove members from this shared folder.",parameter:"acl_update_policy",type:{datatype:"AclUpdatePolicy",namespace:"sharing"}},{description:"Who links can be shared with.",parameter:"shared_link_policy",type:{datatype:"SharedLinkPolicy",namespace:"sharing"}},{description:"Who can be a member of this shared folder, as set on the folder itself. The effective policy may differ from this value if the team-wide policy is more restrictive. Present only if the folder is owned by a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can be a member of this shared folder, taking into account both the folder and the team-wide policy. This value may differ from that of member_policy if the team-wide policy is more restrictive than the folder policy. Present only if the folder is owned by a team.",parameter:"resolved_member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}}],stone_type:"struct"},GetMetadataArgs:{fields:[{description:"The ID for the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's :field:`SharedFolderMetadata.permissions` field describing the actions the  authenticated user can perform on the folder.",parameter:"actions",type:{optional:{list:{datatype:"FolderAction",namespace:"sharing"}}}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAction:{description:"Actions that can be performed on a link.",fields:[{description:"Change the access level of the link.",parameter:"change_access_level",type:{primitive:"Void"}},{description:"Change the audience of the link.",parameter:"change_audience",type:{primitive:"Void"}},{description:"Remove the expiry date of the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Remove the password of the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Create or modify the expiry date of the link.",parameter:"set_expiry",type:{primitive:"Void"}},{description:"Create or modify the password of the link.",parameter:"set_password",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermission:{description:"Permissions for actions that can be performed on a link.",fields:[{parameter:"action",type:{datatype:"LinkAction",namespace:"sharing"}},{parameter:"allow",type:{primitive:"Boolean"}},{parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},MemberPolicy:{description:"Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.",fields:[{description:"Only a teammate can become a member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can become a member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedContentLinkMetadata:{description:"Metadata of a shared link for a file or folder.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The URL of the link.",parameter:"url",type:{primitive:"String"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}},{description:"The content inside this folder with link audience different than this folder's. This is only returned when an endpoint that returns metadata for a single shared folder is called, e.g. /get_folder_metadata.",parameter:"audience_exceptions",type:{optional:{datatype:"AudienceExceptions",namespace:"sharing"}}}],stone_type:"struct"},SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderMetadata:{description:"The metadata which includes basic information about the shared folder.",fields:[{description:"The current user's access level for this shared folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Whether this folder is inside of a team folder.",parameter:"is_inside_team_folder",type:{primitive:"Boolean"}},{description:"Whether this folder is a :link:`team folder https://www.dropbox.com/en/help/986`.",parameter:"is_team_folder",type:{primitive:"Boolean"}},{description:"The name of the this shared folder.",parameter:"name",type:{primitive:"String"}},{description:"Policies governing this shared folder.",parameter:"policy",type:{datatype:"FolderPolicy",namespace:"sharing"}},{description:"URL for displaying a web preview of the shared folder.",parameter:"preview_url",type:{primitive:"String"}},{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"Timestamp indicating when the current user was invited to this shared folder.",parameter:"time_invited",type:{primitive:"Timestamp"}},{description:"The display names of the users that own the folder. If the folder is part of a team folder, the display names of the team admins are also included. Absent if the owner display names cannot be fetched.",parameter:"owner_display_names",type:{optional:{list:{primitive:"String"}}}},{description:"The team that owns the folder. This field is not present if the folder is not owned by a team.",parameter:"owner_team",type:{optional:{datatype:"Team",namespace:"users"}}},{description:"The ID of the parent shared folder. This field is present only if the folder is contained within another shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"The lower-cased full path of this shared folder. Absent for unmounted folders.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"Display name for the parent folder.",parameter:"parent_folder_name",type:{optional:{primitive:"String"}}},{description:"The metadata of the shared content link to this shared folder. Absent if there is no link on the folder. This is for an unreleased feature so it may not be returned yet.",parameter:"link_metadata",type:{optional:{datatype:"SharedContentLinkMetadata",namespace:"sharing"}}},{description:"Actions the current user may perform on the folder and its contents. The set of permissions corresponds to the FolderActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"FolderPermission",namespace:"sharing"}}}},{description:"Whether the folder inherits its members from its parent.",parameter:"access_inheritance",type:{datatype:"AccessInheritance",namespace:"sharing"}}],stone_type:"struct"},SharedLinkPolicy:{description:"Who can view shared links in this folder.",fields:[{description:"Links can be shared with anyone.",parameter:"anyone",type:{primitive:"Void"}},{description:"Links can be shared with anyone on the same team as the owner.",parameter:"team",type:{primitive:"Void"}},{description:"Links can only be shared among members of the shared folder.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ViewerInfoPolicy:{fields:[{description:"Viewer information is available on this file.",parameter:"enabled",type:{primitive:"Void"}},{description:"Viewer information is disabled on this file.",parameter:"disabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},IGcY:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("gB+X"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},INDh:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Qs4L"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},IOVJ:function(e,t,i){"use strict";var r=i("mK0O"),o=i("7L9N"),a=i("mXGw"),n=i.n(a),s=i("emEt"),p=i("xtsi");function d(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?d(Object(i),!0).forEach((function(t){Object(r.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):d(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}var m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=l(l({},this.props),{},{pathContext:this.props.pageContext}),t=Object(p.apiRunner)("replaceComponentRenderer",{props:this.props,loader:s.publicLoader})[0]||Object(a.createElement)(this.props.pageResources.component,l(l({},e),{},{key:this.props.path||this.props.pageResources.page.path}));return Object(p.apiRunner)("wrapPageElement",{element:t,props:e},t,(function(t){return{element:t.result,props:e}})).pop()},t}(n.a.Component);t.a=m},IOY3:function(e,t){e.exports={}},IUp9:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("s8DQ"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},IqJI:function(e,t,i){var r=i("gwRl"),o=i("+Vbj");e.exports=function e(t,i,a,n,s){var p=-1,d=t.length;for(a||(a=o),s||(s=[]);++p<d;){var l=t[p];i>0&&a(l)?i>1?e(l,i-1,a,n,s):r(s,l):n||(s[s.length]=l)}return s}},IrTi:function(e,t){e.exports={}},J1Us:function(e,t,i){"use strict";t.a={file_properties:{InvalidPropertyGroupError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{parameter:"path",type:{datatype:"LookupError",namespace:"file_properties"}},{description:"This folder cannot be tagged. Tagging folders is not supported for team-owned templates.",parameter:"unsupported_folder",type:{primitive:"Void"}},{description:"One or more of the supplied property field values is too large.",parameter:"property_field_too_large",type:{primitive:"Void"}},{description:"One or more of the supplied property fields does not conform to the template specifications.",parameter:"does_not_fit_template",type:{primitive:"Void"}},{description:"There are 2 or more property groups referring to the same templates in the input.",parameter:"duplicate_property_groups",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{parameter:"malformed_path",type:{primitive:"String"}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{CommitInfoWithProperties:{fields:[{description:"Path in the user's Dropbox to save the file.",parameter:"path",type:{primitive:"String"}},{description:"Selects what to do if the file already exists.",parameter:"mode",type:{datatype:"WriteMode",namespace:"files"}},{description:"If there's a conflict, as determined by :field:`mode`, have the Dropbox server try to autorename the file to avoid conflict.",parameter:"autorename",type:{primitive:"Boolean"}},{description:"The value to store as the :field:`client_modified` timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified.",parameter:"client_modified",type:{optional:{primitive:"Timestamp"}}},{description:"Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If :val:`true`, this tells the clients that this modification shouldn't result in a user notification.",parameter:"mute",type:{primitive:"Boolean"}},{description:"List of custom properties to add to file.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:'Be more strict about how each :type:`WriteMode` detects conflict. For example, always return a conflict error when :field:`mode` = :field:`WriteMode.update` and the given "rev" doesn\'t match the existing file\'s "rev", even if the existing file has been deleted.',parameter:"strict_conflict",type:{primitive:"Boolean"}}],stone_type:"struct"},Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"},UploadErrorWithProperties:{fields:[{description:"Unable to save the uploaded contents to a file.",parameter:"path",type:{datatype:"UploadWriteFailed",namespace:"files"}},{description:"The supplied property group is invalid. The file has uploaded without property groups.",parameter:"properties_error",type:{datatype:"InvalidPropertyGroupError",namespace:"file_properties"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UploadWriteFailed:{fields:[{description:"The reason why the file couldn't be saved.",parameter:"reason",type:{datatype:"WriteError",namespace:"files"}},{description:"The upload session ID; data has already been uploaded to the corresponding upload session and this ID may be used to retry the commit with :route:`upload_session/finish`.",parameter:"upload_session_id",type:{primitive:"String"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteMode:{description:"Your intent when writing a file to some path. This is used to determine what constitutes a conflict and what the autorename strategy is.\nIn some situations, the conflict behavior is identical: (a) If the target path doesn't refer to anything, the file is always written; no conflict. (b) If the target path refers to a folder, it's always a conflict. (c) If the target path refers to a file with identical contents, nothing gets written; no conflict.\nThe conflict checking differs in the case where there's a file at the target path with contents different from the contents you're trying to write.",fields:[{description:'Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, "document.txt" might become "document (2).txt".',parameter:"add",type:{primitive:"Void"}},{description:"Always overwrite the existing file. The autorename strategy is the same as it is for :field:`add`.",parameter:"overwrite",type:{primitive:"Void"}},{description:'Overwrite if the given "rev" matches the existing file\'s "rev". The autorename strategy is to append the string "conflicted copy" to the file name. For example, "document.txt" might become "document (conflicted copy).txt" or "document (Panda\'s conflicted copy).txt".',parameter:"update",type:{primitive:"String"}}],stone_type:"union"}}}},"J3/x":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("A+xa"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},J9xP:function(e,t,i){var r=i("cm7J");e.exports=function(e){return r(this.__data__,e)>-1}},JAzK:function(e,t,i){"use strict";t.a={file_properties:{RemoveTemplateArg:{fields:[{description:"An identifier for a template created by :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}}],stone_type:"struct"},TemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},JDyj:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("KO4V"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"JF+v":function(e,t,i){"use strict";i.r(t),i.d(t,"Link",(function(){return L})),i.d(t,"Location",(function(){return g})),i.d(t,"LocationProvider",(function(){return b})),i.d(t,"Match",(function(){return C})),i.d(t,"Redirect",(function(){return U})),i.d(t,"Router",(function(){return V})),i.d(t,"ServerLocation",(function(){return w})),i.d(t,"isRedirect",(function(){return M})),i.d(t,"redirectTo",(function(){return F})),i.d(t,"useLocation",(function(){return j})),i.d(t,"useNavigate",(function(){return O})),i.d(t,"useParams",(function(){return B})),i.d(t,"useMatch",(function(){return G})),i.d(t,"BaseContext",(function(){return T}));var r=i("mXGw"),o=i.n(r),a=(i("W0B4"),i("+Ltg")),n=i.n(a),s=i("nqlD"),p=i.n(s),d=i("94VI"),l=i("ZkUl");i.d(t,"matchPath",(function(){return l.match}));var m=i("ELdr");i.d(t,"createHistory",(function(){return m.a})),i.d(t,"createMemorySource",(function(){return m.b})),i.d(t,"navigate",(function(){return m.d})),i.d(t,"globalHistory",(function(){return m.c}));var c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e};function h(e,t){var i={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(i[r]=e[r]);return i}function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function f(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function y(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var v=function(e,t){var i=p()(t);return i.displayName=e,i},_=v("Location"),g=function(e){var t=e.children;return o.a.createElement(_.Consumer,null,(function(e){return e?t(e):o.a.createElement(b,null,t)}))},b=function(e){function t(){var i,r;u(this,t);for(var o=arguments.length,a=Array(o),n=0;n<o;n++)a[n]=arguments[n];return i=r=f(this,e.call.apply(e,[this].concat(a))),r.state={context:r.getContext(),refs:{unlisten:null}},f(r,i)}return y(t,e),t.prototype.getContext=function(){var e=this.props.history;return{navigate:e.navigate,location:e.location}},t.prototype.componentDidCatch=function(e,t){if(!M(e))throw e;(0,this.props.history.navigate)(e.uri,{replace:!0})},t.prototype.componentDidUpdate=function(e,t){t.context.location!==this.state.context.location&&this.props.history._onTransitionComplete()},t.prototype.componentDidMount=function(){var e=this,t=this.state.refs,i=this.props.history;i._onTransitionComplete(),t.unlisten=i.listen((function(){Promise.resolve().then((function(){requestAnimationFrame((function(){e.unmounted||e.setState((function(){return{context:e.getContext()}}))}))}))}))},t.prototype.componentWillUnmount=function(){var e=this.state.refs;this.unmounted=!0,e.unlisten()},t.prototype.render=function(){var e=this.state.context,t=this.props.children;return o.a.createElement(_.Provider,{value:e},"function"==typeof t?t(e):t||null)},t}(o.a.Component);b.defaultProps={history:m.c};var w=function(e){var t=e.url,i=e.children,r=t.indexOf("?"),a=void 0,n="";return r>-1?(a=t.substring(0,r),n=t.substring(r)):a=t,o.a.createElement(_.Provider,{value:{location:{pathname:a,search:n,hash:""},navigate:function(){throw new Error("You can't call navigate on the server.")}}},i)},T=v("Base",{baseuri:"/",basepath:"/"}),V=function(e){return o.a.createElement(T.Consumer,null,(function(t){return o.a.createElement(g,null,(function(i){return o.a.createElement(k,c({},t,i,e))}))}))},k=function(e){function t(){return u(this,t),f(this,e.apply(this,arguments))}return y(t,e),t.prototype.render=function(){var e=this.props,t=e.location,i=e.navigate,r=e.basepath,a=e.primary,n=e.children,s=(e.baseuri,e.component),p=void 0===s?"div":s,d=h(e,["location","navigate","basepath","primary","children","baseuri","component"]),m=o.a.Children.toArray(n).reduce((function(e,t){var i=N(r)(t);return e.concat(i)}),[]),u=t.pathname,f=Object(l.pick)(m,u);if(f){var y=f.params,v=f.uri,_=f.route,g=f.route.value;r=_.default?r:_.path.replace(/\*$/,"");var b=c({},y,{uri:v,location:t,navigate:function(e,t){return i(Object(l.resolve)(e,v),t)}}),w=o.a.cloneElement(g,b,g.props.children?o.a.createElement(V,{location:t,primary:a},g.props.children):void 0),k=a?x:p,S=a?c({uri:v,location:t,component:p},d):d;return o.a.createElement(T.Provider,{value:{baseuri:v,basepath:r}},o.a.createElement(k,S,w))}return null},t}(o.a.PureComponent);k.defaultProps={primary:!0};var S=v("Focus"),x=function(e){var t=e.uri,i=e.location,r=e.component,a=h(e,["uri","location","component"]);return o.a.createElement(S.Consumer,null,(function(e){return o.a.createElement(D,c({},a,{component:r,requestFocus:e,uri:t,location:i}))}))},A=!0,P=0,D=function(e){function t(){var i,r;u(this,t);for(var o=arguments.length,a=Array(o),n=0;n<o;n++)a[n]=arguments[n];return i=r=f(this,e.call.apply(e,[this].concat(a))),r.state={},r.requestFocus=function(e){!r.state.shouldFocus&&e&&e.focus()},f(r,i)}return y(t,e),t.getDerivedStateFromProps=function(e,t){if(null==t.uri)return c({shouldFocus:!0},e);var i=e.uri!==t.uri,r=t.location.pathname!==e.location.pathname&&e.location.pathname===e.uri;return c({shouldFocus:i||r},e)},t.prototype.componentDidMount=function(){P++,this.focus()},t.prototype.componentWillUnmount=function(){0===--P&&(A=!0)},t.prototype.componentDidUpdate=function(e,t){e.location!==this.props.location&&this.state.shouldFocus&&this.focus()},t.prototype.focus=function(){var e=this.props.requestFocus;e?e(this.node):A?A=!1:this.node&&(this.node.contains(document.activeElement)||this.node.focus())},t.prototype.render=function(){var e=this,t=this.props,i=(t.children,t.style),r=(t.requestFocus,t.component),a=void 0===r?"div":r,n=(t.uri,t.location,h(t,["children","style","requestFocus","component","uri","location"]));return o.a.createElement(a,c({style:c({outline:"none"},i),tabIndex:"-1",ref:function(t){return e.node=t}},n),o.a.createElement(S.Provider,{value:this.requestFocus},this.props.children))},t}(o.a.Component);Object(d.polyfill)(D);var I=function(){},E=o.a.forwardRef;void 0===E&&(E=function(e){return e});var L=E((function(e,t){var i=e.innerRef,r=h(e,["innerRef"]);return o.a.createElement(T.Consumer,null,(function(e){e.basepath;var a=e.baseuri;return o.a.createElement(g,null,(function(e){var n=e.location,s=e.navigate,p=r.to,d=r.state,m=r.replace,u=r.getProps,f=void 0===u?I:u,y=h(r,["to","state","replace","getProps"]),v=Object(l.resolve)(p,a),_=encodeURI(v),g=n.pathname===_,b=Object(l.startsWith)(n.pathname,_);return o.a.createElement("a",c({ref:t||i,"aria-current":g?"page":void 0},y,f({isCurrent:g,isPartiallyCurrent:b,href:v,location:n}),{href:v,onClick:function(e){if(y.onClick&&y.onClick(e),z(e)){e.preventDefault();var t=m;if("boolean"!=typeof m&&g){var i=c({},n.state),r=(i.key,h(i,["key"]));t=Object(l.shallowCompare)(c({},d),r)}s(v,{state:d,replace:t})}}}))}))}))}));function R(e){this.uri=e}L.displayName="Link";var M=function(e){return e instanceof R},F=function(e){throw new R(e)},q=function(e){function t(){return u(this,t),f(this,e.apply(this,arguments))}return y(t,e),t.prototype.componentDidMount=function(){var e=this.props,t=e.navigate,i=e.to,r=(e.from,e.replace),o=void 0===r||r,a=e.state,n=(e.noThrow,e.baseuri),s=h(e,["navigate","to","from","replace","state","noThrow","baseuri"]);Promise.resolve().then((function(){var e=Object(l.resolve)(i,n);t(Object(l.insertParams)(e,s),{replace:o,state:a})}))},t.prototype.render=function(){var e=this.props,t=(e.navigate,e.to),i=(e.from,e.replace,e.state,e.noThrow),r=e.baseuri,o=h(e,["navigate","to","from","replace","state","noThrow","baseuri"]),a=Object(l.resolve)(t,r);return i||F(Object(l.insertParams)(a,o)),null},t}(o.a.Component),U=function(e){return o.a.createElement(T.Consumer,null,(function(t){var i=t.baseuri;return o.a.createElement(g,null,(function(t){return o.a.createElement(q,c({},t,{baseuri:i},e))}))}))},C=function(e){var t=e.path,i=e.children;return o.a.createElement(T.Consumer,null,(function(e){var r=e.baseuri;return o.a.createElement(g,null,(function(e){var o=e.navigate,a=e.location,n=Object(l.resolve)(t,r),s=Object(l.match)(n,a.pathname);return i({navigate:o,location:a,match:s?c({},s.params,{uri:s.uri,path:t}):null})}))}))},j=function(){var e=Object(r.useContext)(_);if(!e)throw new Error("useLocation hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");return e.location},O=function(){var e=Object(r.useContext)(_);if(!e)throw new Error("useNavigate hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");return e.navigate},B=function(){var e=Object(r.useContext)(T);if(!e)throw new Error("useParams hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");var t=j(),i=Object(l.match)(e.basepath,t.pathname);return i?i.params:null},G=function(e){if(!e)throw new Error("useMatch(path: string) requires an argument of a string to match against");var t=Object(r.useContext)(T);if(!t)throw new Error("useMatch hook was used but a LocationContext.Provider was not found in the parent tree. Make sure this is used in a component that is a child of Router");var i=j(),o=Object(l.resolve)(e,t.baseuri),a=Object(l.match)(o,i.pathname);return a?c({},a.params,{uri:a.uri,path:e}):null},W=function(e){return e.replace(/(^\/+|\/+$)/g,"")},N=function e(t){return function(i){if(!i)return null;if(i.type===o.a.Fragment&&i.props.children)return o.a.Children.map(i.props.children,e(t));if(i.props.path||i.props.default||i.type===U||n()(!1),i.type!==U||i.props.from&&i.props.to||n()(!1),i.type!==U||Object(l.validateRedirect)(i.props.from,i.props.to)||n()(!1),i.props.default)return{value:i,default:!0};var r=i.type===U?i.props.from:i.props.path,a="/"===r?t:W(t)+"/"+W(r);return{value:i,default:i.props.default,path:i.props.children?W(a)+"/*":a}}},z=function(e){return!e.defaultPrevented&&0===e.button&&!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}},JIgs:function(e,t,i){var r=i("EN0E"),o=i("h0av");e.exports=function(e,t){return e&&r(e,t,o)}},JNeY:function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},JobError:{description:"Error occurred while performing an asynchronous job from :route:`unshare_folder` or :route:`remove_folder_member`.",fields:[{description:"Error occurred while performing :route:`unshare_folder` action.",parameter:"unshare_folder_error",type:{datatype:"UnshareFolderError",namespace:"sharing"}},{description:"Error occurred while performing :route:`remove_folder_member` action.",parameter:"remove_folder_member_error",type:{datatype:"RemoveFolderMemberError",namespace:"sharing"}},{description:"Error occurred while performing :route:`relinquish_folder_membership` action.",parameter:"relinquish_folder_membership_error",type:{datatype:"RelinquishFolderMembershipError",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},JobStatus:{fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The asynchronous job has finished.",parameter:"complete",type:{primitive:"Void"}},{description:"The asynchronous job returned an error.",parameter:"failed",type:{datatype:"JobError",namespace:"sharing"}}],stone_type:"union"},MemberAccessLevelResult:{description:"Contains information about a member's access level to content after an operation.",fields:[{description:"The member still has this level of access to the content through a parent folder.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"A localized string with additional information about why the user has this access level to the content.",parameter:"warning",type:{optional:{primitive:"String"}}},{description:"The parent folders that a member has access to. The field is present if the user has access to the first parent folder where the member gains access.",parameter:"access_details",type:{optional:{list:{datatype:"ParentFolderAccessInfo",namespace:"sharing"}}}}],stone_type:"struct"},MemberAction:{description:"Actions that may be taken on members of a shared folder.",fields:[{description:"Allow the member to keep a copy of the folder when removing.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Make the member an editor of the folder.",parameter:"make_editor",type:{primitive:"Void"}},{description:"Make the member an owner of the folder.",parameter:"make_owner",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder.",parameter:"make_viewer",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder without commenting permissions.",parameter:"make_viewer_no_comment",type:{primitive:"Void"}},{description:"Remove the member from the folder.",parameter:"remove",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberPermission:{description:"Whether the user is allowed to take the action on the associated member.",fields:[{description:"The action that the user may wish to take on the member.",parameter:"action",type:{datatype:"MemberAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},ParentFolderAccessInfo:{description:"Contains information about a parent folder that a member has access to.",fields:[{description:"Display name for the folder.",parameter:"folder_name",type:{primitive:"String"}},{description:"The identifier of the parent shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The user's permissions for the parent shared folder.",parameter:"permissions",type:{list:{datatype:"MemberPermission",namespace:"sharing"}}},{description:"The full path to the parent shared folder relative to the acting user's root.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelinquishFolderMembershipError:{fields:[{parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{description:"The current user is the owner of the shared folder. Owners cannot relinquish membership to their own folders. Try unsharing or transferring ownership first.",parameter:"folder_owner",type:{primitive:"Void"}},{description:"The shared folder is currently mounted.  Unmount the shared folder before relinquishing membership.",parameter:"mounted",type:{primitive:"Void"}},{description:"The current user has access to the shared folder via a group.  You can't relinquish membership to folders shared via groups.",parameter:"group_access",type:{primitive:"Void"}},{description:"This action cannot be performed on a team shared folder.",parameter:"team_folder",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"The current user only has inherited access to the shared folder.  You can't relinquish inherited membership to folders.",parameter:"no_explicit_access",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RemoveFolderMemberError:{fields:[{parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{parameter:"member_error",type:{datatype:"SharedFolderMemberError",namespace:"sharing"}},{description:"The target user is the owner of the shared folder. You can't remove this user until ownership has been transferred to another member.",parameter:"folder_owner",type:{primitive:"Void"}},{description:"The target user has access to the shared folder via a group.",parameter:"group_access",type:{primitive:"Void"}},{description:"This action cannot be performed on a team shared folder.",parameter:"team_folder",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"This shared folder has too many files for leaving a copy. You can still remove this user without leaving a copy.",parameter:"too_many_files",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderMemberError:{fields:[{description:"The target dropbox_id is invalid.",parameter:"invalid_dropbox_id",type:{primitive:"Void"}},{description:"The target dropbox_id is not a member of the shared folder.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"The target member only has inherited access to the shared folder.",parameter:"no_explicit_access",type:{datatype:"MemberAccessLevelResult",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UnshareFolderError:{fields:[{parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{description:"This action cannot be performed on a team shared folder.",parameter:"team_folder",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"This shared folder has too many files to be unshared.",parameter:"too_many_files",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},JTKy:function(e,t,i){"use strict";i.r(t);var r=i("mXGw");t.default={React:r}},JXL5:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("FQyP"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},JZQH:function(e,t,i){var r=i("sWZd"),o=i("mH3y"),a=i("A277"),n=i("cTHi");e.exports=function(e,t){return t=r(t,e),null==(e=a(e,t))||delete e[n(o(t))]}},Jnem:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("nB8Q"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},JpX9:function(e,t,i){var r=i("eEf8"),o=i("n7Nx"),a=i("ZPhZ"),n=i("ySkN"),s=i("VveD"),p=i("Q8UH"),d=i("i3Pe"),l=i("AN5y"),m=i("c2OK"),c=i("LF0y"),h=Math.max;e.exports=function(e,t,i,u,f,y,v,_){var g=2&t;if(!g&&"function"!=typeof e)throw new TypeError("Expected a function");var b=u?u.length:0;if(b||(t&=-97,u=f=void 0),v=void 0===v?v:h(c(v),0),_=void 0===_?_:c(_),b-=f?f.length:0,64&t){var w=u,T=f;u=f=void 0}var V=g?void 0:p(e),k=[e,t,i,u,f,w,T,y,v,_];if(V&&d(k,V),e=k[0],t=k[1],i=k[2],u=k[3],f=k[4],!(_=k[9]=void 0===k[9]?g?0:e.length:h(k[9]-b,0))&&24&t&&(t&=-25),t&&1!=t)S=8==t||16==t?a(e,t,_):32!=t&&33!=t||f.length?n.apply(void 0,k):s(e,t,i,u);else var S=o(e,t,i);return m((V?r:l)(S,k),e,t)}},JuRr:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("XucX"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"KAl/":function(e,t,i){var r=i("WMT/"),o=i("l3+0"),a=[["ary",128],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",32],["partialRight",64],["rearg",256]];e.exports=function(e,t){return r(a,(function(i){var r="_."+i[0];t&i[1]&&!o(e,r)&&e.push(r)})),e.sort()}},KC6j:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Mtdo"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},KHFi:function(e,t,i){"use strict";t.a={users:{FileLockingValue:{description:"The value for :field:`UserFeature.file_locking`.",fields:[{description:"When this value is True, the user can lock files in shared directories. When the value is False the user can unlock the files they have locked or request to unlock files locked by others.",parameter:"enabled",type:{primitive:"Boolean"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PaperAsFilesValue:{description:"The value for :field:`UserFeature.paper_as_files`.",fields:[{description:"When this value is true, the user's Paper docs are accessible in Dropbox with the .paper extension and must be accessed via the /files endpoints.  When this value is false, the user's Paper docs are stored separate from Dropbox files and folders and should be accessed via the /paper endpoints.",parameter:"enabled",type:{primitive:"Boolean"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserFeature:{description:"A set of features that a Dropbox User account may have configured.",fields:[{description:"This feature contains information about how the user's Paper files are stored.",parameter:"paper_as_files",type:{primitive:"Void"}},{description:"This feature allows users to lock files in order to restrict other users from editing them.",parameter:"file_locking",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserFeatureValue:{description:"Values that correspond to entries in :type:`UserFeature`.",fields:[{parameter:"paper_as_files",type:{datatype:"PaperAsFilesValue",namespace:"users"}},{parameter:"file_locking",type:{datatype:"FileLockingValue",namespace:"users"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserFeaturesGetValuesBatchArg:{fields:[{description:"A list of features in :type:`UserFeature`. If the list is empty, this route will return :type:`UserFeaturesGetValuesBatchError`.",parameter:"features",type:{list:{datatype:"UserFeature",namespace:"users"}}}],stone_type:"struct"},UserFeaturesGetValuesBatchError:{fields:[{description:"At least one :type:`UserFeature` must be included in the :type:`UserFeaturesGetValuesBatchArg`.features list.",parameter:"empty_features_list",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserFeaturesGetValuesBatchResult:{fields:[{parameter:"values",type:{list:{datatype:"UserFeatureValue",namespace:"users"}}}],stone_type:"struct"}}}},KO4V:function(e,t,i){"use strict";t.a={sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AclUpdatePolicy:{description:"Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.",fields:[{description:"Only the owner can update the ACL.",parameter:"owner",type:{primitive:"Void"}},{description:"Any editor can update the ACL. This may be further restricted to editors on the same team.",parameter:"editors",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AudienceExceptionContentInfo:{description:"Information about the content that has a link audience different than that of this folder.",fields:[{description:"The name of the content, which is either a file or a folder.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},AudienceExceptions:{description:"The total count and truncated list of information of content inside this folder that has a different audience than the link on this folder. This is only returned for folders.",fields:[{parameter:"count",type:{primitive:"UInt32"}},{description:"A truncated list of some of the content that is an exception. The length of this list could be smaller than the count since it is only a sample but will not be empty as long as count is not 0.",parameter:"exceptions",type:{list:{datatype:"AudienceExceptionContentInfo",namespace:"sharing"}}}],stone_type:"struct"},AudienceRestrictingSharedFolder:{description:"Information about the shared folder that prevents the link audience for this link from being more restrictive.",fields:[{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The name of the shared folder.",parameter:"name",type:{primitive:"String"}},{description:"The link audience of the shared folder.",parameter:"audience",type:{datatype:"LinkAudience",namespace:"sharing"}}],stone_type:"struct"},ExpectedSharedContentLinkMetadata:{description:"The expected metadata of a shared link for a file or folder when a link is first created for the content. Absent if the link already exists.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileAction:{description:"Sharing actions that may be taken on files.",fields:[{description:"Disable viewer information on the file.",parameter:"disable_viewer_info",type:{primitive:"Void"}},{description:"Change or edit contents of the file.",parameter:"edit_contents",type:{primitive:"Void"}},{description:"Enable viewer information on the file.",parameter:"enable_viewer_info",type:{primitive:"Void"}},{description:"Add a member with view permissions.",parameter:"invite_viewer",type:{primitive:"Void"}},{description:"Add a member with view permissions but no comment permissions.",parameter:"invite_viewer_no_comment",type:{primitive:"Void"}},{description:"Add a member with edit permissions.",parameter:"invite_editor",type:{primitive:"Void"}},{description:"Stop sharing this file.",parameter:"unshare",type:{primitive:"Void"}},{description:"Relinquish one's own membership to the file.",parameter:"relinquish_membership",type:{primitive:"Void"}},{description:"Use create_view_link and create_edit_link instead.",parameter:"share_link",type:{primitive:"Void"}},{description:"Use create_view_link and create_edit_link instead.",parameter:"create_link",type:{primitive:"Void"}},{description:"Create a shared link to a file that only allows users to view the content.",parameter:"create_view_link",type:{primitive:"Void"}},{description:"Create a shared link to a file that allows users to edit the content.",parameter:"create_edit_link",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FilePermission:{description:"Whether the user is allowed to take the sharing action on the file.",fields:[{description:"The action that the user may wish to take on the file.",parameter:"action",type:{datatype:"FileAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},FolderPolicy:{description:"A set of policies governing membership and privileges for a shared folder.",fields:[{description:"Who can add and remove members from this shared folder.",parameter:"acl_update_policy",type:{datatype:"AclUpdatePolicy",namespace:"sharing"}},{description:"Who links can be shared with.",parameter:"shared_link_policy",type:{datatype:"SharedLinkPolicy",namespace:"sharing"}},{description:"Who can be a member of this shared folder, as set on the folder itself. The effective policy may differ from this value if the team-wide policy is more restrictive. Present only if the folder is owned by a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can be a member of this shared folder, taking into account both the folder and the team-wide policy. This value may differ from that of member_policy if the team-wide policy is more restrictive than the folder policy. Present only if the folder is owned by a team.",parameter:"resolved_member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAction:{description:"Actions that can be performed on a link.",fields:[{description:"Change the access level of the link.",parameter:"change_access_level",type:{primitive:"Void"}},{description:"Change the audience of the link.",parameter:"change_audience",type:{primitive:"Void"}},{description:"Remove the expiry date of the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Remove the password of the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Create or modify the expiry date of the link.",parameter:"set_expiry",type:{primitive:"Void"}},{description:"Create or modify the password of the link.",parameter:"set_password",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermission:{description:"Permissions for actions that can be performed on a link.",fields:[{parameter:"action",type:{datatype:"LinkAction",namespace:"sharing"}},{parameter:"allow",type:{primitive:"Boolean"}},{parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},ListFilesArg:{description:"Arguments for :route:`list_received_files`.",fields:[{description:"Number of files to return max per query. Defaults to 100 if no limit is specified.",parameter:"limit",type:{primitive:"UInt32"}},{description:"A list of `FileAction`s corresponding to `FilePermission`s that should appear in the  response's :field:`SharedFileMetadata.permissions` field describing the actions the  authenticated user can perform on the file.",parameter:"actions",type:{optional:{list:{datatype:"FileAction",namespace:"sharing"}}}}],stone_type:"struct"},ListFilesResult:{description:"Success results for :route:`list_received_files`.",fields:[{description:"Information about the files shared with current user.",parameter:"entries",type:{list:{datatype:"SharedFileMetadata",namespace:"sharing"}}},{description:"Cursor used to obtain additional shared files.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberPolicy:{description:"Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.",fields:[{description:"Only a teammate can become a member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can become a member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedContentLinkMetadata:{description:"Metadata of a shared link for a file or folder.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The URL of the link.",parameter:"url",type:{primitive:"String"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}},{description:"The content inside this folder with link audience different than this folder's. This is only returned when an endpoint that returns metadata for a single shared folder is called, e.g. /get_folder_metadata.",parameter:"audience_exceptions",type:{optional:{datatype:"AudienceExceptions",namespace:"sharing"}}}],stone_type:"struct"},SharedFileMetadata:{description:"Properties of the shared file.",fields:[{description:"The ID of the file.",parameter:"id",type:{primitive:"String"}},{description:"The name of this file.",parameter:"name",type:{primitive:"String"}},{description:"Policies governing this shared file.",parameter:"policy",type:{datatype:"FolderPolicy",namespace:"sharing"}},{description:"URL for displaying a web preview of the shared file.",parameter:"preview_url",type:{primitive:"String"}},{description:"The current user's access level for this shared file.",parameter:"access_type",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The expected metadata of the link associated for the file when it is first shared. Absent if the link already exists. This is for an unreleased feature so it may not be returned yet.",parameter:"expected_link_metadata",type:{optional:{datatype:"ExpectedSharedContentLinkMetadata",namespace:"sharing"}}},{description:"The metadata of the link associated for the file. This is for an unreleased feature so it may not be returned yet.",parameter:"link_metadata",type:{optional:{datatype:"SharedContentLinkMetadata",namespace:"sharing"}}},{description:"The display names of the users that own the file. If the file is part of a team folder, the display names of the team admins are also included. Absent if the owner display names cannot be fetched.",parameter:"owner_display_names",type:{optional:{list:{primitive:"String"}}}},{description:"The team that owns the file. This field is not present if the file is not owned by a team.",parameter:"owner_team",type:{optional:{datatype:"Team",namespace:"users"}}},{description:"The ID of the parent shared folder. This field is present only if the file is contained within a shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1. Absent for unmounted files.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"The lower-case full path of this file. Absent for unmounted files.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The sharing permissions that requesting user has on this file. This corresponds to the entries given in :field:`GetFileMetadataBatchArg.actions` or :field:`GetFileMetadataArg.actions`.",parameter:"permissions",type:{optional:{list:{datatype:"FilePermission",namespace:"sharing"}}}},{description:"Timestamp indicating when the current user was invited to this shared file. If the user was not invited to the shared file, the timestamp will indicate when the user was invited to the parent shared folder. This value may be absent.",parameter:"time_invited",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},SharedLinkPolicy:{description:"Who can view shared links in this folder.",fields:[{description:"Links can be shared with anyone.",parameter:"anyone",type:{primitive:"Void"}},{description:"Links can be shared with anyone on the same team as the owner.",parameter:"team",type:{primitive:"Void"}},{description:"Links can only be shared among members of the shared folder.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingUserError:{description:"User account had a problem preventing this action.",fields:[{description:"The current user must verify the account e-mail address before performing this action.",parameter:"email_unverified",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ViewerInfoPolicy:{fields:[{description:"Viewer information is available on this file.",parameter:"enabled",type:{primitive:"Void"}},{description:"Viewer information is disabled on this file.",parameter:"disabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},KQbX:function(e,t,i){"use strict";t.a={files:{ContentSyncSetting:{fields:[{description:"Id of the item this setting is applied to.",parameter:"id",type:{primitive:"String"}},{description:"Setting for this item.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}}],stone_type:"struct"},ContentSyncSettingArg:{fields:[{description:"Id of the item this setting is applied to.",parameter:"id",type:{primitive:"String"}},{description:"Setting for this item.",parameter:"sync_setting",type:{datatype:"SyncSettingArg",namespace:"files"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SyncSetting:{fields:[{description:"On first sync to members' computers, the specified folder will follow its parent folder's setting or otherwise follow default sync behavior.",parameter:"default",type:{primitive:"Void"}},{description:"On first sync to members' computers, the specified folder will be set to not sync with selective sync.",parameter:"not_synced",type:{primitive:"Void"}},{description:"The specified folder's not_synced setting is inactive due to its location or other configuration changes. It will follow its parent folder's setting.",parameter:"not_synced_inactive",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SyncSettingArg:{fields:[{description:"On first sync to members' computers, the specified folder will follow its parent folder's setting or otherwise follow default sync behavior.",parameter:"default",type:{primitive:"Void"}},{description:"On first sync to members' computers, the specified folder will be set to not sync with selective sync.",parameter:"not_synced",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SyncSettingsError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{description:"Setting this combination of sync settings simultaneously is not supported.",parameter:"unsupported_combination",type:{primitive:"Void"}},{description:"The specified configuration is not supported.",parameter:"unsupported_configuration",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},team:{TeamFolderAccessError:{fields:[{description:"The team folder ID is invalid.",parameter:"invalid_team_folder_id",type:{primitive:"Void"}},{description:"The authenticated app does not have permission to manage that team folder.",parameter:"no_access",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderInvalidStatusError:{fields:[{description:"The folder is active and the operation did not succeed.",parameter:"active",type:{primitive:"Void"}},{description:"The folder is archived and the operation did not succeed.",parameter:"archived",type:{primitive:"Void"}},{description:"The folder is being archived and the operation did not succeed.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderMetadata:{description:"Properties of a team folder.",fields:[{description:"The ID of the team folder.",parameter:"team_folder_id",type:{primitive:"String"}},{description:"The name of the team folder.",parameter:"name",type:{primitive:"String"}},{description:"The status of the team folder.",parameter:"status",type:{datatype:"TeamFolderStatus",namespace:"team"}},{description:"True if this team folder is a shared team root.",parameter:"is_team_shared_dropbox",type:{primitive:"Boolean"}},{description:"The sync setting applied to this team folder.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}},{description:"Sync settings applied to contents of this team folder.",parameter:"content_sync_settings",type:{list:{datatype:"ContentSyncSetting",namespace:"files"}}}],stone_type:"struct"},TeamFolderStatus:{fields:[{description:"The team folder and sub-folders are available to all members.",parameter:"active",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archived",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderTeamSharedDropboxError:{fields:[{description:"This action is not allowed for a shared team root.",parameter:"disallowed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderUpdateSyncSettingsArg:{fields:[{description:"The ID of the team folder.",parameter:"team_folder_id",type:{primitive:"String"}},{description:"Sync setting to apply to the team folder itself. Only meaningful if the team folder is not a shared team root.",parameter:"sync_setting",type:{optional:{datatype:"SyncSettingArg",namespace:"files"}}},{description:"Sync settings to apply to contents of this team folder.",parameter:"content_sync_settings",type:{optional:{list:{datatype:"ContentSyncSettingArg",namespace:"files"}}}}],stone_type:"struct"},TeamFolderUpdateSyncSettingsError:{fields:[{parameter:"access_error",type:{datatype:"TeamFolderAccessError",namespace:"team"}},{parameter:"status_error",type:{datatype:"TeamFolderInvalidStatusError",namespace:"team"}},{parameter:"team_shared_dropbox_error",type:{datatype:"TeamFolderTeamSharedDropboxError",namespace:"team"}},{parameter:"other",type:{primitive:"Void"}},{description:"An error occurred setting the sync settings.",parameter:"sync_settings_error",type:{datatype:"SyncSettingsError",namespace:"files"}}],stone_type:"open_union"}}}},Kb9k:function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},file_properties:{InvalidPropertyGroupError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{parameter:"path",type:{datatype:"LookupError",namespace:"file_properties"}},{description:"This folder cannot be tagged. Tagging folders is not supported for team-owned templates.",parameter:"unsupported_folder",type:{primitive:"Void"}},{description:"One or more of the supplied property field values is too large.",parameter:"property_field_too_large",type:{primitive:"Void"}},{description:"One or more of the supplied property fields does not conform to the template specifications.",parameter:"does_not_fit_template",type:{primitive:"Void"}},{description:"There are 2 or more property groups referring to the same templates in the input.",parameter:"duplicate_property_groups",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{parameter:"malformed_path",type:{primitive:"String"}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"},UploadSessionFinishBatchJobStatus:{fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The :route:`upload_session/finish_batch` has finished.",parameter:"complete",type:{datatype:"UploadSessionFinishBatchResult",namespace:"files"}}],stone_type:"union"},UploadSessionFinishBatchResult:{fields:[{description:"Each entry in :field:`UploadSessionFinishBatchArg.entries` will appear at the same position inside :field:`UploadSessionFinishBatchResult.entries`.",parameter:"entries",type:{list:{datatype:"UploadSessionFinishBatchResultEntry",namespace:"files"}}}],stone_type:"struct"},UploadSessionFinishBatchResultEntry:{fields:[{parameter:"success",type:{datatype:"FileMetadata",namespace:"files"}},{parameter:"failure",type:{datatype:"UploadSessionFinishError",namespace:"files"}}],stone_type:"union"},UploadSessionFinishError:{fields:[{description:"The session arguments are incorrect; the value explains the reason.",parameter:"lookup_failed",type:{datatype:"UploadSessionLookupError",namespace:"files"}},{description:"Unable to save the uploaded contents to a file. Data has already been appended to the upload session. Please retry with empty data body and updated offset.",parameter:"path",type:{datatype:"WriteError",namespace:"files"}},{description:"The supplied property group is invalid. The file has uploaded without property groups.",parameter:"properties_error",type:{datatype:"InvalidPropertyGroupError",namespace:"file_properties"}},{description:"The batch request commits files into too many different shared folders. Please limit your batch request to files contained in a single shared folder.",parameter:"too_many_shared_folder_targets",type:{primitive:"Void"}},{description:"There are too many write operations happening in the user's Dropbox. You should retry uploading this file.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UploadSessionLookupError:{fields:[{description:"The upload session ID was not found or has expired. Upload sessions are valid for 48 hours.",parameter:"not_found",type:{primitive:"Void"}},{description:"The specified offset was incorrect. See the value for the correct offset. This error may occur when a previous request was received and processed successfully but the client did not receive the response, e.g. due to a network error.",parameter:"incorrect_offset",type:{datatype:"UploadSessionOffsetError",namespace:"files"}},{description:"You are attempting to append data to an upload session that has already been closed (i.e. committed).",parameter:"closed",type:{primitive:"Void"}},{description:"The session must be closed before calling upload_session/finish_batch.",parameter:"not_closed",type:{primitive:"Void"}},{description:"You can not append to the upload session because the size of a file should not reach the max file size limit (i.e. 350GB).",parameter:"too_large",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UploadSessionOffsetError:{fields:[{description:"The offset up to which data has been collected.",parameter:"correct_offset",type:{primitive:"UInt64"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},Kc1X:function(e,t,i){"use strict";t.a={cloud_docs:{GenericErrorTag:{fields:[{description:"Invalid argument supplied.",parameter:"invalid_argument",type:{primitive:"Void"}},{description:"User is unauthenticated.",parameter:"unauthenticated",type:{primitive:"Void"}},{description:"User does not have access to the specified doc.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"Doc could not be found based on the supplied doc ID.",parameter:"doc_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GetMetadataArg:{fields:[{description:'API ID ("id:...") associated with the Cloud Doc.',parameter:"file_id",type:{primitive:"String"}}],stone_type:"struct"},GetMetadataError:{fields:[{parameter:"get_metadata_error_tag",type:{optional:{datatype:"get_metadata_error_tag_union",namespace:"cloud_docs"}}}],stone_type:"struct"},GetMetadataResult:{fields:[{parameter:"file_id",type:{primitive:"String"}},{description:"Title of the Cloud Doc without extension.",parameter:"title",type:{primitive:"String"}},{description:"MIME type of the Cloud Doc.",parameter:"mime_type",type:{primitive:"String"}},{description:"Opaque string representing the version of the document stored in Dropbox (only set for Dropbox-stored Documents).",parameter:"version",type:{primitive:"String"}},{description:"Application specific string representing the revision of a document (only set for App-stored Documents).",parameter:"provider_version",type:{primitive:"String"}},{description:"User identified by the auth token.",parameter:"user",type:{optional:{datatype:"UserInfo",namespace:"cloud_docs"}}},{description:"true if the document is deleted or purged.",parameter:"is_deleted",type:{primitive:"Boolean"}},{description:"Actions that the user identified by the auth token can performn. This message will not be populated for deleted documents.",parameter:"user_permissions",type:{optional:{datatype:"UserPermissions",namespace:"cloud_docs"}}}],stone_type:"struct"},UserInfo:{fields:[{description:"ID associated with the user.",parameter:"id",type:{primitive:"String"}},{description:"Email associated with the user.",parameter:"email",type:{primitive:"String"}}],stone_type:"struct"},UserPermissions:{fields:[{description:"true if the user can edit the content of this document",parameter:"can_edit",type:{primitive:"Boolean"}},{description:"true if the user can edit the title of this document",parameter:"can_rename",type:{primitive:"Boolean"}},{description:"true if the user can comment on this document",parameter:"can_comment",type:{primitive:"Boolean"}},{description:"true if the user can download the contents of this document. currently always true if the user has view access to the document.",parameter:"can_download",type:{primitive:"Boolean"}}],stone_type:"struct"},get_metadata_error_tag_union:{fields:[{parameter:"generic_error",type:{datatype:"GenericErrorTag",namespace:"cloud_docs"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},Kesh:function(e,t,i){"use strict";t.a={file_requests:{FileRequest:{description:"A :link:`file request https://www.dropbox.com/help/9090` for receiving files into the user's Dropbox account.",fields:[{description:"The ID of the file request.",parameter:"id",type:{primitive:"String"}},{description:"The URL of the file request.",parameter:"url",type:{primitive:"String"}},{description:"The title of the file request.",parameter:"title",type:{primitive:"String"}},{description:"When this file request was created.",parameter:"created",type:{primitive:"Timestamp"}},{description:"Whether or not the file request is open. If the file request is closed, it will not accept any more file submissions.",parameter:"is_open",type:{primitive:"Boolean"}},{description:"The number of files this file request has received.",parameter:"file_count",type:{primitive:"Int64"}},{description:"The path of the folder in the Dropbox where uploaded files will be sent. This can be :val:`null` if the destination was removed. For apps with the app folder permission, this will be relative to the app folder.",parameter:"destination",type:{optional:{primitive:"String"}}},{description:"The deadline for this file request. Only set if the request has a deadline.",parameter:"deadline",type:{optional:{datatype:"FileRequestDeadline",namespace:"file_requests"}}}],stone_type:"struct"},FileRequestDeadline:{fields:[{description:"The deadline for this file request.",parameter:"deadline",type:{primitive:"Timestamp"}},{description:"If set, allow uploads after the deadline has passed. These     uploads will be marked overdue.",parameter:"allow_late_uploads",type:{optional:{datatype:"GracePeriod",namespace:"file_requests"}}}],stone_type:"struct"},GracePeriod:{fields:[{parameter:"one_day",type:{primitive:"Void"}},{parameter:"two_days",type:{primitive:"Void"}},{parameter:"seven_days",type:{primitive:"Void"}},{parameter:"thirty_days",type:{primitive:"Void"}},{parameter:"always",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListFileRequestsArg:{description:"Arguments for :route:`list:2`.",fields:[{description:"The maximum number of file requests that should be returned per request.",parameter:"limit",type:{primitive:"UInt64"}}],stone_type:"struct"},ListFileRequestsError:{description:"There was an error retrieving the file requests.",fields:[{description:"This user's Dropbox Business team doesn't allow file requests.",parameter:"disabled_for_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListFileRequestsV2Result:{description:"Result for :route:`list:2` and :route:`list/continue`.",fields:[{description:"The file requests owned by this user. Apps with the app folder permission will only see file requests in their app folder.",parameter:"file_requests",type:{list:{datatype:"FileRequest",namespace:"file_requests"}}},{description:"Pass the cursor into :route:`list/continue` to obtain additional file requests.",parameter:"cursor",type:{primitive:"String"}},{description:"Is true if there are additional file requests that have not been returned yet. An additional call to :route:list/continue` can retrieve them.",parameter:"has_more",type:{primitive:"Boolean"}}],stone_type:"struct"}}}},"KjZ+":function(e,t,i){var r=i("s3UK").Uint8Array;e.exports=r},"Kn+0":function(e,t,i){e.exports=function(){var e=!1;-1!==navigator.appVersion.indexOf("MSIE 10")&&(e=!0);var t,i=[],r="object"==typeof document&&document,o=e?r.documentElement.doScroll("left"):r.documentElement.doScroll,a=r&&(o?/^loaded|^c/:/^loaded|^i|^c/).test(r.readyState);return!a&&r&&r.addEventListener("DOMContentLoaded",t=function(){for(r.removeEventListener("DOMContentLoaded",t),a=1;t=i.shift();)t()}),function(e){a?setTimeout(e,0):i.push(e)}}()},KniS:function(e,t,i){"use strict";t.a={file_properties:{RemoveTemplateArg:{fields:[{description:"An identifier for a template created by :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}}],stone_type:"struct"},TemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"Kp+s":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("CO6n"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},KtJs:function(e,t,i){"use strict";t.a={files:{ContentSyncSetting:{fields:[{description:"Id of the item this setting is applied to.",parameter:"id",type:{primitive:"String"}},{description:"Setting for this item.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}}],stone_type:"struct"},SyncSetting:{fields:[{description:"On first sync to members' computers, the specified folder will follow its parent folder's setting or otherwise follow default sync behavior.",parameter:"default",type:{primitive:"Void"}},{description:"On first sync to members' computers, the specified folder will be set to not sync with selective sync.",parameter:"not_synced",type:{primitive:"Void"}},{description:"The specified folder's not_synced setting is inactive due to its location or other configuration changes. It will follow its parent folder's setting.",parameter:"not_synced_inactive",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},team:{TeamFolderAccessError:{fields:[{description:"The team folder ID is invalid.",parameter:"invalid_team_folder_id",type:{primitive:"Void"}},{description:"The authenticated app does not have permission to manage that team folder.",parameter:"no_access",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderActivateError:{description:"",fields:[{parameter:"access_error",type:{datatype:"TeamFolderAccessError",namespace:"team"}},{parameter:"status_error",type:{datatype:"TeamFolderInvalidStatusError",namespace:"team"}},{parameter:"team_shared_dropbox_error",type:{datatype:"TeamFolderTeamSharedDropboxError",namespace:"team"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderIdArg:{fields:[{description:"The ID of the team folder.",parameter:"team_folder_id",type:{primitive:"String"}}],stone_type:"struct"},TeamFolderInvalidStatusError:{fields:[{description:"The folder is active and the operation did not succeed.",parameter:"active",type:{primitive:"Void"}},{description:"The folder is archived and the operation did not succeed.",parameter:"archived",type:{primitive:"Void"}},{description:"The folder is being archived and the operation did not succeed.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderMetadata:{description:"Properties of a team folder.",fields:[{description:"The ID of the team folder.",parameter:"team_folder_id",type:{primitive:"String"}},{description:"The name of the team folder.",parameter:"name",type:{primitive:"String"}},{description:"The status of the team folder.",parameter:"status",type:{datatype:"TeamFolderStatus",namespace:"team"}},{description:"True if this team folder is a shared team root.",parameter:"is_team_shared_dropbox",type:{primitive:"Boolean"}},{description:"The sync setting applied to this team folder.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}},{description:"Sync settings applied to contents of this team folder.",parameter:"content_sync_settings",type:{list:{datatype:"ContentSyncSetting",namespace:"files"}}}],stone_type:"struct"},TeamFolderStatus:{fields:[{description:"The team folder and sub-folders are available to all members.",parameter:"active",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archived",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderTeamSharedDropboxError:{fields:[{description:"This action is not allowed for a shared team root.",parameter:"disallowed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},L0iU:function(e,t,i){"use strict";t.a={cloud_docs:{CloudDocsAccessError:{fields:[{description:"The Cloud Doc ID is invalid.",parameter:"invalid_doc_id",type:{primitive:"Void"}},{description:"A Cloud Doc could not be found for the given ID.",parameter:"not_found",type:{primitive:"Void"}},{description:"Permission denied for the Cloud Doc with the given ID.",parameter:"permission_denied",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GetContentArg:{fields:[{parameter:"file_id",type:{primitive:"String"}}],stone_type:"struct"}}}},L9MB:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("0njP"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},LBQr:function(e,t,i){var r=i("SHde")(Object.getPrototypeOf,Object);e.exports=r},LF0y:function(e,t,i){var r=i("UzdM");e.exports=function(e){var t=r(e),i=t%1;return t==t?i?t-i:t:0}},LQnX:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("VXnV"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},LSEb:function(e,t,i){var r=i("Yzgk"),o=i("X/0h");e.exports=function(e,t){var i=o(e,t);return r(i)?i:void 0}},Lalj:function(e,t,i){var r=i("jL4t"),o=i("MQuF"),a=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return o(e);var t=[];for(var i in Object(e))a.call(e,i)&&"constructor"!=i&&t.push(i);return t}},LcPu:function(e,t,i){"use strict";i.r(t),i.d(t,"Helmet",(function(){return O})),i.d(t,"HelmetProvider",(function(){return R}));var r=i("2Hgx"),o=i.n(r),a=i("+Ltg"),n=i.n(a),s=i("W0B4"),p=i.n(s),d=i("mXGw"),l=i.n(d),m=i("F56x"),c=i.n(m),h={BASE:"base",BODY:"body",HEAD:"head",HTML:"html",LINK:"link",META:"meta",NOSCRIPT:"noscript",SCRIPT:"script",STYLE:"style",TITLE:"title",FRAGMENT:"Symbol(react.fragment)"},u=Object.keys(h).map((function(e){return h[e]})),f={accesskey:"accessKey",charset:"charSet",class:"className",contenteditable:"contentEditable",contextmenu:"contextMenu","http-equiv":"httpEquiv",itemprop:"itemProp",tabindex:"tabIndex"},y=Object.keys(f).reduce((function(e,t){return e[f[t]]=t,e}),{}),v=function(e,t){for(var i=e.length-1;i>=0;i-=1){var r=e[i];if(Object.prototype.hasOwnProperty.call(r,t))return r[t]}return null},_=function(e){var t=v(e,h.TITLE),i=v(e,"titleTemplate");if(Array.isArray(t)&&(t=t.join("")),i&&t)return i.replace(/%s/g,(function(){return t}));var r=v(e,"defaultTitle");return t||r||void 0},g=function(e){return v(e,"onChangeClientState")||function(){}},b=function(e,t){return t.filter((function(t){return void 0!==t[e]})).map((function(t){return t[e]})).reduce((function(e,t){return Object.assign({},e,t)}),{})},w=function(e,t){return t.filter((function(e){return void 0!==e[h.BASE]})).map((function(e){return e[h.BASE]})).reverse().reduce((function(t,i){if(!t.length)for(var r=Object.keys(i),o=0;o<r.length;o+=1){var a=r[o].toLowerCase();if(-1!==e.indexOf(a)&&i[a])return t.concat(i)}return t}),[])},T=function(e,t,i){var r={};return i.filter((function(t){return!!Array.isArray(t[e])||(void 0!==t[e]&&console&&"function"==typeof console.warn&&console.warn("Helmet: "+e+' should be of type "Array". Instead found type "'+typeof t[e]+'"'),!1)})).map((function(t){return t[e]})).reverse().reduce((function(e,i){var o={};i.filter((function(e){for(var i,a=Object.keys(e),n=0;n<a.length;n+=1){var s=a[n],p=s.toLowerCase();-1===t.indexOf(p)||"rel"===i&&"canonical"===e[i].toLowerCase()||"rel"===p&&"stylesheet"===e[p].toLowerCase()||(i=p),-1===t.indexOf(s)||"innerHTML"!==s&&"cssText"!==s&&"itemprop"!==s||(i=s)}if(!i||!e[i])return!1;var d=e[i].toLowerCase();return r[i]||(r[i]={}),o[i]||(o[i]={}),!r[i][d]&&(o[i][d]=!0,!0)})).reverse().forEach((function(t){return e.push(t)}));for(var a=Object.keys(o),n=0;n<a.length;n+=1){var s=a[n],p=Object.assign({},r[s],o[s]);r[s]=p}return e}),[]).reverse()},V=function(e){return Array.isArray(e)?e.join(""):e},k=[h.NOSCRIPT,h.SCRIPT,h.STYLE],S=function(e,t){return void 0===t&&(t=!0),!1===t?String(e):String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")},x=function(e){return Object.keys(e).reduce((function(t,i){var r=void 0!==e[i]?i+'="'+e[i]+'"':""+i;return t?t+" "+r:r}),"")},A=function(e,t){return void 0===t&&(t={}),Object.keys(e).reduce((function(t,i){return t[f[i]||i]=e[i],t}),t)},P=function(e,t,i){switch(e){case h.TITLE:return{toComponent:function(){return i=A(t.titleAttributes,{key:e=t.title,"data-rh":!0}),[l.a.createElement(h.TITLE,i,e)];var e,i},toString:function(){return function(e,i,r,o){var a=x(t.titleAttributes),n=V(i);return a?"<"+e+' data-rh="true" '+a+">"+S(n,o)+"</"+e+">":"<"+e+' data-rh="true">'+S(n,o)+"</"+e+">"}(e,t.title,0,i)}};case"bodyAttributes":case"htmlAttributes":return{toComponent:function(){return A(t)},toString:function(){return x(t)}};default:return{toComponent:function(){return function(e,t){return t.map((function(t,i){var r={key:i,"data-rh":!0};return Object.keys(t).forEach((function(e){var i=f[e]||e;"innerHTML"===i||"cssText"===i?r.dangerouslySetInnerHTML={__html:t.innerHTML||t.cssText}:r[i]=t[e]})),l.a.createElement(e,r)}))}(e,t)},toString:function(){return function(e,t,i){return t.reduce((function(t,r){var o=Object.keys(r).filter((function(e){return!("innerHTML"===e||"cssText"===e)})).reduce((function(e,t){var o=void 0===r[t]?t:t+'="'+S(r[t],i)+'"';return e?e+" "+o:o}),""),a=r.innerHTML||r.cssText||"",n=-1===k.indexOf(e);return t+"<"+e+' data-rh="true" '+o+(n?"/>":">"+a+"</"+e+">")}),"")}(e,t,i)}}}},D=function(e){var t=e.bodyAttributes,i=e.encode,r=e.htmlAttributes,o=e.linkTags,a=e.metaTags,n=e.noscriptTags,s=e.scriptTags,p=e.styleTags,d=e.title;void 0===d&&(d="");var l=e.titleAttributes;return{base:P(h.BASE,e.baseTag,i),bodyAttributes:P("bodyAttributes",t,i),htmlAttributes:P("htmlAttributes",r,i),link:P(h.LINK,o,i),meta:P(h.META,a,i),noscript:P(h.NOSCRIPT,n,i),script:P(h.SCRIPT,s,i),style:P(h.STYLE,p,i),title:P(h.TITLE,{title:d,titleAttributes:l},i)}},I=l.a.createContext({}),E=p.a.shape({setHelmet:p.a.func,helmetInstances:p.a.shape({get:p.a.func,add:p.a.func,remove:p.a.func})}),L="undefined"!=typeof document,R=function(e){function t(i){var r=this;e.call(this,i),this.instances=[],this.value={setHelmet:function(e){r.props.context.helmet=e},helmetInstances:{get:function(){return r.instances},add:function(e){r.instances.push(e)},remove:function(e){var t=r.instances.indexOf(e);r.instances.splice(t,1)}}},t.canUseDOM||(i.context.helmet=D({baseTag:[],bodyAttributes:{},encodeSpecialCharacters:!0,htmlAttributes:{},linkTags:[],metaTags:[],noscriptTags:[],scriptTags:[],styleTags:[],title:"",titleAttributes:{}}))}return e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t,t.prototype.render=function(){return l.a.createElement(I.Provider,{value:this.value},this.props.children)},t}(d.Component);R.canUseDOM=L,R.propTypes={context:p.a.shape({helmet:p.a.shape()}),children:p.a.node.isRequired},R.defaultProps={context:{}},R.displayName="HelmetProvider";var M=function(e,t){var i,r=document.head||document.querySelector(h.HEAD),o=r.querySelectorAll(e+"[data-rh]"),a=[].slice.call(o),n=[];return t&&t.length&&t.forEach((function(t){var r=document.createElement(e);for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&("innerHTML"===o?r.innerHTML=t.innerHTML:"cssText"===o?r.styleSheet?r.styleSheet.cssText=t.cssText:r.appendChild(document.createTextNode(t.cssText)):r.setAttribute(o,void 0===t[o]?"":t[o]));r.setAttribute("data-rh","true"),a.some((function(e,t){return i=t,r.isEqualNode(e)}))?a.splice(i,1):n.push(r)})),a.forEach((function(e){return e.parentNode.removeChild(e)})),n.forEach((function(e){return r.appendChild(e)})),{oldTags:a,newTags:n}},F=function(e,t){var i=document.getElementsByTagName(e)[0];if(i){for(var r=i.getAttribute("data-rh"),o=r?r.split(","):[],a=[].concat(o),n=Object.keys(t),s=0;s<n.length;s+=1){var p=n[s],d=t[p]||"";i.getAttribute(p)!==d&&i.setAttribute(p,d),-1===o.indexOf(p)&&o.push(p);var l=a.indexOf(p);-1!==l&&a.splice(l,1)}for(var m=a.length-1;m>=0;m-=1)i.removeAttribute(a[m]);o.length===a.length?i.removeAttribute("data-rh"):i.getAttribute("data-rh")!==n.join(",")&&i.setAttribute("data-rh",n.join(","))}},q=function(e,t){var i=e.baseTag,r=e.htmlAttributes,o=e.linkTags,a=e.metaTags,n=e.noscriptTags,s=e.onChangeClientState,p=e.scriptTags,d=e.styleTags,l=e.title,m=e.titleAttributes;F(h.BODY,e.bodyAttributes),F(h.HTML,r),function(e,t){void 0!==e&&document.title!==e&&(document.title=V(e)),F(h.TITLE,t)}(l,m);var c={baseTag:M(h.BASE,i),linkTags:M(h.LINK,o),metaTags:M(h.META,a),noscriptTags:M(h.NOSCRIPT,n),scriptTags:M(h.SCRIPT,p),styleTags:M(h.STYLE,d)},u={},f={};Object.keys(c).forEach((function(e){var t=c[e],i=t.newTags,r=t.oldTags;i.length&&(u[e]=i),r.length&&(f[e]=c[e].oldTags)})),t&&t(),s(e,u,f)},U=null,C=function(e){function t(){for(var t=[],i=arguments.length;i--;)t[i]=arguments[i];e.apply(this,t),this.rendered=!1}return e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t,t.prototype.shouldComponentUpdate=function(e){return!c()(e,this.props)},t.prototype.componentDidUpdate=function(){this.emitChange()},t.prototype.componentWillUnmount=function(){this.props.context.helmetInstances.remove(this),this.emitChange()},t.prototype.emitChange=function(){var e,t,i=this.props.context,r=i.setHelmet,o=null,a=(e=i.helmetInstances.get().map((function(e){var t=Object.assign({},e.props);return delete t.context,t})),{baseTag:w(["href"],e),bodyAttributes:b("bodyAttributes",e),defer:v(e,"defer"),encode:v(e,"encodeSpecialCharacters"),htmlAttributes:b("htmlAttributes",e),linkTags:T(h.LINK,["rel","href"],e),metaTags:T(h.META,["name","charset","http-equiv","property","itemprop"],e),noscriptTags:T(h.NOSCRIPT,["innerHTML"],e),onChangeClientState:g(e),scriptTags:T(h.SCRIPT,["src","innerHTML"],e),styleTags:T(h.STYLE,["cssText"],e),title:_(e),titleAttributes:b("titleAttributes",e)});R.canUseDOM?(t=a,U&&cancelAnimationFrame(U),t.defer?U=requestAnimationFrame((function(){q(t,(function(){U=null}))})):(q(t),U=null)):D&&(o=D(a)),r(o)},t.prototype.init=function(){this.rendered||(this.rendered=!0,this.props.context.helmetInstances.add(this),this.emitChange())},t.prototype.render=function(){return this.init(),null},t}(d.Component);function j(e,t){var i={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(i[r]=e[r]);return i}C.propTypes={context:E.isRequired},C.displayName="HelmetDispatcher";var O=function(e){function t(){e.apply(this,arguments)}return e&&(t.__proto__=e),(t.prototype=Object.create(e&&e.prototype)).constructor=t,t.prototype.shouldComponentUpdate=function(e){return!o()(this.props,e)},t.prototype.mapNestedChildrenToProps=function(e,t){if(!t)return null;switch(e.type){case h.SCRIPT:case h.NOSCRIPT:return{innerHTML:t};case h.STYLE:return{cssText:t};default:throw new Error("<"+e.type+" /> elements are self-closing and can not contain children. Refer to our API for more information.")}},t.prototype.flattenArrayTypeChildren=function(e){var t,i=e.child,r=e.arrayTypeChildren;return Object.assign({},r,((t={})[i.type]=(r[i.type]||[]).concat([Object.assign({},e.newChildProps,this.mapNestedChildrenToProps(i,e.nestedChildren))]),t))},t.prototype.mapObjectTypeChildren=function(e){var t,i,r=e.child,o=e.newProps,a=e.newChildProps,n=e.nestedChildren;switch(r.type){case h.TITLE:return Object.assign({},o,((t={})[r.type]=n,t),{titleAttributes:Object.assign({},a)});case h.BODY:return Object.assign({},o,{bodyAttributes:Object.assign({},a)});case h.HTML:return Object.assign({},o,{htmlAttributes:Object.assign({},a)});default:return Object.assign({},o,((i={})[r.type]=Object.assign({},a),i))}},t.prototype.mapArrayTypeChildrenToProps=function(e,t){var i=Object.assign({},t);return Object.keys(e).forEach((function(t){var r;i=Object.assign({},i,((r={})[t]=e[t],r))})),i},t.prototype.warnOnInvalidChildren=function(e,t){return n()(u.some((function(t){return e.type===t})),"function"==typeof e.type?"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.":"Only elements types "+u.join(", ")+" are allowed. Helmet does not support rendering <"+e.type+"> elements. Refer to our API for more information."),n()(!t||"string"==typeof t||Array.isArray(t)&&!t.some((function(e){return"string"!=typeof e})),"Helmet expects a string as a child of <"+e.type+">. Did you forget to wrap your children in braces? ( <"+e.type+">{``}</"+e.type+"> ) Refer to our API for more information."),!0},t.prototype.mapChildrenToProps=function(e,t){var i=this,r={};return l.a.Children.forEach(e,(function(e){if(e&&e.props){var o=e.props,a=o.children,n=j(o,["children"]),s=Object.keys(n).reduce((function(e,t){return e[y[t]||t]=n[t],e}),{}),p=e.type;switch("symbol"==typeof p?p=p.toString():i.warnOnInvalidChildren(e,a),p){case h.FRAGMENT:t=i.mapChildrenToProps(a,t);break;case h.LINK:case h.META:case h.NOSCRIPT:case h.SCRIPT:case h.STYLE:r=i.flattenArrayTypeChildren({child:e,arrayTypeChildren:r,newChildProps:s,nestedChildren:a});break;default:t=i.mapObjectTypeChildren({child:e,newProps:t,newChildProps:s,nestedChildren:a})}}})),this.mapArrayTypeChildrenToProps(r,t)},t.prototype.render=function(){var e=this.props,t=e.children,i=j(e,["children"]),r=Object.assign({},i);return t&&(r=this.mapChildrenToProps(t,r)),l.a.createElement(I.Consumer,null,(function(e){return l.a.createElement(C,Object.assign({},r,{context:e}))}))},t}(d.Component);O.propTypes={base:p.a.object,bodyAttributes:p.a.object,children:p.a.oneOfType([p.a.arrayOf(p.a.node),p.a.node]),defaultTitle:p.a.string,defer:p.a.bool,encodeSpecialCharacters:p.a.bool,htmlAttributes:p.a.object,link:p.a.arrayOf(p.a.object),meta:p.a.arrayOf(p.a.object),noscript:p.a.arrayOf(p.a.object),onChangeClientState:p.a.func,script:p.a.arrayOf(p.a.object),style:p.a.arrayOf(p.a.object),title:p.a.string,titleAttributes:p.a.object,titleTemplate:p.a.string},O.defaultProps={defer:!0,encodeSpecialCharacters:!0},O.displayName="Helmet"},LdZC:function(e,t,i){var r=i("jgJv"),o=i("KjZ+"),a=i("dIZa"),n=i("MBdc"),s=i("rrk0"),p=i("OF9M"),d=r?r.prototype:void 0,l=d?d.valueOf:void 0;e.exports=function(e,t,i,r,d,m,c){switch(i){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!m(new o(e),new o(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var h=s;case"[object Set]":var u=1&r;if(h||(h=p),e.size!=t.size&&!u)return!1;var f=c.get(e);if(f)return f==t;r|=2,c.set(e,t);var y=n(h(e),h(t),r,d,m,c);return c.delete(e),y;case"[object Symbol]":if(l)return l.call(e)==l.call(t)}return!1}},LeKB:function(e,t,i){e.exports=[{plugin:i("AdG2"),options:{plugins:[],extensions:[".md",".mdx"],remarkPlugins:[[null,{type:"yaml",marker:"-"}],null],rehypePlugins:[null,null],gatsbyRemarkPlugins:[],defaultLayouts:{default:"/Users/taylork/Development/hack-week-2020/cupcake-docs/node_modules/gatsby-theme-docz/src/base/Layout.js"}}},{plugin:i("1dvN"),options:{plugins:[]}},{plugin:i("mEVR"),options:{plugins:[],themeConfig:{colors:{modes:{dark:{sidebar:{navGroup:"#FFFFFF",tocLink:"#F5F6F7",tocLinkActive:"#FFFFFF"}}}}},src:"src/mdx",gatsbyRoot:null,themesDir:"src",mdxExtensions:[".md",".mdx"],docgenConfig:{},menu:["User API introduction","account","auth","check","cloud_docs","contacts","file_properties","file_requests","files","sharing","users","Business API introduction","team","deprecated"],mdPlugins:[],hastPlugins:[],ignore:[],typescript:!0,ts:!1,propsParser:!0,"props-parser":!0,debug:!1,native:!1,openBrowser:null,o:null,open:null,"open-browser":null,root:"/Users/taylork/Development/hack-week-2020/cupcake-docs/.docz",base:"/",source:"src/mdx","gatsby-root":null,files:"**/*.{md,markdown,mdx}",public:"/public",dest:".docz/dist",d:".docz/dist",editBranch:"master",eb:"master","edit-branch":"master",config:"",title:"Cupcake Docs",description:"My awesome app using docz",host:"localhost",port:3e3,p:3e3,separator:"-",paths:{root:"/Users/taylork/Development/hack-week-2020/cupcake-docs",templates:"/Users/taylork/Development/hack-week-2020/cupcake-docs/node_modules/docz-core/dist/templates",docz:"/Users/taylork/Development/hack-week-2020/cupcake-docs/.docz",cache:"/Users/taylork/Development/hack-week-2020/cupcake-docs/.docz/.cache",app:"/Users/taylork/Development/hack-week-2020/cupcake-docs/.docz/app",appPackageJson:"/Users/taylork/Development/hack-week-2020/cupcake-docs/package.json",appTsConfig:"/Users/taylork/Development/hack-week-2020/cupcake-docs/tsconfig.json",gatsbyConfig:"/Users/taylork/Development/hack-week-2020/cupcake-docs/gatsby-config.js",gatsbyBrowser:"/Users/taylork/Development/hack-week-2020/cupcake-docs/gatsby-browser.js",gatsbyNode:"/Users/taylork/Development/hack-week-2020/cupcake-docs/gatsby-node.js",gatsbySSR:"/Users/taylork/Development/hack-week-2020/cupcake-docs/gatsby-ssr.js",importsJs:"/Users/taylork/Development/hack-week-2020/cupcake-docs/.docz/app/imports.js",rootJs:"/Users/taylork/Development/hack-week-2020/cupcake-docs/.docz/app/root.jsx",indexJs:"/Users/taylork/Development/hack-week-2020/cupcake-docs/.docz/app/index.jsx",indexHtml:"/Users/taylork/Development/hack-week-2020/cupcake-docs/.docz/app/index.html",db:"/Users/taylork/Development/hack-week-2020/cupcake-docs/.docz/app/db.json"}}}]},Lj7C:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("vLtW"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},LrDU:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("NKQu"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},Lw3N:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("09y0"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},M8e6:function(e,t,i){"use strict";t.a=function(e){var t={};return function(i){return void 0===t[i]&&(t[i]=e(i)),t[i]}}},MBdc:function(e,t,i){var r=i("GE03"),o=i("5Avs"),a=i("+165");e.exports=function(e,t,i,n,s,p){var d=1&i,l=e.length,m=t.length;if(l!=m&&!(d&&m>l))return!1;var c=p.get(e);if(c&&p.get(t))return c==t;var h=-1,u=!0,f=2&i?new r:void 0;for(p.set(e,t),p.set(t,e);++h<l;){var y=e[h],v=t[h];if(n)var _=d?n(v,y,h,t,e,p):n(y,v,h,e,t,p);if(void 0!==_){if(_)continue;u=!1;break}if(f){if(!o(t,(function(e,t){if(!a(f,t)&&(y===e||s(y,e,i,n,p)))return f.push(t)}))){u=!1;break}}else if(y!==v&&!s(y,v,i,n,p)){u=!1;break}}return p.delete(e),p.delete(t),u}},MNFw:function(e,t,i){var r=i("JpX9");e.exports=function(e,t,i){return t=i?void 0:t,t=e&&null==t?e.length:t,r(e,128,void 0,void 0,void 0,void 0,t)}},MQuF:function(e,t,i){var r=i("SHde")(Object.keys,Object);e.exports=r},Mezr:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("nF9+"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},MfmI:function(e,t,i){var r=i("jgJv"),o=i("NmMy"),a=i("PqlX"),n=i("zXe4"),s=r?r.prototype:void 0,p=s?s.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(a(t))return o(t,e)+"";if(n(t))return p?p.call(t):"";var i=t+"";return"0"==i&&1/t==-1/0?"-0":i}},MrCn:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Kc1X"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},Mtdo:function(e,t,i){"use strict";t.a={team:{GroupsListArg:{fields:[{description:"Number of results to return per call.",parameter:"limit",type:{primitive:"UInt32"}}],stone_type:"struct"},GroupsListResult:{fields:[{parameter:"groups",type:{list:{datatype:"GroupSummary",namespace:"team_common"}}},{description:"Pass the cursor into :route:`groups/list/continue` to obtain the additional groups.",parameter:"cursor",type:{primitive:"String"}},{description:"Is true if there are additional groups that have not been returned yet. An additional call to :route:`groups/list/continue` can retrieve them.",parameter:"has_more",type:{primitive:"Boolean"}}],stone_type:"struct"}},team_common:{GroupManagementType:{description:"The group type determines how a group is managed.",fields:[{description:"A group which is managed by selected users.",parameter:"user_managed",type:{primitive:"Void"}},{description:"A group which is managed by team admins only.",parameter:"company_managed",type:{primitive:"Void"}},{description:"A group which is managed automatically by Dropbox.",parameter:"system_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupSummary:{description:"Information about a group.",fields:[{parameter:"group_name",type:{primitive:"String"}},{parameter:"group_id",type:{primitive:"String"}},{description:"Who is allowed to manage the group.",parameter:"group_management_type",type:{datatype:"GroupManagementType",namespace:"team_common"}},{description:"External ID of group. This is an arbitrary ID that an admin can attach to a group.",parameter:"group_external_id",type:{optional:{primitive:"String"}}},{description:"The number of members in the group.",parameter:"member_count",type:{optional:{primitive:"UInt32"}}}],stone_type:"struct"}}}},N318:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("WCFZ"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},NI83:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("uhQy"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},NKQu:function(e,t,i){"use strict";t.a={file_properties:{TemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TemplateFilterBase:{fields:[{description:"Only templates with an ID in the supplied list will be returned (a subset of templates will be returned).",parameter:"filter_some",type:{list:{primitive:"String"}}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},files:{ListFolderArg:{fields:[{description:"A unique identifier for the file.",parameter:"path",type:{primitive:"String"}},{description:"If true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders.",parameter:"recursive",type:{primitive:"Boolean"}},{description:"If true, :field:`FileMetadata.media_info` is set for photo and video. This parameter will no longer have an effect starting December 2, 2019.",parameter:"include_media_info",type:{primitive:"Boolean"}},{description:"If true, the results will include entries for files and folders that used to exist but were deleted.",parameter:"include_deleted",type:{primitive:"Boolean"}},{description:"If true, the results will include a flag for each file indicating whether or not  that file has any explicit members.",parameter:"include_has_explicit_shared_members",type:{primitive:"Boolean"}},{description:"If true, the results will include entries under mounted folders which includes app folder, shared folder and team folder.",parameter:"include_mounted_folders",type:{primitive:"Boolean"}},{description:"The maximum number of results to return per request. Note: This is an approximate number and there can be slightly more entries returned in some cases.",parameter:"limit",type:{optional:{primitive:"UInt32"}}},{description:"A shared link to list the contents of. If the link is password-protected, the password must be provided. If this field is present, :field:`ListFolderArg.path` will be relative to root of the shared link. Only non-recursive mode is supported for shared link.",parameter:"shared_link",type:{optional:{datatype:"SharedLink",namespace:"files"}}},{description:"If set to a valid list of template IDs, :field:`FileMetadata.property_groups` is set if there exists property data associated with the file and each of the listed templates.",parameter:"include_property_groups",type:{optional:{datatype:"TemplateFilterBase",namespace:"file_properties"}}},{description:"If true, include files that are not downloadable, i.e. Google Docs.",parameter:"include_non_downloadable_files",type:{primitive:"Boolean"}}],stone_type:"struct"},ListFolderError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{parameter:"template_error",type:{datatype:"TemplateError",namespace:"file_properties"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListFolderGetLatestCursorResult:{fields:[{description:"Pass the cursor into :route:`list_folder/continue` to see what's changed in the folder since your previous query.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLink:{fields:[{description:"Shared link url.",parameter:"url",type:{primitive:"String"}},{description:"Password for the shared link.",parameter:"password",type:{optional:{primitive:"String"}}}],stone_type:"struct"}}}},NMGM:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("ZzBG"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},NSX3:function(e,t,i){"use strict";i.r(t);var r=i("xtsi");"https:"!==window.location.protocol&&"localhost"!==window.location.hostname?console.error("Service workers can only be used over HTTPS, or on localhost for development"):"serviceWorker"in navigator&&navigator.serviceWorker.register("/sw.js").then((function(e){e.addEventListener("updatefound",(function(){Object(r.apiRunner)("onServiceWorkerUpdateFound",{serviceWorker:e});var t=e.installing;console.log("installingWorker",t),t.addEventListener("statechange",(function(){switch(t.state){case"installed":navigator.serviceWorker.controller?(window.___swUpdated=!0,Object(r.apiRunner)("onServiceWorkerUpdateReady",{serviceWorker:e}),window.___failedResources&&(console.log("resources failed, SW updated - reloading"),window.location.reload())):(console.log("Content is now available offline!"),Object(r.apiRunner)("onServiceWorkerInstalled",{serviceWorker:e}));break;case"redundant":console.error("The installing service worker became redundant."),Object(r.apiRunner)("onServiceWorkerRedundant",{serviceWorker:e});break;case"activated":Object(r.apiRunner)("onServiceWorkerActive",{serviceWorker:e})}}))}))})).catch((function(e){console.error("Error during service worker registration:",e)}))},NT1G:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("35gP"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},NfLg:function(e,t,i){var r=i("GI0s"),o=i("LBQr"),a=i("T9Ud"),n=Function.prototype,s=Object.prototype,p=n.toString,d=s.hasOwnProperty,l=p.call(Object);e.exports=function(e){if(!a(e)||"[object Object]"!=r(e))return!1;var t=o(e);if(null===t)return!0;var i=d.call(t,"constructor")&&t.constructor;return"function"==typeof i&&i instanceof i&&p.call(i)==l}},Ngii:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("8KpS"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},Nh9T:function(e,t,i){"use strict";t.a={cloud_docs:{GenericErrorTag:{fields:[{description:"Invalid argument supplied.",parameter:"invalid_argument",type:{primitive:"Void"}},{description:"User is unauthenticated.",parameter:"unauthenticated",type:{primitive:"Void"}},{description:"User does not have access to the specified doc.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"Doc could not be found based on the supplied doc ID.",parameter:"doc_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LockArg:{fields:[{description:'The API ID ("id:...") associated with the Cloud Doc',parameter:"file_id",type:{primitive:"String"}}],stone_type:"struct"},LockResult:{fields:[{parameter:"file_id",type:{primitive:"String"}},{description:"The timestamp after which the lock will expire, measured in seconds since 1970-01-01 00:00:00 UTC",parameter:"expires_at",type:{primitive:"Int64"}}],stone_type:"struct"},LockingError:{fields:[{parameter:"locking_error_tag",type:{optional:{datatype:"locking_error_tag_union",namespace:"cloud_docs"}}}],stone_type:"struct"},LockingErrorTag:{fields:[{description:"A lock on the doc is held by another editor",parameter:"conflict",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},locking_error_tag_union:{fields:[{parameter:"locking_error",type:{datatype:"LockingErrorTag",namespace:"cloud_docs"}},{parameter:"generic_error",type:{datatype:"GenericErrorTag",namespace:"cloud_docs"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},NmMy:function(e,t){e.exports=function(e,t){for(var i=-1,r=null==e?0:e.length,o=Array(r);++i<r;)o[i]=t(e[i],i,e);return o}},"Nq+L":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("+sCh"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},NsWh:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("qGBT"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},NtDJ:function(e,t,i){"use strict";t.a={seen_state:{PlatformType:{description:"Possible platforms on which a user may view content.",fields:[{description:"The content was viewed on the web.",parameter:"web",type:{primitive:"Void"}},{description:"The content was viewed on a desktop client.",parameter:"desktop",type:{primitive:"Void"}},{description:"The content was viewed on a mobile iOS client.",parameter:"mobile_ios",type:{primitive:"Void"}},{description:"The content was viewed on a mobile android client.",parameter:"mobile_android",type:{primitive:"Void"}},{description:"The content was viewed from an API client.",parameter:"api",type:{primitive:"Void"}},{description:"The content was viewed on an unknown platform.",parameter:"unknown",type:{primitive:"Void"}},{description:"The content was viewed on a mobile client. DEPRECATED: Use mobile_ios or mobile_android instead.",parameter:"mobile",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupInfo:{description:"The information about a group. Groups is a way to manage a list of users  who need same access permission to the shared folder.",fields:[{parameter:"group_name",type:{primitive:"String"}},{parameter:"group_id",type:{primitive:"String"}},{description:"Who is allowed to manage the group.",parameter:"group_management_type",type:{datatype:"GroupManagementType",namespace:"team_common"}},{description:"The type of group.",parameter:"group_type",type:{datatype:"GroupType",namespace:"team_common"}},{description:"If the current user is a member of the group.",parameter:"is_member",type:{primitive:"Boolean"}},{description:"If the current user is an owner of the group.",parameter:"is_owner",type:{primitive:"Boolean"}},{description:"If the group is owned by the current user's team.",parameter:"same_team",type:{primitive:"Boolean"}},{description:"External ID of group. This is an arbitrary ID that an admin can attach to a group.",parameter:"group_external_id",type:{optional:{primitive:"String"}}},{description:"The number of members in the group.",parameter:"member_count",type:{optional:{primitive:"UInt32"}}}],stone_type:"struct"},GroupMembershipInfo:{description:"The information about a group member of the shared content.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"The information about the membership group.",parameter:"group",type:{datatype:"GroupInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},InviteeInfo:{description:"Information about the recipient of a shared content invitation.",fields:[{description:"E-mail address of invited user.",parameter:"email",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},InviteeMembershipInfo:{description:"Information about an invited member of a shared content.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Recipient of the invitation.",parameter:"invitee",type:{datatype:"InviteeInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}},{description:"The user this invitation is tied to, if available.",parameter:"user",type:{optional:{datatype:"UserInfo",namespace:"sharing"}}}],stone_type:"struct"},ListFileMembersArg:{description:"Arguments for :route:`list_file_members`.",fields:[{description:"The file for which you want to see members.",parameter:"file",type:{primitive:"String"}},{description:"The actions for which to return permissions on a member.",parameter:"actions",type:{optional:{list:{datatype:"MemberAction",namespace:"sharing"}}}},{description:"Whether to include members who only have access from a parent shared folder.",parameter:"include_inherited",type:{primitive:"Boolean"}},{description:"Number of members to return max per query. Defaults to 100 if no limit is specified.",parameter:"limit",type:{primitive:"UInt32"}}],stone_type:"struct"},ListFileMembersError:{description:"Error for :route:`list_file_members`.",fields:[{parameter:"user_error",type:{datatype:"SharingUserError",namespace:"sharing"}},{parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberAction:{description:"Actions that may be taken on members of a shared folder.",fields:[{description:"Allow the member to keep a copy of the folder when removing.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Make the member an editor of the folder.",parameter:"make_editor",type:{primitive:"Void"}},{description:"Make the member an owner of the folder.",parameter:"make_owner",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder.",parameter:"make_viewer",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder without commenting permissions.",parameter:"make_viewer_no_comment",type:{primitive:"Void"}},{description:"Remove the member from the folder.",parameter:"remove",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberPermission:{description:"Whether the user is allowed to take the action on the associated member.",fields:[{description:"The action that the user may wish to take on the member.",parameter:"action",type:{datatype:"MemberAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFileMembers:{description:"Shared file user, group, and invitee membership.\nUsed for the results of :route:`list_file_members` and :route:`list_file_members/continue`, and used as part of the results for :route:`list_file_members/batch`.",fields:[{description:"The list of user members of the shared file.",parameter:"users",type:{list:{datatype:"UserFileMembershipInfo",namespace:"sharing"}}},{description:"The list of group members of the shared file.",parameter:"groups",type:{list:{datatype:"GroupMembershipInfo",namespace:"sharing"}}},{description:"The list of invited members of a file, but have not logged in and claimed this.",parameter:"invitees",type:{list:{datatype:"InviteeMembershipInfo",namespace:"sharing"}}},{description:"Present if there are additional shared file members that have not been returned yet. Pass the cursor into :route:`list_file_members/continue` to list additional members.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},SharingFileAccessError:{description:"User could not access this file.",fields:[{description:"Current user does not have sufficient privileges to perform the desired action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"File specified was not found.",parameter:"invalid_file",type:{primitive:"Void"}},{description:"A folder can't be shared this way. Use folder sharing or a shared link instead.",parameter:"is_folder",type:{primitive:"Void"}},{description:"A file inside a public folder can't be shared this way. Use a public link instead.",parameter:"inside_public_folder",type:{primitive:"Void"}},{description:"A Mac OS X package can't be shared this way. Use a shared link instead.",parameter:"inside_osx_package",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingUserError:{description:"User account had a problem preventing this action.",fields:[{description:"The current user must verify the account e-mail address before performing this action.",parameter:"email_unverified",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserFileMembershipInfo:{description:"The information about a user member of the shared content with an appended last seen timestamp.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"The account information for the membership user.",parameter:"user",type:{datatype:"UserInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}},{description:"The UTC timestamp of when the user has last seen the content, if they have.",parameter:"time_last_seen",type:{optional:{primitive:"Timestamp"}}},{description:"The platform on which the user has last seen the content, or unknown.",parameter:"platform_type",type:{optional:{datatype:"PlatformType",namespace:"seen_state"}}}],stone_type:"struct"},UserInfo:{description:"Basic information about a user. Use :route:`users.get_account` and :route:`users.get_account_batch` to obtain more detailed information.",fields:[{description:"The account ID of the user.",parameter:"account_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"The display name of the user.",parameter:"display_name",type:{primitive:"String"}},{description:"If the user is in the same team as current user.",parameter:"same_team",type:{primitive:"Boolean"}},{description:"The team member ID of the shared folder member. Only present if :field:`same_team` is true.",parameter:"team_member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"}},team_common:{GroupManagementType:{description:"The group type determines how a group is managed.",fields:[{description:"A group which is managed by selected users.",parameter:"user_managed",type:{primitive:"Void"}},{description:"A group which is managed by team admins only.",parameter:"company_managed",type:{primitive:"Void"}},{description:"A group which is managed automatically by Dropbox.",parameter:"system_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupType:{description:"The group type determines how a group is created and managed.",fields:[{description:"A group to which team members are automatically added. Applicable to :link:`team folders https://www.dropbox.com/help/986` only.",parameter:"team",type:{primitive:"Void"}},{description:"A group is created and managed by a user.",parameter:"user_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"O/Z7":function(e,t){var i=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;e.exports=function(e){return i.test(e)}},O76R:function(e,t,i){var r=i("7bRu"),o=i("m3cY"),a=i("7yvy"),n=RegExp("['’]","g");e.exports=function(e){return function(t){return r(a(o(t).replace(n,"")),e,"")}}},OBqb:function(e,t,i){"use strict";t.a={check:{EchoArg:{description:"EchoArg contains the arguments to be sent to the Dropbox servers.",fields:[{description:"The string that you'd like to be echoed back to you.",parameter:"query",type:{primitive:"String"}}],stone_type:"struct"},EchoResult:{description:"EchoResult contains the result returned from the Dropbox servers.",fields:[{description:"If everything worked correctly, this would be the same as query.",parameter:"result",type:{primitive:"String"}}],stone_type:"struct"}}}},OF9M:function(e,t){e.exports=function(e){var t=-1,i=Array(e.size);return e.forEach((function(e){i[++t]=e})),i}},ONOI:function(e,t,i){var r=i("SN9N"),o=i("Fldm"),a=i("vvBr"),n=i("e766"),s=i("FQMq"),p=i("lYsT"),d=i("PqlX"),l=i("nxZd"),m=i("tfj2"),c=i("RqPZ"),h=i("9aUh"),u=i("NfLg"),f=i("3kU/"),y=i("Bq5F"),v=i("vDbd");e.exports=function(e,t,i,_,g,b,w){var T=y(e,i),V=y(t,i),k=w.get(V);if(k)r(e,i,k);else{var S=b?b(T,V,i+"",e,t,w):void 0,x=void 0===S;if(x){var A=d(V),P=!A&&m(V),D=!A&&!P&&f(V);S=V,A||P||D?d(T)?S=T:l(T)?S=n(T):P?(x=!1,S=o(V,!0)):D?(x=!1,S=a(V,!0)):S=[]:u(V)||p(V)?(S=T,p(T)?S=v(T):h(T)&&!c(T)||(S=s(V))):x=!1}x&&(w.set(V,S),g(S,V,_,b,w),w.delete(V)),r(e,i,S)}}},ONaf:function(e,t,i){"use strict";t.a={async:{LaunchEmptyResult:{description:"Result returned by methods that may either launch an asynchronous job or complete synchronously. Upon synchronous completion of the job, no additional information is returned.",fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{description:"The job finished synchronously and successfully.",parameter:"complete",type:{primitive:"Void"}}],stone_type:"union"}},sharing:{SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UnshareFolderArg:{fields:[{description:"The ID for the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"If true, members of this shared folder will get a copy of this folder after it's unshared. Otherwise, it will be removed from their Dropbox. The current user, who is an owner, will always retain their copy.",parameter:"leave_a_copy",type:{primitive:"Boolean"}}],stone_type:"struct"},UnshareFolderError:{fields:[{parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{description:"This action cannot be performed on a team shared folder.",parameter:"team_folder",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"This shared folder has too many files to be unshared.",parameter:"too_many_files",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"OY//":function(e,t,i){"use strict";t.a={files:{LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},MoveIntoVaultError:{fields:[{description:"Moving shared folder into Vault is not allowed.",parameter:"is_shared_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchArgBase:{fields:[{description:"List of entries to be moved or copied. Each entry is :type:`RelocationPath`.",parameter:"entries",type:{list:{datatype:"RelocationPath",namespace:"files"}}},{description:"If there's a conflict with any file, have the Dropbox server try to autorename that file to avoid the conflict.",parameter:"autorename",type:{primitive:"Boolean"}}],stone_type:"struct"},RelocationBatchErrorEntry:{fields:[{description:"User errors that retry won't help.",parameter:"relocation_error",type:{datatype:"RelocationError",namespace:"files"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchResultEntry:{fields:[{parameter:"success",type:{datatype:"Metadata",namespace:"files"}},{parameter:"failure",type:{datatype:"RelocationBatchErrorEntry",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchV2Launch:{description:"Result returned by :route:`copy_batch:2` or :route:`move_batch:2` that may either launch an asynchronous job or complete synchronously.",fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{parameter:"complete",type:{datatype:"RelocationBatchV2Result",namespace:"files"}}],stone_type:"union"},RelocationBatchV2Result:{fields:[{description:"Each entry in CopyBatchArg.entries or :field:`MoveBatchArg.entries` will appear at the same position inside :field:`RelocationBatchV2Result.entries`.",parameter:"entries",type:{list:{datatype:"RelocationBatchResultEntry",namespace:"files"}}}],stone_type:"struct"},RelocationError:{fields:[{parameter:"from_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"from_write",type:{datatype:"WriteError",namespace:"files"}},{parameter:"to",type:{datatype:"WriteError",namespace:"files"}},{description:"Shared folders can't be copied.",parameter:"cant_copy_shared_folder",type:{primitive:"Void"}},{description:"Your move operation would result in nested shared folders.  This is not allowed.",parameter:"cant_nest_shared_folder",type:{primitive:"Void"}},{description:"You cannot move a folder into itself.",parameter:"cant_move_folder_into_itself",type:{primitive:"Void"}},{description:"The operation would involve more than 10,000 files and folders.",parameter:"too_many_files",type:{primitive:"Void"}},{description:"There are duplicated/nested paths among :field:`RelocationArg.from_path` and :field:`RelocationArg.to_path`.",parameter:"duplicated_or_nested_paths",type:{primitive:"Void"}},{description:"Your move operation would result in an ownership transfer. You may reissue the request with the field :field:`RelocationArg.allow_ownership_transfer` to true.",parameter:"cant_transfer_ownership",type:{primitive:"Void"}},{description:"The current user does not have enough space to move or copy the files.",parameter:"insufficient_quota",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{description:"Can't move the shared folder to the given destination.",parameter:"cant_move_shared_folder",type:{primitive:"Void"}},{description:"Some content cannot be moved into Vault under certain circumstances, see detailed error.",parameter:"cant_move_into_vault",type:{datatype:"MoveIntoVaultError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationPath:{fields:[{description:"Path in the user's Dropbox to be copied or moved.",parameter:"from_path",type:{primitive:"String"}},{description:"Path in the user's Dropbox that is the destination.",parameter:"to_path",type:{primitive:"String"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},OfXF:function(e,t,i){var r=i("F3Ab"),o=i("sWZd"),a=i("q+I6"),n=i("9aUh"),s=i("cTHi");e.exports=function(e,t,i,p){if(!n(e))return e;for(var d=-1,l=(t=o(t,e)).length,m=l-1,c=e;null!=c&&++d<l;){var h=s(t[d]),u=i;if(d!=m){var f=c[h];void 0===(u=p?p(f,h,c):void 0)&&(u=n(f)?f:a(t[d+1])?[]:{})}r(c,h,u),c=c[h]}return e}},OoM2:function(e,t,i){"use strict";var r=Array.isArray,o=Object.keys,a=Object.prototype.hasOwnProperty;e.exports=function e(t,i){if(t===i)return!0;if(t&&i&&"object"==typeof t&&"object"==typeof i){var n,s,p,d=r(t),l=r(i);if(d&&l){if((s=t.length)!=i.length)return!1;for(n=s;0!=n--;)if(!e(t[n],i[n]))return!1;return!0}if(d!=l)return!1;var m=t instanceof Date,c=i instanceof Date;if(m!=c)return!1;if(m&&c)return t.getTime()==i.getTime();var h=t instanceof RegExp,u=i instanceof RegExp;if(h!=u)return!1;if(h&&u)return t.toString()==i.toString();var f=o(t);if((s=f.length)!==o(i).length)return!1;for(n=s;0!=n--;)if(!a.call(i,f[n]))return!1;for(n=s;0!=n--;)if(!e(t[p=f[n]],i[p]))return!1;return!0}return t!=t&&i!=i}},P32m:function(e,t,i){"use strict";t.a={files:{LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},MoveIntoVaultError:{fields:[{description:"Moving shared folder into Vault is not allowed.",parameter:"is_shared_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationArg:{fields:[{description:"Path in the user's Dropbox to be copied or moved.",parameter:"from_path",type:{primitive:"String"}},{description:"Path in the user's Dropbox that is the destination.",parameter:"to_path",type:{primitive:"String"}},{description:"If true, :route:`copy` will copy contents in shared folder, otherwise :field:`RelocationError.cant_copy_shared_folder` will be returned if :field:`from_path` contains shared folder. This field is always true for :route:`move`.",parameter:"allow_shared_folder",type:{primitive:"Boolean"}},{description:"If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict.",parameter:"autorename",type:{primitive:"Boolean"}},{description:"Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies.",parameter:"allow_ownership_transfer",type:{primitive:"Boolean"}}],stone_type:"struct"},RelocationError:{fields:[{parameter:"from_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"from_write",type:{datatype:"WriteError",namespace:"files"}},{parameter:"to",type:{datatype:"WriteError",namespace:"files"}},{description:"Shared folders can't be copied.",parameter:"cant_copy_shared_folder",type:{primitive:"Void"}},{description:"Your move operation would result in nested shared folders.  This is not allowed.",parameter:"cant_nest_shared_folder",type:{primitive:"Void"}},{description:"You cannot move a folder into itself.",parameter:"cant_move_folder_into_itself",type:{primitive:"Void"}},{description:"The operation would involve more than 10,000 files and folders.",parameter:"too_many_files",type:{primitive:"Void"}},{description:"There are duplicated/nested paths among :field:`RelocationArg.from_path` and :field:`RelocationArg.to_path`.",parameter:"duplicated_or_nested_paths",type:{primitive:"Void"}},{description:"Your move operation would result in an ownership transfer. You may reissue the request with the field :field:`RelocationArg.allow_ownership_transfer` to true.",parameter:"cant_transfer_ownership",type:{primitive:"Void"}},{description:"The current user does not have enough space to move or copy the files.",parameter:"insufficient_quota",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{description:"Can't move the shared folder to the given destination.",parameter:"cant_move_shared_folder",type:{primitive:"Void"}},{description:"Some content cannot be moved into Vault under certain circumstances, see detailed error.",parameter:"cant_move_into_vault",type:{datatype:"MoveIntoVaultError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},P9a0:function(e,t,i){(function(e,r){var o;!function(a){var n=t,s=(e&&e.exports,"object"==typeof r&&r);s.global!==s&&s.window;var p=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,d=/[\x01-\x7F]/g,l=/[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,m=/<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g,c={"­":"shy","‌":"zwnj","‍":"zwj","‎":"lrm","⁣":"ic","⁢":"it","⁡":"af","‏":"rlm","​":"ZeroWidthSpace","⁠":"NoBreak","̑":"DownBreve","⃛":"tdot","⃜":"DotDot","\t":"Tab","\n":"NewLine"," ":"puncsp"," ":"MediumSpace"," ":"thinsp"," ":"hairsp"," ":"emsp13"," ":"ensp"," ":"emsp14"," ":"emsp"," ":"numsp"," ":"nbsp","  ":"ThickSpace","‾":"oline",_:"lowbar","‐":"dash","–":"ndash","—":"mdash","―":"horbar",",":"comma",";":"semi","⁏":"bsemi",":":"colon","⩴":"Colone","!":"excl","¡":"iexcl","?":"quest","¿":"iquest",".":"period","‥":"nldr","…":"mldr","·":"middot","'":"apos","‘":"lsquo","’":"rsquo","‚":"sbquo","‹":"lsaquo","›":"rsaquo",'"':"quot","“":"ldquo","”":"rdquo","„":"bdquo","«":"laquo","»":"raquo","(":"lpar",")":"rpar","[":"lsqb","]":"rsqb","{":"lcub","}":"rcub","⌈":"lceil","⌉":"rceil","⌊":"lfloor","⌋":"rfloor","⦅":"lopar","⦆":"ropar","⦋":"lbrke","⦌":"rbrke","⦍":"lbrkslu","⦎":"rbrksld","⦏":"lbrksld","⦐":"rbrkslu","⦑":"langd","⦒":"rangd","⦓":"lparlt","⦔":"rpargt","⦕":"gtlPar","⦖":"ltrPar","⟦":"lobrk","⟧":"robrk","⟨":"lang","⟩":"rang","⟪":"Lang","⟫":"Rang","⟬":"loang","⟭":"roang","❲":"lbbrk","❳":"rbbrk","‖":"Vert","§":"sect","¶":"para","@":"commat","*":"ast","/":"sol",undefined:null,"&":"amp","#":"num","%":"percnt","‰":"permil","‱":"pertenk","†":"dagger","‡":"Dagger","•":"bull","⁃":"hybull","′":"prime","″":"Prime","‴":"tprime","⁗":"qprime","‵":"bprime","⁁":"caret","`":"grave","´":"acute","˜":"tilde","^":"Hat","¯":"macr","˘":"breve","˙":"dot","¨":"die","˚":"ring","˝":"dblac","¸":"cedil","˛":"ogon","ˆ":"circ","ˇ":"caron","°":"deg","©":"copy","®":"reg","℗":"copysr","℘":"wp","℞":"rx","℧":"mho","℩":"iiota","←":"larr","↚":"nlarr","→":"rarr","↛":"nrarr","↑":"uarr","↓":"darr","↔":"harr","↮":"nharr","↕":"varr","↖":"nwarr","↗":"nearr","↘":"searr","↙":"swarr","↝":"rarrw","↝̸":"nrarrw","↞":"Larr","↟":"Uarr","↠":"Rarr","↡":"Darr","↢":"larrtl","↣":"rarrtl","↤":"mapstoleft","↥":"mapstoup","↦":"map","↧":"mapstodown","↩":"larrhk","↪":"rarrhk","↫":"larrlp","↬":"rarrlp","↭":"harrw","↰":"lsh","↱":"rsh","↲":"ldsh","↳":"rdsh","↵":"crarr","↶":"cularr","↷":"curarr","↺":"olarr","↻":"orarr","↼":"lharu","↽":"lhard","↾":"uharr","↿":"uharl","⇀":"rharu","⇁":"rhard","⇂":"dharr","⇃":"dharl","⇄":"rlarr","⇅":"udarr","⇆":"lrarr","⇇":"llarr","⇈":"uuarr","⇉":"rrarr","⇊":"ddarr","⇋":"lrhar","⇌":"rlhar","⇐":"lArr","⇍":"nlArr","⇑":"uArr","⇒":"rArr","⇏":"nrArr","⇓":"dArr","⇔":"iff","⇎":"nhArr","⇕":"vArr","⇖":"nwArr","⇗":"neArr","⇘":"seArr","⇙":"swArr","⇚":"lAarr","⇛":"rAarr","⇝":"zigrarr","⇤":"larrb","⇥":"rarrb","⇵":"duarr","⇽":"loarr","⇾":"roarr","⇿":"hoarr","∀":"forall","∁":"comp","∂":"part","∂̸":"npart","∃":"exist","∄":"nexist","∅":"empty","∇":"Del","∈":"in","∉":"notin","∋":"ni","∌":"notni","϶":"bepsi","∏":"prod","∐":"coprod","∑":"sum","+":"plus","±":"pm","÷":"div","×":"times","<":"lt","≮":"nlt","<⃒":"nvlt","=":"equals","≠":"ne","=⃥":"bne","⩵":"Equal",">":"gt","≯":"ngt",">⃒":"nvgt","¬":"not","|":"vert","¦":"brvbar","−":"minus","∓":"mp","∔":"plusdo","⁄":"frasl","∖":"setmn","∗":"lowast","∘":"compfn","√":"Sqrt","∝":"prop","∞":"infin","∟":"angrt","∠":"ang","∠⃒":"nang","∡":"angmsd","∢":"angsph","∣":"mid","∤":"nmid","∥":"par","∦":"npar","∧":"and","∨":"or","∩":"cap","∩︀":"caps","∪":"cup","∪︀":"cups","∫":"int","∬":"Int","∭":"tint","⨌":"qint","∮":"oint","∯":"Conint","∰":"Cconint","∱":"cwint","∲":"cwconint","∳":"awconint","∴":"there4","∵":"becaus","∶":"ratio","∷":"Colon","∸":"minusd","∺":"mDDot","∻":"homtht","∼":"sim","≁":"nsim","∼⃒":"nvsim","∽":"bsim","∽̱":"race","∾":"ac","∾̳":"acE","∿":"acd","≀":"wr","≂":"esim","≂̸":"nesim","≃":"sime","≄":"nsime","≅":"cong","≇":"ncong","≆":"simne","≈":"ap","≉":"nap","≊":"ape","≋":"apid","≋̸":"napid","≌":"bcong","≍":"CupCap","≭":"NotCupCap","≍⃒":"nvap","≎":"bump","≎̸":"nbump","≏":"bumpe","≏̸":"nbumpe","≐":"doteq","≐̸":"nedot","≑":"eDot","≒":"efDot","≓":"erDot","≔":"colone","≕":"ecolon","≖":"ecir","≗":"cire","≙":"wedgeq","≚":"veeeq","≜":"trie","≟":"equest","≡":"equiv","≢":"nequiv","≡⃥":"bnequiv","≤":"le","≰":"nle","≤⃒":"nvle","≥":"ge","≱":"nge","≥⃒":"nvge","≦":"lE","≦̸":"nlE","≧":"gE","≧̸":"ngE","≨︀":"lvnE","≨":"lnE","≩":"gnE","≩︀":"gvnE","≪":"ll","≪̸":"nLtv","≪⃒":"nLt","≫":"gg","≫̸":"nGtv","≫⃒":"nGt","≬":"twixt","≲":"lsim","≴":"nlsim","≳":"gsim","≵":"ngsim","≶":"lg","≸":"ntlg","≷":"gl","≹":"ntgl","≺":"pr","⊀":"npr","≻":"sc","⊁":"nsc","≼":"prcue","⋠":"nprcue","≽":"sccue","⋡":"nsccue","≾":"prsim","≿":"scsim","≿̸":"NotSucceedsTilde","⊂":"sub","⊄":"nsub","⊂⃒":"vnsub","⊃":"sup","⊅":"nsup","⊃⃒":"vnsup","⊆":"sube","⊈":"nsube","⊇":"supe","⊉":"nsupe","⊊︀":"vsubne","⊊":"subne","⊋︀":"vsupne","⊋":"supne","⊍":"cupdot","⊎":"uplus","⊏":"sqsub","⊏̸":"NotSquareSubset","⊐":"sqsup","⊐̸":"NotSquareSuperset","⊑":"sqsube","⋢":"nsqsube","⊒":"sqsupe","⋣":"nsqsupe","⊓":"sqcap","⊓︀":"sqcaps","⊔":"sqcup","⊔︀":"sqcups","⊕":"oplus","⊖":"ominus","⊗":"otimes","⊘":"osol","⊙":"odot","⊚":"ocir","⊛":"oast","⊝":"odash","⊞":"plusb","⊟":"minusb","⊠":"timesb","⊡":"sdotb","⊢":"vdash","⊬":"nvdash","⊣":"dashv","⊤":"top","⊥":"bot","⊧":"models","⊨":"vDash","⊭":"nvDash","⊩":"Vdash","⊮":"nVdash","⊪":"Vvdash","⊫":"VDash","⊯":"nVDash","⊰":"prurel","⊲":"vltri","⋪":"nltri","⊳":"vrtri","⋫":"nrtri","⊴":"ltrie","⋬":"nltrie","⊴⃒":"nvltrie","⊵":"rtrie","⋭":"nrtrie","⊵⃒":"nvrtrie","⊶":"origof","⊷":"imof","⊸":"mumap","⊹":"hercon","⊺":"intcal","⊻":"veebar","⊽":"barvee","⊾":"angrtvb","⊿":"lrtri","⋀":"Wedge","⋁":"Vee","⋂":"xcap","⋃":"xcup","⋄":"diam","⋅":"sdot","⋆":"Star","⋇":"divonx","⋈":"bowtie","⋉":"ltimes","⋊":"rtimes","⋋":"lthree","⋌":"rthree","⋍":"bsime","⋎":"cuvee","⋏":"cuwed","⋐":"Sub","⋑":"Sup","⋒":"Cap","⋓":"Cup","⋔":"fork","⋕":"epar","⋖":"ltdot","⋗":"gtdot","⋘":"Ll","⋘̸":"nLl","⋙":"Gg","⋙̸":"nGg","⋚︀":"lesg","⋚":"leg","⋛":"gel","⋛︀":"gesl","⋞":"cuepr","⋟":"cuesc","⋦":"lnsim","⋧":"gnsim","⋨":"prnsim","⋩":"scnsim","⋮":"vellip","⋯":"ctdot","⋰":"utdot","⋱":"dtdot","⋲":"disin","⋳":"isinsv","⋴":"isins","⋵":"isindot","⋵̸":"notindot","⋶":"notinvc","⋷":"notinvb","⋹":"isinE","⋹̸":"notinE","⋺":"nisd","⋻":"xnis","⋼":"nis","⋽":"notnivc","⋾":"notnivb","⌅":"barwed","⌆":"Barwed","⌌":"drcrop","⌍":"dlcrop","⌎":"urcrop","⌏":"ulcrop","⌐":"bnot","⌒":"profline","⌓":"profsurf","⌕":"telrec","⌖":"target","⌜":"ulcorn","⌝":"urcorn","⌞":"dlcorn","⌟":"drcorn","⌢":"frown","⌣":"smile","⌭":"cylcty","⌮":"profalar","⌶":"topbot","⌽":"ovbar","⌿":"solbar","⍼":"angzarr","⎰":"lmoust","⎱":"rmoust","⎴":"tbrk","⎵":"bbrk","⎶":"bbrktbrk","⏜":"OverParenthesis","⏝":"UnderParenthesis","⏞":"OverBrace","⏟":"UnderBrace","⏢":"trpezium","⏧":"elinters","␣":"blank","─":"boxh","│":"boxv","┌":"boxdr","┐":"boxdl","└":"boxur","┘":"boxul","├":"boxvr","┤":"boxvl","┬":"boxhd","┴":"boxhu","┼":"boxvh","═":"boxH","║":"boxV","╒":"boxdR","╓":"boxDr","╔":"boxDR","╕":"boxdL","╖":"boxDl","╗":"boxDL","╘":"boxuR","╙":"boxUr","╚":"boxUR","╛":"boxuL","╜":"boxUl","╝":"boxUL","╞":"boxvR","╟":"boxVr","╠":"boxVR","╡":"boxvL","╢":"boxVl","╣":"boxVL","╤":"boxHd","╥":"boxhD","╦":"boxHD","╧":"boxHu","╨":"boxhU","╩":"boxHU","╪":"boxvH","╫":"boxVh","╬":"boxVH","▀":"uhblk","▄":"lhblk","█":"block","░":"blk14","▒":"blk12","▓":"blk34","□":"squ","▪":"squf","▫":"EmptyVerySmallSquare","▭":"rect","▮":"marker","▱":"fltns","△":"xutri","▴":"utrif","▵":"utri","▸":"rtrif","▹":"rtri","▽":"xdtri","▾":"dtrif","▿":"dtri","◂":"ltrif","◃":"ltri","◊":"loz","○":"cir","◬":"tridot","◯":"xcirc","◸":"ultri","◹":"urtri","◺":"lltri","◻":"EmptySmallSquare","◼":"FilledSmallSquare","★":"starf","☆":"star","☎":"phone","♀":"female","♂":"male","♠":"spades","♣":"clubs","♥":"hearts","♦":"diams","♪":"sung","✓":"check","✗":"cross","✠":"malt","✶":"sext","❘":"VerticalSeparator","⟈":"bsolhsub","⟉":"suphsol","⟵":"xlarr","⟶":"xrarr","⟷":"xharr","⟸":"xlArr","⟹":"xrArr","⟺":"xhArr","⟼":"xmap","⟿":"dzigrarr","⤂":"nvlArr","⤃":"nvrArr","⤄":"nvHarr","⤅":"Map","⤌":"lbarr","⤍":"rbarr","⤎":"lBarr","⤏":"rBarr","⤐":"RBarr","⤑":"DDotrahd","⤒":"UpArrowBar","⤓":"DownArrowBar","⤖":"Rarrtl","⤙":"latail","⤚":"ratail","⤛":"lAtail","⤜":"rAtail","⤝":"larrfs","⤞":"rarrfs","⤟":"larrbfs","⤠":"rarrbfs","⤣":"nwarhk","⤤":"nearhk","⤥":"searhk","⤦":"swarhk","⤧":"nwnear","⤨":"toea","⤩":"tosa","⤪":"swnwar","⤳":"rarrc","⤳̸":"nrarrc","⤵":"cudarrr","⤶":"ldca","⤷":"rdca","⤸":"cudarrl","⤹":"larrpl","⤼":"curarrm","⤽":"cularrp","⥅":"rarrpl","⥈":"harrcir","⥉":"Uarrocir","⥊":"lurdshar","⥋":"ldrushar","⥎":"LeftRightVector","⥏":"RightUpDownVector","⥐":"DownLeftRightVector","⥑":"LeftUpDownVector","⥒":"LeftVectorBar","⥓":"RightVectorBar","⥔":"RightUpVectorBar","⥕":"RightDownVectorBar","⥖":"DownLeftVectorBar","⥗":"DownRightVectorBar","⥘":"LeftUpVectorBar","⥙":"LeftDownVectorBar","⥚":"LeftTeeVector","⥛":"RightTeeVector","⥜":"RightUpTeeVector","⥝":"RightDownTeeVector","⥞":"DownLeftTeeVector","⥟":"DownRightTeeVector","⥠":"LeftUpTeeVector","⥡":"LeftDownTeeVector","⥢":"lHar","⥣":"uHar","⥤":"rHar","⥥":"dHar","⥦":"luruhar","⥧":"ldrdhar","⥨":"ruluhar","⥩":"rdldhar","⥪":"lharul","⥫":"llhard","⥬":"rharul","⥭":"lrhard","⥮":"udhar","⥯":"duhar","⥰":"RoundImplies","⥱":"erarr","⥲":"simrarr","⥳":"larrsim","⥴":"rarrsim","⥵":"rarrap","⥶":"ltlarr","⥸":"gtrarr","⥹":"subrarr","⥻":"suplarr","⥼":"lfisht","⥽":"rfisht","⥾":"ufisht","⥿":"dfisht","⦚":"vzigzag","⦜":"vangrt","⦝":"angrtvbd","⦤":"ange","⦥":"range","⦦":"dwangle","⦧":"uwangle","⦨":"angmsdaa","⦩":"angmsdab","⦪":"angmsdac","⦫":"angmsdad","⦬":"angmsdae","⦭":"angmsdaf","⦮":"angmsdag","⦯":"angmsdah","⦰":"bemptyv","⦱":"demptyv","⦲":"cemptyv","⦳":"raemptyv","⦴":"laemptyv","⦵":"ohbar","⦶":"omid","⦷":"opar","⦹":"operp","⦻":"olcross","⦼":"odsold","⦾":"olcir","⦿":"ofcir","⧀":"olt","⧁":"ogt","⧂":"cirscir","⧃":"cirE","⧄":"solb","⧅":"bsolb","⧉":"boxbox","⧍":"trisb","⧎":"rtriltri","⧏":"LeftTriangleBar","⧏̸":"NotLeftTriangleBar","⧐":"RightTriangleBar","⧐̸":"NotRightTriangleBar","⧜":"iinfin","⧝":"infintie","⧞":"nvinfin","⧣":"eparsl","⧤":"smeparsl","⧥":"eqvparsl","⧫":"lozf","⧴":"RuleDelayed","⧶":"dsol","⨀":"xodot","⨁":"xoplus","⨂":"xotime","⨄":"xuplus","⨆":"xsqcup","⨍":"fpartint","⨐":"cirfnint","⨑":"awint","⨒":"rppolint","⨓":"scpolint","⨔":"npolint","⨕":"pointint","⨖":"quatint","⨗":"intlarhk","⨢":"pluscir","⨣":"plusacir","⨤":"simplus","⨥":"plusdu","⨦":"plussim","⨧":"plustwo","⨩":"mcomma","⨪":"minusdu","⨭":"loplus","⨮":"roplus","⨯":"Cross","⨰":"timesd","⨱":"timesbar","⨳":"smashp","⨴":"lotimes","⨵":"rotimes","⨶":"otimesas","⨷":"Otimes","⨸":"odiv","⨹":"triplus","⨺":"triminus","⨻":"tritime","⨼":"iprod","⨿":"amalg","⩀":"capdot","⩂":"ncup","⩃":"ncap","⩄":"capand","⩅":"cupor","⩆":"cupcap","⩇":"capcup","⩈":"cupbrcap","⩉":"capbrcup","⩊":"cupcup","⩋":"capcap","⩌":"ccups","⩍":"ccaps","⩐":"ccupssm","⩓":"And","⩔":"Or","⩕":"andand","⩖":"oror","⩗":"orslope","⩘":"andslope","⩚":"andv","⩛":"orv","⩜":"andd","⩝":"ord","⩟":"wedbar","⩦":"sdote","⩪":"simdot","⩭":"congdot","⩭̸":"ncongdot","⩮":"easter","⩯":"apacir","⩰":"apE","⩰̸":"napE","⩱":"eplus","⩲":"pluse","⩳":"Esim","⩷":"eDDot","⩸":"equivDD","⩹":"ltcir","⩺":"gtcir","⩻":"ltquest","⩼":"gtquest","⩽":"les","⩽̸":"nles","⩾":"ges","⩾̸":"nges","⩿":"lesdot","⪀":"gesdot","⪁":"lesdoto","⪂":"gesdoto","⪃":"lesdotor","⪄":"gesdotol","⪅":"lap","⪆":"gap","⪇":"lne","⪈":"gne","⪉":"lnap","⪊":"gnap","⪋":"lEg","⪌":"gEl","⪍":"lsime","⪎":"gsime","⪏":"lsimg","⪐":"gsiml","⪑":"lgE","⪒":"glE","⪓":"lesges","⪔":"gesles","⪕":"els","⪖":"egs","⪗":"elsdot","⪘":"egsdot","⪙":"el","⪚":"eg","⪝":"siml","⪞":"simg","⪟":"simlE","⪠":"simgE","⪡":"LessLess","⪡̸":"NotNestedLessLess","⪢":"GreaterGreater","⪢̸":"NotNestedGreaterGreater","⪤":"glj","⪥":"gla","⪦":"ltcc","⪧":"gtcc","⪨":"lescc","⪩":"gescc","⪪":"smt","⪫":"lat","⪬":"smte","⪬︀":"smtes","⪭":"late","⪭︀":"lates","⪮":"bumpE","⪯":"pre","⪯̸":"npre","⪰":"sce","⪰̸":"nsce","⪳":"prE","⪴":"scE","⪵":"prnE","⪶":"scnE","⪷":"prap","⪸":"scap","⪹":"prnap","⪺":"scnap","⪻":"Pr","⪼":"Sc","⪽":"subdot","⪾":"supdot","⪿":"subplus","⫀":"supplus","⫁":"submult","⫂":"supmult","⫃":"subedot","⫄":"supedot","⫅":"subE","⫅̸":"nsubE","⫆":"supE","⫆̸":"nsupE","⫇":"subsim","⫈":"supsim","⫋︀":"vsubnE","⫋":"subnE","⫌︀":"vsupnE","⫌":"supnE","⫏":"csub","⫐":"csup","⫑":"csube","⫒":"csupe","⫓":"subsup","⫔":"supsub","⫕":"subsub","⫖":"supsup","⫗":"suphsub","⫘":"supdsub","⫙":"forkv","⫚":"topfork","⫛":"mlcp","⫤":"Dashv","⫦":"Vdashl","⫧":"Barv","⫨":"vBar","⫩":"vBarv","⫫":"Vbar","⫬":"Not","⫭":"bNot","⫮":"rnmid","⫯":"cirmid","⫰":"midcir","⫱":"topcir","⫲":"nhpar","⫳":"parsim","⫽":"parsl","⫽⃥":"nparsl","♭":"flat","♮":"natur","♯":"sharp","¤":"curren","¢":"cent",$:"dollar","£":"pound","¥":"yen","€":"euro","¹":"sup1","½":"half","⅓":"frac13","¼":"frac14","⅕":"frac15","⅙":"frac16","⅛":"frac18","²":"sup2","⅔":"frac23","⅖":"frac25","³":"sup3","¾":"frac34","⅗":"frac35","⅜":"frac38","⅘":"frac45","⅚":"frac56","⅝":"frac58","⅞":"frac78","𝒶":"ascr","𝕒":"aopf","𝔞":"afr","𝔸":"Aopf","𝔄":"Afr","𝒜":"Ascr","ª":"ordf","á":"aacute","Á":"Aacute","à":"agrave","À":"Agrave","ă":"abreve","Ă":"Abreve","â":"acirc","Â":"Acirc","å":"aring","Å":"angst","ä":"auml","Ä":"Auml","ã":"atilde","Ã":"Atilde","ą":"aogon","Ą":"Aogon","ā":"amacr","Ā":"Amacr","æ":"aelig","Æ":"AElig","𝒷":"bscr","𝕓":"bopf","𝔟":"bfr","𝔹":"Bopf","ℬ":"Bscr","𝔅":"Bfr","𝔠":"cfr","𝒸":"cscr","𝕔":"copf","ℭ":"Cfr","𝒞":"Cscr","ℂ":"Copf","ć":"cacute","Ć":"Cacute","ĉ":"ccirc","Ĉ":"Ccirc","č":"ccaron","Č":"Ccaron","ċ":"cdot","Ċ":"Cdot","ç":"ccedil","Ç":"Ccedil","℅":"incare","𝔡":"dfr","ⅆ":"dd","𝕕":"dopf","𝒹":"dscr","𝒟":"Dscr","𝔇":"Dfr","ⅅ":"DD","𝔻":"Dopf","ď":"dcaron","Ď":"Dcaron","đ":"dstrok","Đ":"Dstrok","ð":"eth","Ð":"ETH","ⅇ":"ee","ℯ":"escr","𝔢":"efr","𝕖":"eopf","ℰ":"Escr","𝔈":"Efr","𝔼":"Eopf","é":"eacute","É":"Eacute","è":"egrave","È":"Egrave","ê":"ecirc","Ê":"Ecirc","ě":"ecaron","Ě":"Ecaron","ë":"euml","Ë":"Euml","ė":"edot","Ė":"Edot","ę":"eogon","Ę":"Eogon","ē":"emacr","Ē":"Emacr","𝔣":"ffr","𝕗":"fopf","𝒻":"fscr","𝔉":"Ffr","𝔽":"Fopf","ℱ":"Fscr","ﬀ":"fflig","ﬃ":"ffilig","ﬄ":"ffllig","ﬁ":"filig",fj:"fjlig","ﬂ":"fllig","ƒ":"fnof","ℊ":"gscr","𝕘":"gopf","𝔤":"gfr","𝒢":"Gscr","𝔾":"Gopf","𝔊":"Gfr","ǵ":"gacute","ğ":"gbreve","Ğ":"Gbreve","ĝ":"gcirc","Ĝ":"Gcirc","ġ":"gdot","Ġ":"Gdot","Ģ":"Gcedil","𝔥":"hfr","ℎ":"planckh","𝒽":"hscr","𝕙":"hopf","ℋ":"Hscr","ℌ":"Hfr","ℍ":"Hopf","ĥ":"hcirc","Ĥ":"Hcirc","ℏ":"hbar","ħ":"hstrok","Ħ":"Hstrok","𝕚":"iopf","𝔦":"ifr","𝒾":"iscr","ⅈ":"ii","𝕀":"Iopf","ℐ":"Iscr","ℑ":"Im","í":"iacute","Í":"Iacute","ì":"igrave","Ì":"Igrave","î":"icirc","Î":"Icirc","ï":"iuml","Ï":"Iuml","ĩ":"itilde","Ĩ":"Itilde","İ":"Idot","į":"iogon","Į":"Iogon","ī":"imacr","Ī":"Imacr","ĳ":"ijlig","Ĳ":"IJlig","ı":"imath","𝒿":"jscr","𝕛":"jopf","𝔧":"jfr","𝒥":"Jscr","𝔍":"Jfr","𝕁":"Jopf","ĵ":"jcirc","Ĵ":"Jcirc","ȷ":"jmath","𝕜":"kopf","𝓀":"kscr","𝔨":"kfr","𝒦":"Kscr","𝕂":"Kopf","𝔎":"Kfr","ķ":"kcedil","Ķ":"Kcedil","𝔩":"lfr","𝓁":"lscr","ℓ":"ell","𝕝":"lopf","ℒ":"Lscr","𝔏":"Lfr","𝕃":"Lopf","ĺ":"lacute","Ĺ":"Lacute","ľ":"lcaron","Ľ":"Lcaron","ļ":"lcedil","Ļ":"Lcedil","ł":"lstrok","Ł":"Lstrok","ŀ":"lmidot","Ŀ":"Lmidot","𝔪":"mfr","𝕞":"mopf","𝓂":"mscr","𝔐":"Mfr","𝕄":"Mopf","ℳ":"Mscr","𝔫":"nfr","𝕟":"nopf","𝓃":"nscr","ℕ":"Nopf","𝒩":"Nscr","𝔑":"Nfr","ń":"nacute","Ń":"Nacute","ň":"ncaron","Ň":"Ncaron","ñ":"ntilde","Ñ":"Ntilde","ņ":"ncedil","Ņ":"Ncedil","№":"numero","ŋ":"eng","Ŋ":"ENG","𝕠":"oopf","𝔬":"ofr","ℴ":"oscr","𝒪":"Oscr","𝔒":"Ofr","𝕆":"Oopf","º":"ordm","ó":"oacute","Ó":"Oacute","ò":"ograve","Ò":"Ograve","ô":"ocirc","Ô":"Ocirc","ö":"ouml","Ö":"Ouml","ő":"odblac","Ő":"Odblac","õ":"otilde","Õ":"Otilde","ø":"oslash","Ø":"Oslash","ō":"omacr","Ō":"Omacr","œ":"oelig","Œ":"OElig","𝔭":"pfr","𝓅":"pscr","𝕡":"popf","ℙ":"Popf","𝔓":"Pfr","𝒫":"Pscr","𝕢":"qopf","𝔮":"qfr","𝓆":"qscr","𝒬":"Qscr","𝔔":"Qfr","ℚ":"Qopf","ĸ":"kgreen","𝔯":"rfr","𝕣":"ropf","𝓇":"rscr","ℛ":"Rscr","ℜ":"Re","ℝ":"Ropf","ŕ":"racute","Ŕ":"Racute","ř":"rcaron","Ř":"Rcaron","ŗ":"rcedil","Ŗ":"Rcedil","𝕤":"sopf","𝓈":"sscr","𝔰":"sfr","𝕊":"Sopf","𝔖":"Sfr","𝒮":"Sscr","Ⓢ":"oS","ś":"sacute","Ś":"Sacute","ŝ":"scirc","Ŝ":"Scirc","š":"scaron","Š":"Scaron","ş":"scedil","Ş":"Scedil","ß":"szlig","𝔱":"tfr","𝓉":"tscr","𝕥":"topf","𝒯":"Tscr","𝔗":"Tfr","𝕋":"Topf","ť":"tcaron","Ť":"Tcaron","ţ":"tcedil","Ţ":"Tcedil","™":"trade","ŧ":"tstrok","Ŧ":"Tstrok","𝓊":"uscr","𝕦":"uopf","𝔲":"ufr","𝕌":"Uopf","𝔘":"Ufr","𝒰":"Uscr","ú":"uacute","Ú":"Uacute","ù":"ugrave","Ù":"Ugrave","ŭ":"ubreve","Ŭ":"Ubreve","û":"ucirc","Û":"Ucirc","ů":"uring","Ů":"Uring","ü":"uuml","Ü":"Uuml","ű":"udblac","Ű":"Udblac","ũ":"utilde","Ũ":"Utilde","ų":"uogon","Ų":"Uogon","ū":"umacr","Ū":"Umacr","𝔳":"vfr","𝕧":"vopf","𝓋":"vscr","𝔙":"Vfr","𝕍":"Vopf","𝒱":"Vscr","𝕨":"wopf","𝓌":"wscr","𝔴":"wfr","𝒲":"Wscr","𝕎":"Wopf","𝔚":"Wfr","ŵ":"wcirc","Ŵ":"Wcirc","𝔵":"xfr","𝓍":"xscr","𝕩":"xopf","𝕏":"Xopf","𝔛":"Xfr","𝒳":"Xscr","𝔶":"yfr","𝓎":"yscr","𝕪":"yopf","𝒴":"Yscr","𝔜":"Yfr","𝕐":"Yopf","ý":"yacute","Ý":"Yacute","ŷ":"ycirc","Ŷ":"Ycirc","ÿ":"yuml","Ÿ":"Yuml","𝓏":"zscr","𝔷":"zfr","𝕫":"zopf","ℨ":"Zfr","ℤ":"Zopf","𝒵":"Zscr","ź":"zacute","Ź":"Zacute","ž":"zcaron","Ž":"Zcaron","ż":"zdot","Ż":"Zdot","Ƶ":"imped","þ":"thorn","Þ":"THORN","ŉ":"napos","α":"alpha","Α":"Alpha","β":"beta","Β":"Beta","γ":"gamma","Γ":"Gamma","δ":"delta","Δ":"Delta","ε":"epsi","ϵ":"epsiv","Ε":"Epsilon","ϝ":"gammad","Ϝ":"Gammad","ζ":"zeta","Ζ":"Zeta","η":"eta","Η":"Eta","θ":"theta","ϑ":"thetav","Θ":"Theta","ι":"iota","Ι":"Iota","κ":"kappa","ϰ":"kappav","Κ":"Kappa","λ":"lambda","Λ":"Lambda","μ":"mu","µ":"micro","Μ":"Mu","ν":"nu","Ν":"Nu","ξ":"xi","Ξ":"Xi","ο":"omicron","Ο":"Omicron","π":"pi","ϖ":"piv","Π":"Pi","ρ":"rho","ϱ":"rhov","Ρ":"Rho","σ":"sigma","Σ":"Sigma","ς":"sigmaf","τ":"tau","Τ":"Tau","υ":"upsi","Υ":"Upsilon","ϒ":"Upsi","φ":"phi","ϕ":"phiv","Φ":"Phi","χ":"chi","Χ":"Chi","ψ":"psi","Ψ":"Psi","ω":"omega","Ω":"ohm","а":"acy","А":"Acy","б":"bcy","Б":"Bcy","в":"vcy","В":"Vcy","г":"gcy","Г":"Gcy","ѓ":"gjcy","Ѓ":"GJcy","д":"dcy","Д":"Dcy","ђ":"djcy","Ђ":"DJcy","е":"iecy","Е":"IEcy","ё":"iocy","Ё":"IOcy","є":"jukcy","Є":"Jukcy","ж":"zhcy","Ж":"ZHcy","з":"zcy","З":"Zcy","ѕ":"dscy","Ѕ":"DScy","и":"icy","И":"Icy","і":"iukcy","І":"Iukcy","ї":"yicy","Ї":"YIcy","й":"jcy","Й":"Jcy","ј":"jsercy","Ј":"Jsercy","к":"kcy","К":"Kcy","ќ":"kjcy","Ќ":"KJcy","л":"lcy","Л":"Lcy","љ":"ljcy","Љ":"LJcy","м":"mcy","М":"Mcy","н":"ncy","Н":"Ncy","њ":"njcy","Њ":"NJcy","о":"ocy","О":"Ocy","п":"pcy","П":"Pcy","р":"rcy","Р":"Rcy","с":"scy","С":"Scy","т":"tcy","Т":"Tcy","ћ":"tshcy","Ћ":"TSHcy","у":"ucy","У":"Ucy","ў":"ubrcy","Ў":"Ubrcy","ф":"fcy","Ф":"Fcy","х":"khcy","Х":"KHcy","ц":"tscy","Ц":"TScy","ч":"chcy","Ч":"CHcy","џ":"dzcy","Џ":"DZcy","ш":"shcy","Ш":"SHcy","щ":"shchcy","Щ":"SHCHcy","ъ":"hardcy","Ъ":"HARDcy","ы":"ycy","Ы":"Ycy","ь":"softcy","Ь":"SOFTcy","э":"ecy","Э":"Ecy","ю":"yucy","Ю":"YUcy","я":"yacy","Я":"YAcy","ℵ":"aleph","ℶ":"beth","ℷ":"gimel","ℸ":"daleth"},h=/["&'<>`]/g,u={'"':"&quot;","&":"&amp;","'":"&#x27;","<":"&lt;",">":"&gt;","`":"&#x60;"},f=/&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/,y=/[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,v=/&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g,_={aacute:"á",Aacute:"Á",abreve:"ă",Abreve:"Ă",ac:"∾",acd:"∿",acE:"∾̳",acirc:"â",Acirc:"Â",acute:"´",acy:"а",Acy:"А",aelig:"æ",AElig:"Æ",af:"⁡",afr:"𝔞",Afr:"𝔄",agrave:"à",Agrave:"À",alefsym:"ℵ",aleph:"ℵ",alpha:"α",Alpha:"Α",amacr:"ā",Amacr:"Ā",amalg:"⨿",amp:"&",AMP:"&",and:"∧",And:"⩓",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",aogon:"ą",Aogon:"Ą",aopf:"𝕒",Aopf:"𝔸",ap:"≈",apacir:"⩯",ape:"≊",apE:"⩰",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",aring:"å",Aring:"Å",ascr:"𝒶",Ascr:"𝒜",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",barwed:"⌅",Barwed:"⌆",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",bcy:"б",Bcy:"Б",bdquo:"„",becaus:"∵",because:"∵",Because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",beta:"β",Beta:"Β",beth:"ℶ",between:"≬",bfr:"𝔟",Bfr:"𝔅",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bnot:"⌐",bNot:"⫭",bopf:"𝕓",Bopf:"𝔹",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxdl:"┐",boxdL:"╕",boxDl:"╖",boxDL:"╗",boxdr:"┌",boxdR:"╒",boxDr:"╓",boxDR:"╔",boxh:"─",boxH:"═",boxhd:"┬",boxhD:"╥",boxHd:"╤",boxHD:"╦",boxhu:"┴",boxhU:"╨",boxHu:"╧",boxHU:"╩",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxul:"┘",boxuL:"╛",boxUl:"╜",boxUL:"╝",boxur:"└",boxuR:"╘",boxUr:"╙",boxUR:"╚",boxv:"│",boxV:"║",boxvh:"┼",boxvH:"╪",boxVh:"╫",boxVH:"╬",boxvl:"┤",boxvL:"╡",boxVl:"╢",boxVL:"╣",boxvr:"├",boxvR:"╞",boxVr:"╟",boxVR:"╠",bprime:"‵",breve:"˘",Breve:"˘",brvbar:"¦",bscr:"𝒷",Bscr:"ℬ",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpe:"≏",bumpE:"⪮",bumpeq:"≏",Bumpeq:"≎",cacute:"ć",Cacute:"Ć",cap:"∩",Cap:"⋒",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",ccaron:"č",Ccaron:"Č",ccedil:"ç",Ccedil:"Ç",ccirc:"ĉ",Ccirc:"Ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",cdot:"ċ",Cdot:"Ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",centerdot:"·",CenterDot:"·",cfr:"𝔠",Cfr:"ℭ",chcy:"ч",CHcy:"Ч",check:"✓",checkmark:"✓",chi:"χ",Chi:"Χ",cir:"○",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cire:"≗",cirE:"⧃",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",colon:":",Colon:"∷",colone:"≔",Colone:"⩴",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",conint:"∮",Conint:"∯",ContourIntegral:"∮",copf:"𝕔",Copf:"ℂ",coprod:"∐",Coproduct:"∐",copy:"©",COPY:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",cross:"✗",Cross:"⨯",cscr:"𝒸",Cscr:"𝒞",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",cup:"∪",Cup:"⋓",cupbrcap:"⩈",cupcap:"⩆",CupCap:"≍",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",dagger:"†",Dagger:"‡",daleth:"ℸ",darr:"↓",dArr:"⇓",Darr:"↡",dash:"‐",dashv:"⊣",Dashv:"⫤",dbkarow:"⤏",dblac:"˝",dcaron:"ď",Dcaron:"Ď",dcy:"д",Dcy:"Д",dd:"ⅆ",DD:"ⅅ",ddagger:"‡",ddarr:"⇊",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",delta:"δ",Delta:"Δ",demptyv:"⦱",dfisht:"⥿",dfr:"𝔡",Dfr:"𝔇",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",diamond:"⋄",Diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",djcy:"ђ",DJcy:"Ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",dopf:"𝕕",Dopf:"𝔻",dot:"˙",Dot:"¨",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",downarrow:"↓",Downarrow:"⇓",DownArrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",dscr:"𝒹",Dscr:"𝒟",dscy:"ѕ",DScy:"Ѕ",dsol:"⧶",dstrok:"đ",Dstrok:"Đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",dzcy:"џ",DZcy:"Џ",dzigrarr:"⟿",eacute:"é",Eacute:"É",easter:"⩮",ecaron:"ě",Ecaron:"Ě",ecir:"≖",ecirc:"ê",Ecirc:"Ê",ecolon:"≕",ecy:"э",Ecy:"Э",eDDot:"⩷",edot:"ė",eDot:"≑",Edot:"Ė",ee:"ⅇ",efDot:"≒",efr:"𝔢",Efr:"𝔈",eg:"⪚",egrave:"è",Egrave:"È",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",emacr:"ē",Emacr:"Ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp:" ",emsp13:" ",emsp14:" ",eng:"ŋ",ENG:"Ŋ",ensp:" ",eogon:"ę",Eogon:"Ę",eopf:"𝕖",Eopf:"𝔼",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",epsilon:"ε",Epsilon:"Ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",escr:"ℯ",Escr:"ℰ",esdot:"≐",esim:"≂",Esim:"⩳",eta:"η",Eta:"Η",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",exponentiale:"ⅇ",ExponentialE:"ⅇ",fallingdotseq:"≒",fcy:"ф",Fcy:"Ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",ffr:"𝔣",Ffr:"𝔉",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",fopf:"𝕗",Fopf:"𝔽",forall:"∀",ForAll:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",fscr:"𝒻",Fscr:"ℱ",gacute:"ǵ",gamma:"γ",Gamma:"Γ",gammad:"ϝ",Gammad:"Ϝ",gap:"⪆",gbreve:"ğ",Gbreve:"Ğ",Gcedil:"Ģ",gcirc:"ĝ",Gcirc:"Ĝ",gcy:"г",Gcy:"Г",gdot:"ġ",Gdot:"Ġ",ge:"≥",gE:"≧",gel:"⋛",gEl:"⪌",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",gfr:"𝔤",Gfr:"𝔊",gg:"≫",Gg:"⋙",ggg:"⋙",gimel:"ℷ",gjcy:"ѓ",GJcy:"Ѓ",gl:"≷",gla:"⪥",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gne:"⪈",gnE:"≩",gneq:"⪈",gneqq:"≩",gnsim:"⋧",gopf:"𝕘",Gopf:"𝔾",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",gscr:"ℊ",Gscr:"𝒢",gsim:"≳",gsime:"⪎",gsiml:"⪐",gt:">",Gt:"≫",GT:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",hardcy:"ъ",HARDcy:"Ъ",harr:"↔",hArr:"⇔",harrcir:"⥈",harrw:"↭",Hat:"^",hbar:"ℏ",hcirc:"ĥ",Hcirc:"Ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",hfr:"𝔥",Hfr:"ℌ",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",hopf:"𝕙",Hopf:"ℍ",horbar:"―",HorizontalLine:"─",hscr:"𝒽",Hscr:"ℋ",hslash:"ℏ",hstrok:"ħ",Hstrok:"Ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",iacute:"í",Iacute:"Í",ic:"⁣",icirc:"î",Icirc:"Î",icy:"и",Icy:"И",Idot:"İ",iecy:"е",IEcy:"Е",iexcl:"¡",iff:"⇔",ifr:"𝔦",Ifr:"ℑ",igrave:"ì",Igrave:"Ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",ijlig:"ĳ",IJlig:"Ĳ",Im:"ℑ",imacr:"ī",Imacr:"Ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",Implies:"⇒",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",int:"∫",Int:"∬",intcal:"⊺",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",iocy:"ё",IOcy:"Ё",iogon:"į",Iogon:"Į",iopf:"𝕚",Iopf:"𝕀",iota:"ι",Iota:"Ι",iprod:"⨼",iquest:"¿",iscr:"𝒾",Iscr:"ℐ",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",itilde:"ĩ",Itilde:"Ĩ",iukcy:"і",Iukcy:"І",iuml:"ï",Iuml:"Ï",jcirc:"ĵ",Jcirc:"Ĵ",jcy:"й",Jcy:"Й",jfr:"𝔧",Jfr:"𝔍",jmath:"ȷ",jopf:"𝕛",Jopf:"𝕁",jscr:"𝒿",Jscr:"𝒥",jsercy:"ј",Jsercy:"Ј",jukcy:"є",Jukcy:"Є",kappa:"κ",Kappa:"Κ",kappav:"ϰ",kcedil:"ķ",Kcedil:"Ķ",kcy:"к",Kcy:"К",kfr:"𝔨",Kfr:"𝔎",kgreen:"ĸ",khcy:"х",KHcy:"Х",kjcy:"ќ",KJcy:"Ќ",kopf:"𝕜",Kopf:"𝕂",kscr:"𝓀",Kscr:"𝒦",lAarr:"⇚",lacute:"ĺ",Lacute:"Ĺ",laemptyv:"⦴",lagran:"ℒ",lambda:"λ",Lambda:"Λ",lang:"⟨",Lang:"⟪",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",larr:"←",lArr:"⇐",Larr:"↞",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",latail:"⤙",lAtail:"⤛",late:"⪭",lates:"⪭︀",lbarr:"⤌",lBarr:"⤎",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",lcaron:"ľ",Lcaron:"Ľ",lcedil:"ļ",Lcedil:"Ļ",lceil:"⌈",lcub:"{",lcy:"л",Lcy:"Л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",le:"≤",lE:"≦",LeftAngleBracket:"⟨",leftarrow:"←",Leftarrow:"⇐",LeftArrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",leftrightarrow:"↔",Leftrightarrow:"⇔",LeftRightArrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",leg:"⋚",lEg:"⪋",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",lfr:"𝔩",Lfr:"𝔏",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",ljcy:"љ",LJcy:"Љ",ll:"≪",Ll:"⋘",llarr:"⇇",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",lmidot:"ŀ",Lmidot:"Ŀ",lmoust:"⎰",lmoustache:"⎰",lnap:"⪉",lnapprox:"⪉",lne:"⪇",lnE:"≨",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",longleftarrow:"⟵",Longleftarrow:"⟸",LongLeftArrow:"⟵",longleftrightarrow:"⟷",Longleftrightarrow:"⟺",LongLeftRightArrow:"⟷",longmapsto:"⟼",longrightarrow:"⟶",Longrightarrow:"⟹",LongRightArrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",lopf:"𝕝",Lopf:"𝕃",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",lscr:"𝓁",Lscr:"ℒ",lsh:"↰",Lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",lstrok:"ł",Lstrok:"Ł",lt:"<",Lt:"≪",LT:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",map:"↦",Map:"⤅",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",mcy:"м",Mcy:"М",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",mfr:"𝔪",Mfr:"𝔐",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",mopf:"𝕞",Mopf:"𝕄",mp:"∓",mscr:"𝓂",Mscr:"ℳ",mstpos:"∾",mu:"μ",Mu:"Μ",multimap:"⊸",mumap:"⊸",nabla:"∇",nacute:"ń",Nacute:"Ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",ncaron:"ň",Ncaron:"Ň",ncedil:"ņ",Ncedil:"Ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",ncy:"н",Ncy:"Н",ndash:"–",ne:"≠",nearhk:"⤤",nearr:"↗",neArr:"⇗",nearrow:"↗",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",nexist:"∄",nexists:"∄",nfr:"𝔫",Nfr:"𝔑",nge:"≱",ngE:"≧̸",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",ngt:"≯",nGt:"≫⃒",ngtr:"≯",nGtv:"≫̸",nharr:"↮",nhArr:"⇎",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",njcy:"њ",NJcy:"Њ",nlarr:"↚",nlArr:"⇍",nldr:"‥",nle:"≰",nlE:"≦̸",nleftarrow:"↚",nLeftarrow:"⇍",nleftrightarrow:"↮",nLeftrightarrow:"⇎",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nlt:"≮",nLt:"≪⃒",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",nopf:"𝕟",Nopf:"ℕ",not:"¬",Not:"⫬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrarr:"↛",nrArr:"⇏",nrarrc:"⤳̸",nrarrw:"↝̸",nrightarrow:"↛",nRightarrow:"⇏",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",nscr:"𝓃",Nscr:"𝒩",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsube:"⊈",nsubE:"⫅̸",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupe:"⊉",nsupE:"⫆̸",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",ntilde:"ñ",Ntilde:"Ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",nu:"ν",Nu:"Ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nvdash:"⊬",nvDash:"⊭",nVdash:"⊮",nVDash:"⊯",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwarr:"↖",nwArr:"⇖",nwarrow:"↖",nwnear:"⤧",oacute:"ó",Oacute:"Ó",oast:"⊛",ocir:"⊚",ocirc:"ô",Ocirc:"Ô",ocy:"о",Ocy:"О",odash:"⊝",odblac:"ő",Odblac:"Ő",odiv:"⨸",odot:"⊙",odsold:"⦼",oelig:"œ",OElig:"Œ",ofcir:"⦿",ofr:"𝔬",Ofr:"𝔒",ogon:"˛",ograve:"ò",Ograve:"Ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",omacr:"ō",Omacr:"Ō",omega:"ω",Omega:"Ω",omicron:"ο",Omicron:"Ο",omid:"⦶",ominus:"⊖",oopf:"𝕠",Oopf:"𝕆",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",or:"∨",Or:"⩔",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",oscr:"ℴ",Oscr:"𝒪",oslash:"ø",Oslash:"Ø",osol:"⊘",otilde:"õ",Otilde:"Õ",otimes:"⊗",Otimes:"⨷",otimesas:"⨶",ouml:"ö",Ouml:"Ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",pcy:"п",Pcy:"П",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",pfr:"𝔭",Pfr:"𝔓",phi:"φ",Phi:"Φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",pi:"π",Pi:"Π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",popf:"𝕡",Popf:"ℙ",pound:"£",pr:"≺",Pr:"⪻",prap:"⪷",prcue:"≼",pre:"⪯",prE:"⪳",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",prime:"′",Prime:"″",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportion:"∷",Proportional:"∝",propto:"∝",prsim:"≾",prurel:"⊰",pscr:"𝓅",Pscr:"𝒫",psi:"ψ",Psi:"Ψ",puncsp:" ",qfr:"𝔮",Qfr:"𝔔",qint:"⨌",qopf:"𝕢",Qopf:"ℚ",qprime:"⁗",qscr:"𝓆",Qscr:"𝒬",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",quot:'"',QUOT:'"',rAarr:"⇛",race:"∽̱",racute:"ŕ",Racute:"Ŕ",radic:"√",raemptyv:"⦳",rang:"⟩",Rang:"⟫",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",rarr:"→",rArr:"⇒",Rarr:"↠",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",rarrtl:"↣",Rarrtl:"⤖",rarrw:"↝",ratail:"⤚",rAtail:"⤜",ratio:"∶",rationals:"ℚ",rbarr:"⤍",rBarr:"⤏",RBarr:"⤐",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",rcaron:"ř",Rcaron:"Ř",rcedil:"ŗ",Rcedil:"Ŗ",rceil:"⌉",rcub:"}",rcy:"р",Rcy:"Р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",Re:"ℜ",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",reg:"®",REG:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",rfr:"𝔯",Rfr:"ℜ",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",rho:"ρ",Rho:"Ρ",rhov:"ϱ",RightAngleBracket:"⟩",rightarrow:"→",Rightarrow:"⇒",RightArrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",ropf:"𝕣",Ropf:"ℝ",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",rscr:"𝓇",Rscr:"ℛ",rsh:"↱",Rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",sacute:"ś",Sacute:"Ś",sbquo:"‚",sc:"≻",Sc:"⪼",scap:"⪸",scaron:"š",Scaron:"Š",sccue:"≽",sce:"⪰",scE:"⪴",scedil:"ş",Scedil:"Ş",scirc:"ŝ",Scirc:"Ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",scy:"с",Scy:"С",sdot:"⋅",sdotb:"⊡",sdote:"⩦",searhk:"⤥",searr:"↘",seArr:"⇘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",sfr:"𝔰",Sfr:"𝔖",sfrown:"⌢",sharp:"♯",shchcy:"щ",SHCHcy:"Щ",shcy:"ш",SHcy:"Ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",sigma:"σ",Sigma:"Σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",softcy:"ь",SOFTcy:"Ь",sol:"/",solb:"⧄",solbar:"⌿",sopf:"𝕤",Sopf:"𝕊",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",square:"□",Square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squf:"▪",srarr:"→",sscr:"𝓈",Sscr:"𝒮",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",star:"☆",Star:"⋆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",sub:"⊂",Sub:"⋐",subdot:"⪽",sube:"⊆",subE:"⫅",subedot:"⫃",submult:"⫁",subne:"⊊",subnE:"⫋",subplus:"⪿",subrarr:"⥹",subset:"⊂",Subset:"⋐",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",sum:"∑",Sum:"∑",sung:"♪",sup:"⊃",Sup:"⋑",sup1:"¹",sup2:"²",sup3:"³",supdot:"⪾",supdsub:"⫘",supe:"⊇",supE:"⫆",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supne:"⊋",supnE:"⫌",supplus:"⫀",supset:"⊃",Supset:"⋑",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swarr:"↙",swArr:"⇙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\t",target:"⌖",tau:"τ",Tau:"Τ",tbrk:"⎴",tcaron:"ť",Tcaron:"Ť",tcedil:"ţ",Tcedil:"Ţ",tcy:"т",Tcy:"Т",tdot:"⃛",telrec:"⌕",tfr:"𝔱",Tfr:"𝔗",there4:"∴",therefore:"∴",Therefore:"∴",theta:"θ",Theta:"Θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",thinsp:" ",ThinSpace:" ",thkap:"≈",thksim:"∼",thorn:"þ",THORN:"Þ",tilde:"˜",Tilde:"∼",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",topf:"𝕥",Topf:"𝕋",topfork:"⫚",tosa:"⤩",tprime:"‴",trade:"™",TRADE:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",tscr:"𝓉",Tscr:"𝒯",tscy:"ц",TScy:"Ц",tshcy:"ћ",TSHcy:"Ћ",tstrok:"ŧ",Tstrok:"Ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",uacute:"ú",Uacute:"Ú",uarr:"↑",uArr:"⇑",Uarr:"↟",Uarrocir:"⥉",ubrcy:"ў",Ubrcy:"Ў",ubreve:"ŭ",Ubreve:"Ŭ",ucirc:"û",Ucirc:"Û",ucy:"у",Ucy:"У",udarr:"⇅",udblac:"ű",Udblac:"Ű",udhar:"⥮",ufisht:"⥾",ufr:"𝔲",Ufr:"𝔘",ugrave:"ù",Ugrave:"Ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",umacr:"ū",Umacr:"Ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",uogon:"ų",Uogon:"Ų",uopf:"𝕦",Uopf:"𝕌",uparrow:"↑",Uparrow:"⇑",UpArrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",updownarrow:"↕",Updownarrow:"⇕",UpDownArrow:"↕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",upsi:"υ",Upsi:"ϒ",upsih:"ϒ",upsilon:"υ",Upsilon:"Υ",UpTee:"⊥",UpTeeArrow:"↥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",uring:"ů",Uring:"Ů",urtri:"◹",uscr:"𝓊",Uscr:"𝒰",utdot:"⋰",utilde:"ũ",Utilde:"Ũ",utri:"▵",utrif:"▴",uuarr:"⇈",uuml:"ü",Uuml:"Ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",varr:"↕",vArr:"⇕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",vBar:"⫨",Vbar:"⫫",vBarv:"⫩",vcy:"в",Vcy:"В",vdash:"⊢",vDash:"⊨",Vdash:"⊩",VDash:"⊫",Vdashl:"⫦",vee:"∨",Vee:"⋁",veebar:"⊻",veeeq:"≚",vellip:"⋮",verbar:"|",Verbar:"‖",vert:"|",Vert:"‖",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",vfr:"𝔳",Vfr:"𝔙",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",vopf:"𝕧",Vopf:"𝕍",vprop:"∝",vrtri:"⊳",vscr:"𝓋",Vscr:"𝒱",vsubne:"⊊︀",vsubnE:"⫋︀",vsupne:"⊋︀",vsupnE:"⫌︀",Vvdash:"⊪",vzigzag:"⦚",wcirc:"ŵ",Wcirc:"Ŵ",wedbar:"⩟",wedge:"∧",Wedge:"⋀",wedgeq:"≙",weierp:"℘",wfr:"𝔴",Wfr:"𝔚",wopf:"𝕨",Wopf:"𝕎",wp:"℘",wr:"≀",wreath:"≀",wscr:"𝓌",Wscr:"𝒲",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",xfr:"𝔵",Xfr:"𝔛",xharr:"⟷",xhArr:"⟺",xi:"ξ",Xi:"Ξ",xlarr:"⟵",xlArr:"⟸",xmap:"⟼",xnis:"⋻",xodot:"⨀",xopf:"𝕩",Xopf:"𝕏",xoplus:"⨁",xotime:"⨂",xrarr:"⟶",xrArr:"⟹",xscr:"𝓍",Xscr:"𝒳",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",yacute:"ý",Yacute:"Ý",yacy:"я",YAcy:"Я",ycirc:"ŷ",Ycirc:"Ŷ",ycy:"ы",Ycy:"Ы",yen:"¥",yfr:"𝔶",Yfr:"𝔜",yicy:"ї",YIcy:"Ї",yopf:"𝕪",Yopf:"𝕐",yscr:"𝓎",Yscr:"𝒴",yucy:"ю",YUcy:"Ю",yuml:"ÿ",Yuml:"Ÿ",zacute:"ź",Zacute:"Ź",zcaron:"ž",Zcaron:"Ž",zcy:"з",Zcy:"З",zdot:"ż",Zdot:"Ż",zeetrf:"ℨ",ZeroWidthSpace:"​",zeta:"ζ",Zeta:"Ζ",zfr:"𝔷",Zfr:"ℨ",zhcy:"ж",ZHcy:"Ж",zigrarr:"⇝",zopf:"𝕫",Zopf:"ℤ",zscr:"𝓏",Zscr:"𝒵",zwj:"‍",zwnj:"‌"},g={aacute:"á",Aacute:"Á",acirc:"â",Acirc:"Â",acute:"´",aelig:"æ",AElig:"Æ",agrave:"à",Agrave:"À",amp:"&",AMP:"&",aring:"å",Aring:"Å",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",brvbar:"¦",ccedil:"ç",Ccedil:"Ç",cedil:"¸",cent:"¢",copy:"©",COPY:"©",curren:"¤",deg:"°",divide:"÷",eacute:"é",Eacute:"É",ecirc:"ê",Ecirc:"Ê",egrave:"è",Egrave:"È",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",frac12:"½",frac14:"¼",frac34:"¾",gt:">",GT:">",iacute:"í",Iacute:"Í",icirc:"î",Icirc:"Î",iexcl:"¡",igrave:"ì",Igrave:"Ì",iquest:"¿",iuml:"ï",Iuml:"Ï",laquo:"«",lt:"<",LT:"<",macr:"¯",micro:"µ",middot:"·",nbsp:" ",not:"¬",ntilde:"ñ",Ntilde:"Ñ",oacute:"ó",Oacute:"Ó",ocirc:"ô",Ocirc:"Ô",ograve:"ò",Ograve:"Ò",ordf:"ª",ordm:"º",oslash:"ø",Oslash:"Ø",otilde:"õ",Otilde:"Õ",ouml:"ö",Ouml:"Ö",para:"¶",plusmn:"±",pound:"£",quot:'"',QUOT:'"',raquo:"»",reg:"®",REG:"®",sect:"§",shy:"­",sup1:"¹",sup2:"²",sup3:"³",szlig:"ß",thorn:"þ",THORN:"Þ",times:"×",uacute:"ú",Uacute:"Ú",ucirc:"û",Ucirc:"Û",ugrave:"ù",Ugrave:"Ù",uml:"¨",uuml:"ü",Uuml:"Ü",yacute:"ý",Yacute:"Ý",yen:"¥",yuml:"ÿ"},b={0:"�",128:"€",130:"‚",131:"ƒ",132:"„",133:"…",134:"†",135:"‡",136:"ˆ",137:"‰",138:"Š",139:"‹",140:"Œ",142:"Ž",145:"‘",146:"’",147:"“",148:"”",149:"•",150:"–",151:"—",152:"˜",153:"™",154:"š",155:"›",156:"œ",158:"ž",159:"Ÿ"},w=[1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65e3,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111],T=String.fromCharCode,V={}.hasOwnProperty,k=function(e,t){return V.call(e,t)},S=function(e,t){if(!e)return t;var i,r={};for(i in t)r[i]=k(e,i)?e[i]:t[i];return r},x=function(e,t){var i="";return e>=55296&&e<=57343||e>1114111?(t&&D("character reference outside the permissible Unicode range"),"�"):k(b,e)?(t&&D("disallowed character reference"),b[e]):(t&&function(e,t){for(var i=-1,r=e.length;++i<r;)if(e[i]==t)return!0;return!1}(w,e)&&D("disallowed character reference"),e>65535&&(i+=T((e-=65536)>>>10&1023|55296),e=56320|1023&e),i+=T(e))},A=function(e){return"&#x"+e.toString(16).toUpperCase()+";"},P=function(e){return"&#"+e+";"},D=function(e){throw Error("Parse error: "+e)},I=function e(t,i){(i=S(i,e.options)).strict&&y.test(t)&&D("forbidden code point");var r=i.encodeEverything,o=i.useNamedReferences,a=i.allowUnsafeSymbols,n=i.decimal?P:A,s=function(e){return n(e.charCodeAt(0))};return r?(t=t.replace(d,(function(e){return o&&k(c,e)?"&"+c[e]+";":s(e)})),o&&(t=t.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;").replace(/&#x66;&#x6A;/g,"&fjlig;")),o&&(t=t.replace(m,(function(e){return"&"+c[e]+";"})))):o?(a||(t=t.replace(h,(function(e){return"&"+c[e]+";"}))),t=(t=t.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;")).replace(m,(function(e){return"&"+c[e]+";"}))):a||(t=t.replace(h,s)),t.replace(p,(function(e){var t=e.charCodeAt(0),i=e.charCodeAt(1);return n(1024*(t-55296)+i-56320+65536)})).replace(l,s)};I.options={allowUnsafeSymbols:!1,encodeEverything:!1,strict:!1,useNamedReferences:!1,decimal:!1};var E=function e(t,i){var r=(i=S(i,e.options)).strict;return r&&f.test(t)&&D("malformed character reference"),t.replace(v,(function(e,t,o,a,n,s,p,d,l){var m,c,h,u,f,y;return t?_[f=t]:o?(f=o,(y=a)&&i.isAttributeValue?(r&&"="==y&&D("`&` did not start a character reference"),e):(r&&D("named character reference was not terminated by a semicolon"),g[f]+(y||""))):n?(h=n,c=s,r&&!c&&D("character reference was not terminated by a semicolon"),m=parseInt(h,10),x(m,r)):p?(u=p,c=d,r&&!c&&D("character reference was not terminated by a semicolon"),m=parseInt(u,16),x(m,r)):(r&&D("named character reference was not terminated by a semicolon"),e)}))};E.options={isAttributeValue:!1,strict:!1};var L={version:"1.2.0",encode:I,decode:E,escape:function(e){return e.replace(h,(function(e){return u[e]}))},unescape:E};void 0===(o=function(){return L}.call(t,i,t,e))||(e.exports=o)}()}).call(this,i("RoC8")(e),i("pCvA"))},PAOY:function(e,t,i){var r=i("iMLE")({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"});e.exports=r},PE9J:function(e,t){e.exports=function(e,t){if(null==e)return{};var i,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)i=a[r],t.indexOf(i)>=0||(o[i]=e[i]);return o}},PHxc:function(e,t,i){var r=i("cm7J");e.exports=function(e,t){var i=this.__data__,o=r(i,e);return o<0?(++this.size,i.push([e,t])):i[o][1]=t,this}},PUr6:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("7bue"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},PWxN:function(e,t,i){var r=i("NmMy"),o=i("0711"),a=i("JZQH"),n=i("sWZd"),s=i("V2ZB"),p=i("fdVR"),d=i("yF7r"),l=i("zIph"),m=d((function(e,t){var i={};if(null==e)return i;var d=!1;t=r(t,(function(t){return t=n(t,e),d||(d=t.length>1),t})),s(e,l(e),i),d&&(i=o(i,7,p));for(var m=t.length;m--;)a(i,t[m]);return i}));e.exports=m},PYDc:function(e,t,i){var r=i("FEiO");e.exports=function(){this.__data__=r?r(null):{},this.size=0}},PbS7:function(e,t,i){var r=i("+dZb")("merge",i("HVn3"));r.placeholder=i("IOY3"),e.exports=r},PlvX:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("CvO6"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},PqlX:function(e,t){var i=Array.isArray;e.exports=i},"Q+mf":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("DiqA"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},Q0Pj:function(e,t,i){"use strict";t.a={files:{FileCategory:{fields:[{description:"jpg, png, gif, and more.",parameter:"image",type:{primitive:"Void"}},{description:"doc, docx, txt, and more.",parameter:"document",type:{primitive:"Void"}},{description:"pdf.",parameter:"pdf",type:{primitive:"Void"}},{description:"xlsx, xls, csv, and more.",parameter:"spreadsheet",type:{primitive:"Void"}},{description:"ppt, pptx, key, and more.",parameter:"presentation",type:{primitive:"Void"}},{description:"mp3, wav, mid, and more.",parameter:"audio",type:{primitive:"Void"}},{description:"mov, wmv, mp4, and more.",parameter:"video",type:{primitive:"Void"}},{description:"dropbox folder.",parameter:"folder",type:{primitive:"Void"}},{description:"dropbox paper doc.",parameter:"paper",type:{primitive:"Void"}},{description:"any file not in one of the categories above.",parameter:"others",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FileStatus:{fields:[{parameter:"active",type:{primitive:"Void"}},{parameter:"deleted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},HighlightSpan:{fields:[{description:"String to be determined whether it should be highlighted or not.",parameter:"highlight_str",type:{primitive:"String"}},{description:"The string should be highlighted or not.",parameter:"is_highlighted",type:{primitive:"Boolean"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},MetadataV2:{description:"Metadata for a file, folder or other resource types.",fields:[{parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SearchError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{parameter:"invalid_argument",type:{optional:{primitive:"String"}}},{description:"Something went wrong, please try again.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SearchMatchFieldOptions:{fields:[{description:"Whether to include highlight span from file title.",parameter:"include_highlights",type:{primitive:"Boolean"}}],stone_type:"struct"},SearchMatchV2:{fields:[{description:"The metadata for the matched file or folder.",parameter:"metadata",type:{datatype:"MetadataV2",namespace:"files"}},{description:"The list of HighlightSpan determines which parts of the file title should be highlighted.",parameter:"highlight_spans",type:{optional:{list:{datatype:"HighlightSpan",namespace:"files"}}}}],stone_type:"struct"},SearchOptions:{fields:[{description:"Scopes the search to a path in the user's Dropbox. Searches the entire Dropbox if not specified.",parameter:"path",type:{optional:{primitive:"String"}}},{description:"The maximum number of search results to return.",parameter:"max_results",type:{primitive:"UInt64"}},{description:"Restricts search to the given file status.",parameter:"file_status",type:{datatype:"FileStatus",namespace:"files"}},{description:"Restricts search to only match on filenames.",parameter:"filename_only",type:{primitive:"Boolean"}},{description:"Restricts search to only the extensions specified. Only supported for active file search.",parameter:"file_extensions",type:{optional:{list:{primitive:"String"}}}},{description:"Restricts search to only the file categories specified. Only supported for active file search.",parameter:"file_categories",type:{optional:{list:{datatype:"FileCategory",namespace:"files"}}}}],stone_type:"struct"},SearchV2Arg:{fields:[{description:"The string to search for. May match across multiple fields based on the request arguments. Query string may be rewritten to improve relevance of results.",parameter:"query",type:{primitive:"String"}},{description:"Options for more targeted search results.",parameter:"options",type:{optional:{datatype:"SearchOptions",namespace:"files"}}},{description:"Options for search results match fields.",parameter:"match_field_options",type:{optional:{datatype:"SearchMatchFieldOptions",namespace:"files"}}},{description:"Deprecated and moved this option to SearchMatchFieldOptions.",parameter:"include_highlights",type:{primitive:"Boolean"}}],stone_type:"struct"},SearchV2Result:{fields:[{description:"A list (possibly empty) of matches for the query.",parameter:"matches",type:{list:{datatype:"SearchMatchV2",namespace:"files"}}},{description:"Used for paging. If true, indicates there is another page of results available that can be fetched by calling :route:`search/continue:2` with the cursor.",parameter:"has_more",type:{primitive:"Boolean"}},{description:"Pass the cursor into :route:`search/continue:2` to fetch the next page of results.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"}}}},Q8UH:function(e,t,i){var r=i("EKeD"),o=i("7IP4"),a=r?function(e){return r.get(e)}:o;e.exports=a},QDPn:function(e,t,i){var r=i("9aUh"),o=Object.create,a=function(){function e(){}return function(t){if(!r(t))return{};if(o)return o(t);e.prototype=t;var i=new e;return e.prototype=void 0,i}}();e.exports=a},QKC2:function(e,t){e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},QPBw:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("1CCj"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},QazD:function(e,t,i){"use strict";t.a={sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AclUpdatePolicy:{description:"Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.",fields:[{description:"Only the owner can update the ACL.",parameter:"owner",type:{primitive:"Void"}},{description:"Any editor can update the ACL. This may be further restricted to editors on the same team.",parameter:"editors",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AudienceExceptionContentInfo:{description:"Information about the content that has a link audience different than that of this folder.",fields:[{description:"The name of the content, which is either a file or a folder.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},AudienceExceptions:{description:"The total count and truncated list of information of content inside this folder that has a different audience than the link on this folder. This is only returned for folders.",fields:[{parameter:"count",type:{primitive:"UInt32"}},{description:"A truncated list of some of the content that is an exception. The length of this list could be smaller than the count since it is only a sample but will not be empty as long as count is not 0.",parameter:"exceptions",type:{list:{datatype:"AudienceExceptionContentInfo",namespace:"sharing"}}}],stone_type:"struct"},AudienceRestrictingSharedFolder:{description:"Information about the shared folder that prevents the link audience for this link from being more restrictive.",fields:[{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The name of the shared folder.",parameter:"name",type:{primitive:"String"}},{description:"The link audience of the shared folder.",parameter:"audience",type:{datatype:"LinkAudience",namespace:"sharing"}}],stone_type:"struct"},ExpectedSharedContentLinkMetadata:{description:"The expected metadata of a shared link for a file or folder when a link is first created for the content. Absent if the link already exists.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileAction:{description:"Sharing actions that may be taken on files.",fields:[{description:"Disable viewer information on the file.",parameter:"disable_viewer_info",type:{primitive:"Void"}},{description:"Change or edit contents of the file.",parameter:"edit_contents",type:{primitive:"Void"}},{description:"Enable viewer information on the file.",parameter:"enable_viewer_info",type:{primitive:"Void"}},{description:"Add a member with view permissions.",parameter:"invite_viewer",type:{primitive:"Void"}},{description:"Add a member with view permissions but no comment permissions.",parameter:"invite_viewer_no_comment",type:{primitive:"Void"}},{description:"Add a member with edit permissions.",parameter:"invite_editor",type:{primitive:"Void"}},{description:"Stop sharing this file.",parameter:"unshare",type:{primitive:"Void"}},{description:"Relinquish one's own membership to the file.",parameter:"relinquish_membership",type:{primitive:"Void"}},{description:"Use create_view_link and create_edit_link instead.",parameter:"share_link",type:{primitive:"Void"}},{description:"Use create_view_link and create_edit_link instead.",parameter:"create_link",type:{primitive:"Void"}},{description:"Create a shared link to a file that only allows users to view the content.",parameter:"create_view_link",type:{primitive:"Void"}},{description:"Create a shared link to a file that allows users to edit the content.",parameter:"create_edit_link",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FilePermission:{description:"Whether the user is allowed to take the sharing action on the file.",fields:[{description:"The action that the user may wish to take on the file.",parameter:"action",type:{datatype:"FileAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},FolderPolicy:{description:"A set of policies governing membership and privileges for a shared folder.",fields:[{description:"Who can add and remove members from this shared folder.",parameter:"acl_update_policy",type:{datatype:"AclUpdatePolicy",namespace:"sharing"}},{description:"Who links can be shared with.",parameter:"shared_link_policy",type:{datatype:"SharedLinkPolicy",namespace:"sharing"}},{description:"Who can be a member of this shared folder, as set on the folder itself. The effective policy may differ from this value if the team-wide policy is more restrictive. Present only if the folder is owned by a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can be a member of this shared folder, taking into account both the folder and the team-wide policy. This value may differ from that of member_policy if the team-wide policy is more restrictive than the folder policy. Present only if the folder is owned by a team.",parameter:"resolved_member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}}],stone_type:"struct"},GetFileMetadataBatchArg:{description:"Arguments of :route:`get_file_metadata/batch`.",fields:[{description:"The files to query.",parameter:"files",type:{list:{primitive:"String"}}},{description:"A list of `FileAction`s corresponding to `FilePermission`s that should appear in the  response's :field:`SharedFileMetadata.permissions` field describing the actions the  authenticated user can perform on the file.",parameter:"actions",type:{optional:{list:{datatype:"FileAction",namespace:"sharing"}}}}],stone_type:"struct"},GetFileMetadataBatchResult:{description:"Per file results of :route:`get_file_metadata/batch`.",fields:[{description:"This is the input file identifier corresponding to one of :field:`GetFileMetadataBatchArg.files`.",parameter:"file",type:{primitive:"String"}},{description:"The result for this particular file.",parameter:"result",type:{datatype:"GetFileMetadataIndividualResult",namespace:"sharing"}}],stone_type:"struct"},GetFileMetadataIndividualResult:{fields:[{description:"The result for this file if it was successful.",parameter:"metadata",type:{datatype:"SharedFileMetadata",namespace:"sharing"}},{description:"The result for this file if it was an error.",parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAction:{description:"Actions that can be performed on a link.",fields:[{description:"Change the access level of the link.",parameter:"change_access_level",type:{primitive:"Void"}},{description:"Change the audience of the link.",parameter:"change_audience",type:{primitive:"Void"}},{description:"Remove the expiry date of the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Remove the password of the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Create or modify the expiry date of the link.",parameter:"set_expiry",type:{primitive:"Void"}},{description:"Create or modify the password of the link.",parameter:"set_password",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermission:{description:"Permissions for actions that can be performed on a link.",fields:[{parameter:"action",type:{datatype:"LinkAction",namespace:"sharing"}},{parameter:"allow",type:{primitive:"Boolean"}},{parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},MemberPolicy:{description:"Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.",fields:[{description:"Only a teammate can become a member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can become a member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedContentLinkMetadata:{description:"Metadata of a shared link for a file or folder.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The URL of the link.",parameter:"url",type:{primitive:"String"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}},{description:"The content inside this folder with link audience different than this folder's. This is only returned when an endpoint that returns metadata for a single shared folder is called, e.g. /get_folder_metadata.",parameter:"audience_exceptions",type:{optional:{datatype:"AudienceExceptions",namespace:"sharing"}}}],stone_type:"struct"},SharedFileMetadata:{description:"Properties of the shared file.",fields:[{description:"The ID of the file.",parameter:"id",type:{primitive:"String"}},{description:"The name of this file.",parameter:"name",type:{primitive:"String"}},{description:"Policies governing this shared file.",parameter:"policy",type:{datatype:"FolderPolicy",namespace:"sharing"}},{description:"URL for displaying a web preview of the shared file.",parameter:"preview_url",type:{primitive:"String"}},{description:"The current user's access level for this shared file.",parameter:"access_type",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The expected metadata of the link associated for the file when it is first shared. Absent if the link already exists. This is for an unreleased feature so it may not be returned yet.",parameter:"expected_link_metadata",type:{optional:{datatype:"ExpectedSharedContentLinkMetadata",namespace:"sharing"}}},{description:"The metadata of the link associated for the file. This is for an unreleased feature so it may not be returned yet.",parameter:"link_metadata",type:{optional:{datatype:"SharedContentLinkMetadata",namespace:"sharing"}}},{description:"The display names of the users that own the file. If the file is part of a team folder, the display names of the team admins are also included. Absent if the owner display names cannot be fetched.",parameter:"owner_display_names",type:{optional:{list:{primitive:"String"}}}},{description:"The team that owns the file. This field is not present if the file is not owned by a team.",parameter:"owner_team",type:{optional:{datatype:"Team",namespace:"users"}}},{description:"The ID of the parent shared folder. This field is present only if the file is contained within a shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1. Absent for unmounted files.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"The lower-case full path of this file. Absent for unmounted files.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The sharing permissions that requesting user has on this file. This corresponds to the entries given in :field:`GetFileMetadataBatchArg.actions` or :field:`GetFileMetadataArg.actions`.",parameter:"permissions",type:{optional:{list:{datatype:"FilePermission",namespace:"sharing"}}}},{description:"Timestamp indicating when the current user was invited to this shared file. If the user was not invited to the shared file, the timestamp will indicate when the user was invited to the parent shared folder. This value may be absent.",parameter:"time_invited",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},SharedLinkPolicy:{description:"Who can view shared links in this folder.",fields:[{description:"Links can be shared with anyone.",parameter:"anyone",type:{primitive:"Void"}},{description:"Links can be shared with anyone on the same team as the owner.",parameter:"team",type:{primitive:"Void"}},{description:"Links can only be shared among members of the shared folder.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingFileAccessError:{description:"User could not access this file.",fields:[{description:"Current user does not have sufficient privileges to perform the desired action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"File specified was not found.",parameter:"invalid_file",type:{primitive:"Void"}},{description:"A folder can't be shared this way. Use folder sharing or a shared link instead.",parameter:"is_folder",type:{primitive:"Void"}},{description:"A file inside a public folder can't be shared this way. Use a public link instead.",parameter:"inside_public_folder",type:{primitive:"Void"}},{description:"A Mac OS X package can't be shared this way. Use a shared link instead.",parameter:"inside_osx_package",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingUserError:{description:"User account had a problem preventing this action.",fields:[{description:"The current user must verify the account e-mail address before performing this action.",parameter:"email_unverified",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ViewerInfoPolicy:{fields:[{description:"Viewer information is available on this file.",parameter:"enabled",type:{primitive:"Void"}},{description:"Viewer information is disabled on this file.",parameter:"disabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},Qiut:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("VP5h"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},QlKF:function(e,t,i){var r=i("bim0"),o=i("/Qyy");e.exports=function(e){return r((function(t,i){var r=-1,a=i.length,n=a>1?i[a-1]:void 0,s=a>2?i[2]:void 0;for(n=e.length>3&&"function"==typeof n?(a--,n):void 0,s&&o(i[0],i[1],s)&&(n=a<3?void 0:n,a=1),t=Object(t);++r<a;){var p=i[r];p&&e(t,p,r,n)}return t}))}},Qm5v:function(e,t,i){"use strict";t.a={common:{RootInfo:{description:"Information about current user's root.",fields:[{description:"The namespace ID for user's root namespace. It will be the namespace ID of the shared team root if the user is member of a team with a separate team root. Otherwise it will be same as :field:`RootInfo.home_namespace_id`.",parameter:"root_namespace_id",type:{primitive:"String"}},{description:"The namespace ID for user's home namespace.",parameter:"home_namespace_id",type:{primitive:"String"}}],stone_type:"struct",todo:!0}},team_policies:{OfficeAddInPolicy:{fields:[{description:"Office Add-In is disabled.",parameter:"disabled",type:{primitive:"Void"}},{description:"Office Add-In is enabled.",parameter:"enabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderJoinPolicy:{description:"Policy governing which shared folders a team member can join.",fields:[{description:"Team members can only join folders shared by teammates.",parameter:"from_team_only",type:{primitive:"Void"}},{description:"Team members can join any shared folder, including those shared by users outside the team.",parameter:"from_anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderMemberPolicy:{description:"Policy governing who can be a member of a folder shared by a team member.",fields:[{description:"Only a teammate can be a member of a folder shared by a team member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can be a member of a folder shared by a team member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLinkCreatePolicy:{description:"Policy governing the visibility of shared links. This policy can apply to newly created shared links, or all shared links.",fields:[{description:"By default, anyone can access newly created shared links. No login will be required to access the shared links unless overridden.",parameter:"default_public",type:{primitive:"Void"}},{description:"By default, only members of the same team can access newly created shared links. Login will be required to access the shared links unless overridden.",parameter:"default_team_only",type:{primitive:"Void"}},{description:"Only members of the same team can access all shared links. Login will be required to access all shared links.",parameter:"team_only",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamSharingPolicies:{description:"Policies governing sharing within and outside of the team.",fields:[{description:"Who can join folders shared by team members.",parameter:"shared_folder_member_policy",type:{datatype:"SharedFolderMemberPolicy",namespace:"team_policies"}},{description:"Which shared folders team members can join.",parameter:"shared_folder_join_policy",type:{datatype:"SharedFolderJoinPolicy",namespace:"team_policies"}},{description:"Who can view shared links owned by team members.",parameter:"shared_link_create_policy",type:{datatype:"SharedLinkCreatePolicy",namespace:"team_policies"}}],stone_type:"struct"}},users:{FullAccount:{description:"Detailed information about the current user's account.",fields:[{description:"The user's unique Dropbox ID.",parameter:"account_id",type:{primitive:"String"}},{description:"Details of a user's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's e-mail address. Do not rely on this without checking the :field:`email_verified` field. Even then, it's possible that the user has since lost access to their e-mail.",parameter:"email",type:{primitive:"String"}},{description:"Whether the user has verified their e-mail address.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"Whether the user has been disabled.",parameter:"disabled",type:{primitive:"Boolean"}},{description:"The language that the user specified. Locale tags will be :link:`IETF language tags http://en.wikipedia.org/wiki/IETF_language_tag`.",parameter:"locale",type:{primitive:"String"}},{description:"The user's :link:`referral link https://www.dropbox.com/referrals`.",parameter:"referral_link",type:{primitive:"String"}},{description:"Whether the user has a personal and work account. If the current account is personal, then :field:`team` will always be :val:`null`, but :field:`is_paired` will indicate if a work account is linked.",parameter:"is_paired",type:{primitive:"Boolean"}},{description:"What type of account this user has.",parameter:"account_type",type:{datatype:"AccountType",namespace:"users_common"}},{description:"The root info for this account.",parameter:"root_info",type:{datatype:"RootInfo",namespace:"common"}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}},{description:"The user's two-letter country code, if available. Country codes are based on :link:`ISO 3166-1 http://en.wikipedia.org/wiki/ISO_3166-1`.",parameter:"country",type:{optional:{primitive:"String"}}},{description:"If this account is a member of a team, information about that team.",parameter:"team",type:{optional:{datatype:"FullTeam",namespace:"users"}}},{description:"This account's unique team member id. This field will only be present if :field:`team` is present.",parameter:"team_member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FullTeam:{description:"Detailed information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}},{description:"Team policies governing sharing.",parameter:"sharing_policies",type:{datatype:"TeamSharingPolicies",namespace:"team_policies"}},{description:"Team policy governing the use of the Office Add-In.",parameter:"office_addin_policy",type:{datatype:"OfficeAddInPolicy",namespace:"team_policies"}}],stone_type:"struct"},Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}},users_common:{AccountType:{description:"What type of account this user has.",fields:[{description:"The basic account type.",parameter:"basic",type:{primitive:"Void"}},{description:"The Dropbox Pro account type.",parameter:"pro",type:{primitive:"Void"}},{description:"The Dropbox Business account type.",parameter:"business",type:{primitive:"Void"}}],stone_type:"union"}}}},Qn7i:function(e,t,i){var r=i("xkFB");function o(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var i=function(){var r=arguments,o=t?t.apply(this,r):r[0],a=i.cache;if(a.has(o))return a.get(o);var n=e.apply(this,r);return i.cache=a.set(o,n)||a,n};return i.cache=new(o.Cache||r),i}o.Cache=r,e.exports=o},Qs4L:function(e,t,i){"use strict";t.a={users:{BasicAccount:{description:"Basic information about any account.",fields:[{description:"The user's unique Dropbox ID.",parameter:"account_id",type:{primitive:"String"}},{description:"Details of a user's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's e-mail address. Do not rely on this without checking the :field:`email_verified` field. Even then, it's possible that the user has since lost access to their e-mail.",parameter:"email",type:{primitive:"String"}},{description:"Whether the user has verified their e-mail address.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"Whether the user has been disabled.",parameter:"disabled",type:{primitive:"Boolean"}},{description:"Whether this user is a teammate of the current user. If this account is the current user's account, then this will be :val:`true`.",parameter:"is_teammate",type:{primitive:"Boolean"}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}},{description:"The user's unique team member id. This field will only be present if the user is part of a team and :field:`is_teammate` is :val:`true`.",parameter:"team_member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GetAccountArg:{fields:[{description:"A user's account identifier.",parameter:"account_id",type:{primitive:"String"}}],stone_type:"struct"},GetAccountError:{fields:[{description:"The specified :field:`GetAccountArg.account_id` does not exist.",parameter:"no_account",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},Qwyb:function(e,t){var i=Math.max;e.exports=function(e,t,r,o){for(var a=-1,n=e.length,s=-1,p=r.length,d=-1,l=t.length,m=i(n-p,0),c=Array(m+l),h=!o;++a<m;)c[a]=e[a];for(var u=a;++d<l;)c[u+d]=t[d];for(;++s<p;)(h||a<n)&&(c[u+r[s]]=e[a++]);return c}},QyrG:function(e,t,i){"use strict";t.a={sharing:{AccessInheritance:{description:"Information about the inheritance policy of a shared folder.",fields:[{description:"The shared folder inherits its members from the parent folder.",parameter:"inherit",type:{primitive:"Void"}},{description:"The shared folder does not inherit its members from the parent folder.",parameter:"no_inherit",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AclUpdatePolicy:{description:"Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.",fields:[{description:"Only the owner can update the ACL.",parameter:"owner",type:{primitive:"Void"}},{description:"Any editor can update the ACL. This may be further restricted to editors on the same team.",parameter:"editors",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AudienceExceptionContentInfo:{description:"Information about the content that has a link audience different than that of this folder.",fields:[{description:"The name of the content, which is either a file or a folder.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},AudienceExceptions:{description:"The total count and truncated list of information of content inside this folder that has a different audience than the link on this folder. This is only returned for folders.",fields:[{parameter:"count",type:{primitive:"UInt32"}},{description:"A truncated list of some of the content that is an exception. The length of this list could be smaller than the count since it is only a sample but will not be empty as long as count is not 0.",parameter:"exceptions",type:{list:{datatype:"AudienceExceptionContentInfo",namespace:"sharing"}}}],stone_type:"struct"},AudienceRestrictingSharedFolder:{description:"Information about the shared folder that prevents the link audience for this link from being more restrictive.",fields:[{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The name of the shared folder.",parameter:"name",type:{primitive:"String"}},{description:"The link audience of the shared folder.",parameter:"audience",type:{datatype:"LinkAudience",namespace:"sharing"}}],stone_type:"struct"},FolderAction:{description:"Actions that may be taken on shared folders.",fields:[{description:"Change folder options, such as who can be invited to join the folder.",parameter:"change_options",type:{primitive:"Void"}},{description:"Disable viewer information for this folder.",parameter:"disable_viewer_info",type:{primitive:"Void"}},{description:"Change or edit contents of the folder.",parameter:"edit_contents",type:{primitive:"Void"}},{description:"Enable viewer information on the folder.",parameter:"enable_viewer_info",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read and write permission.",parameter:"invite_editor",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission.",parameter:"invite_viewer",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission but no comment permissions.",parameter:"invite_viewer_no_comment",type:{primitive:"Void"}},{description:"Relinquish one's own membership in the folder.",parameter:"relinquish_membership",type:{primitive:"Void"}},{description:"Unmount the folder.",parameter:"unmount",type:{primitive:"Void"}},{description:"Stop sharing this folder.",parameter:"unshare",type:{primitive:"Void"}},{description:"Keep a copy of the contents upon leaving or being kicked from the folder.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Use create_link instead.",parameter:"share_link",type:{primitive:"Void"}},{description:"Create a shared link for folder.",parameter:"create_link",type:{primitive:"Void"}},{description:"Set whether the folder inherits permissions from its parent.",parameter:"set_access_inheritance",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FolderPermission:{description:"Whether the user is allowed to take the action on the shared folder.",fields:[{description:"The action that the user may wish to take on the folder.",parameter:"action",type:{datatype:"FolderAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed, or if no reason is available.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},FolderPolicy:{description:"A set of policies governing membership and privileges for a shared folder.",fields:[{description:"Who can add and remove members from this shared folder.",parameter:"acl_update_policy",type:{datatype:"AclUpdatePolicy",namespace:"sharing"}},{description:"Who links can be shared with.",parameter:"shared_link_policy",type:{datatype:"SharedLinkPolicy",namespace:"sharing"}},{description:"Who can be a member of this shared folder, as set on the folder itself. The effective policy may differ from this value if the team-wide policy is more restrictive. Present only if the folder is owned by a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can be a member of this shared folder, taking into account both the folder and the team-wide policy. This value may differ from that of member_policy if the team-wide policy is more restrictive than the folder policy. Present only if the folder is owned by a team.",parameter:"resolved_member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAction:{description:"Actions that can be performed on a link.",fields:[{description:"Change the access level of the link.",parameter:"change_access_level",type:{primitive:"Void"}},{description:"Change the audience of the link.",parameter:"change_audience",type:{primitive:"Void"}},{description:"Remove the expiry date of the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Remove the password of the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Create or modify the expiry date of the link.",parameter:"set_expiry",type:{primitive:"Void"}},{description:"Create or modify the password of the link.",parameter:"set_password",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermission:{description:"Permissions for actions that can be performed on a link.",fields:[{parameter:"action",type:{datatype:"LinkAction",namespace:"sharing"}},{parameter:"allow",type:{primitive:"Boolean"}},{parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},ListFoldersContinueArg:{fields:[{description:"The cursor returned by the previous API call specified in the endpoint description.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},ListFoldersContinueError:{fields:[{description:":field:`ListFoldersContinueArg.cursor` is invalid.",parameter:"invalid_cursor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListFoldersResult:{description:"Result for :route:`list_folders` or :route:`list_mountable_folders`, depending on which endpoint was requested.\nUnmounted shared folders can be identified by the absence of :field:`SharedFolderMetadata.path_lower`.",fields:[{description:"List of all shared folders the authenticated user has access to.",parameter:"entries",type:{list:{datatype:"SharedFolderMetadata",namespace:"sharing"}}},{description:"Present if there are additional shared folders that have not been returned yet. Pass the cursor into the corresponding continue endpoint (either :route:`list_folders/continue` or :route:`list_mountable_folders/continue`) to list additional folders.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberPolicy:{description:"Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.",fields:[{description:"Only a teammate can become a member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can become a member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedContentLinkMetadata:{description:"Metadata of a shared link for a file or folder.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The URL of the link.",parameter:"url",type:{primitive:"String"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}},{description:"The content inside this folder with link audience different than this folder's. This is only returned when an endpoint that returns metadata for a single shared folder is called, e.g. /get_folder_metadata.",parameter:"audience_exceptions",type:{optional:{datatype:"AudienceExceptions",namespace:"sharing"}}}],stone_type:"struct"},SharedFolderMetadata:{description:"The metadata which includes basic information about the shared folder.",fields:[{description:"The current user's access level for this shared folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Whether this folder is inside of a team folder.",parameter:"is_inside_team_folder",type:{primitive:"Boolean"}},{description:"Whether this folder is a :link:`team folder https://www.dropbox.com/en/help/986`.",parameter:"is_team_folder",type:{primitive:"Boolean"}},{description:"The name of the this shared folder.",parameter:"name",type:{primitive:"String"}},{description:"Policies governing this shared folder.",parameter:"policy",type:{datatype:"FolderPolicy",namespace:"sharing"}},{description:"URL for displaying a web preview of the shared folder.",parameter:"preview_url",type:{primitive:"String"}},{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"Timestamp indicating when the current user was invited to this shared folder.",parameter:"time_invited",type:{primitive:"Timestamp"}},{description:"The display names of the users that own the folder. If the folder is part of a team folder, the display names of the team admins are also included. Absent if the owner display names cannot be fetched.",parameter:"owner_display_names",type:{optional:{list:{primitive:"String"}}}},{description:"The team that owns the folder. This field is not present if the folder is not owned by a team.",parameter:"owner_team",type:{optional:{datatype:"Team",namespace:"users"}}},{description:"The ID of the parent shared folder. This field is present only if the folder is contained within another shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"The lower-cased full path of this shared folder. Absent for unmounted folders.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"Display name for the parent folder.",parameter:"parent_folder_name",type:{optional:{primitive:"String"}}},{description:"The metadata of the shared content link to this shared folder. Absent if there is no link on the folder. This is for an unreleased feature so it may not be returned yet.",parameter:"link_metadata",type:{optional:{datatype:"SharedContentLinkMetadata",namespace:"sharing"}}},{description:"Actions the current user may perform on the folder and its contents. The set of permissions corresponds to the FolderActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"FolderPermission",namespace:"sharing"}}}},{description:"Whether the folder inherits its members from its parent.",parameter:"access_inheritance",type:{datatype:"AccessInheritance",namespace:"sharing"}}],stone_type:"struct"},SharedLinkPolicy:{description:"Who can view shared links in this folder.",fields:[{description:"Links can be shared with anyone.",parameter:"anyone",type:{primitive:"Void"}},{description:"Links can be shared with anyone on the same team as the owner.",parameter:"team",type:{primitive:"Void"}},{description:"Links can only be shared among members of the shared folder.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ViewerInfoPolicy:{fields:[{description:"Viewer information is available on this file.",parameter:"enabled",type:{primitive:"Void"}},{description:"Viewer information is disabled on this file.",parameter:"disabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},"R/D+":function(e,t,i){"use strict";t.a={file_properties:{ModifyTemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"A property field key with that name already exists in the template.",parameter:"conflicting_property_names",type:{primitive:"Void"}},{description:"There are too many properties in the changed template. The maximum number of properties per template is 32.",parameter:"too_many_properties",type:{primitive:"Void"}},{description:"There are too many templates for the team.",parameter:"too_many_templates",type:{primitive:"Void"}},{description:"The template name, description or one or more of the property field keys is too large.",parameter:"template_attribute_too_large",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyFieldTemplate:{description:"Defines how a single property field may be structured. Used exclusively by :type:`PropertyGroupTemplate`.",fields:[{description:"Key of the property field being described. Property field keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description of the property field. Property field descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Data type of the value of this property field. This type will be enforced upon property creation and modifications.",parameter:"type",type:{datatype:"PropertyType",namespace:"file_properties"}}],stone_type:"struct"},PropertyType:{description:"Data type of the given property field added.",fields:[{description:"The associated property field will be of type string. Unicode is supported.",parameter:"string",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UpdateTemplateArg:{fields:[{description:"An identifier for template added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}},{description:"A display name for the template. template names can be up to 256 bytes.",parameter:"name",type:{optional:{primitive:"String"}}},{description:"Description for the new template. Template descriptions can be up to 1024 bytes.",parameter:"description",type:{optional:{primitive:"String"}}},{description:"Property field templates to be added to the group template. There can be up to 32 properties in a single template.",parameter:"add_fields",type:{optional:{list:{datatype:"PropertyFieldTemplate",namespace:"file_properties"}}}}],stone_type:"struct"},UpdateTemplateResult:{fields:[{description:"An identifier for template added by route  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}}],stone_type:"struct"}}}},"RW/s":function(e,t,i){var r=i("iOq2"),o=i("HE1N"),a=i("VZJX"),n=i("J9xP"),s=i("PHxc");function p(e){var t=-1,i=null==e?0:e.length;for(this.clear();++t<i;){var r=e[t];this.set(r[0],r[1])}}p.prototype.clear=r,p.prototype.delete=o,p.prototype.get=a,p.prototype.has=n,p.prototype.set=s,e.exports=p},RYVD:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Q0Pj"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},RhEf:function(e,t,i){var r=i("+dZb")("kebabCase",i("u6UW"),i("hgXp"));r.placeholder=i("IOY3"),e.exports=r},"Rlj/":function(e,t){function i(e){return e?Array.isArray(e)?e.join("."):e:""}e.exports=function(e,t,r,o,a){if(null===(n=e)||"object"!=typeof n&&"function"!=typeof n||!t)return e;var n;if(t=i(t),r&&(t+="."+i(r)),o&&(t+="."+i(o)),a&&(t+="."+i(a)),t in e)return e[t];for(var s=t.split("."),p=s.length,d=-1;e&&++d<p;){for(var l=s[d];"\\"===l[l.length-1];)l=l.slice(0,-1)+"."+s[++d];e=e[l]}return e}},RoC8:function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},RqPZ:function(e,t,i){var r=i("GI0s"),o=i("9aUh");e.exports=function(e){if(!o(e))return!1;var t=r(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},RtBD:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("NtDJ"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},S0fA:function(e,t,i){"use strict";t.a={sharing:{RelinquishFileMembershipArg:{fields:[{description:"The path or id for the file.",parameter:"file",type:{primitive:"String"}}],stone_type:"struct"},RelinquishFileMembershipError:{fields:[{parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{description:"The current user has access to the shared file via a group.  You can't relinquish membership to a file shared via groups.",parameter:"group_access",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingFileAccessError:{description:"User could not access this file.",fields:[{description:"Current user does not have sufficient privileges to perform the desired action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"File specified was not found.",parameter:"invalid_file",type:{primitive:"Void"}},{description:"A folder can't be shared this way. Use folder sharing or a shared link instead.",parameter:"is_folder",type:{primitive:"Void"}},{description:"A file inside a public folder can't be shared this way. Use a public link instead.",parameter:"inside_public_folder",type:{primitive:"Void"}},{description:"A Mac OS X package can't be shared this way. Use a shared link instead.",parameter:"inside_osx_package",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"S1/a":function(e,t,i){"use strict";t.a={file_properties:{GetTemplateArg:{fields:[{description:"An identifier for template added by route  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}}],stone_type:"struct"},GetTemplateResult:{fields:[{description:"Display name for the template. Template names can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description for the template. Template descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Definitions of the property fields associated with this template. There can be up to 32 properties in a single template.",parameter:"fields",type:{list:{datatype:"PropertyFieldTemplate",namespace:"file_properties"}}}],stone_type:"struct"},PropertyFieldTemplate:{description:"Defines how a single property field may be structured. Used exclusively by :type:`PropertyGroupTemplate`.",fields:[{description:"Key of the property field being described. Property field keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description of the property field. Property field descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Data type of the value of this property field. This type will be enforced upon property creation and modifications.",parameter:"type",type:{datatype:"PropertyType",namespace:"file_properties"}}],stone_type:"struct"},PropertyType:{description:"Data type of the given property field added.",fields:[{description:"The associated property field will be of type string. Unicode is supported.",parameter:"string",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},S1Qq:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("evAt"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},S6qS:function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollEmptyResult:{description:"Result returned by methods that poll for the status of an asynchronous job. Upon completion of the job, no additional information is returned.",fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The asynchronous job has completed successfully.",parameter:"complete",type:{primitive:"Void"}}],stone_type:"union"}},team:{GroupsPollError:{fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"You are not allowed to poll this job.",parameter:"access_denied",type:{primitive:"Void"}}],stone_type:"open_union"}}}},S7zG:function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportArg:{fields:[{description:"The path of the file to be exported.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},ExportError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{description:"This file type cannot be exported. Use :route:`download` instead.",parameter:"non_exportable",type:{primitive:"Void"}},{description:"The exportable content is not yet available. Please retry later.",parameter:"retry_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},ExportMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"A hash based on the exported file content. This field can be used to verify data integrity. Similar to content hash. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"export_hash",type:{optional:{primitive:"String"}}}],stone_type:"struct"},ExportResult:{fields:[{description:"Metadata for the exported version of the file.",parameter:"export_metadata",type:{datatype:"ExportMetadata",namespace:"files"}},{description:"Metadata for the original file.",parameter:"file_metadata",type:{datatype:"FileMetadata",namespace:"files"}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"}}}},SDHo:function(e,t,i){"use strict";var r=i("63Ad");t.__esModule=!0,t.withPrefix=u,t.withAssetPrefix=function(e){return u(e,"")},t.navigateTo=t.replace=t.push=t.navigate=t.default=void 0;var o=r(i("PE9J")),a=r(i("8VmE")),n=r(i("T1e2")),s=r(i("QKC2")),p=r(i("W0B4")),d=r(i("mXGw")),l=i("JF+v"),m=i("ZkUl"),c=i("vhWV");t.parsePath=c.parsePath;var h=function(e){return null==e?void 0:e.startsWith("/")};function u(e,t){var i,r;if(void 0===t&&(t=""),!f(e))return e;if(e.startsWith("./")||e.startsWith("../"))return e;var o=null!==(i=null!==(r=t)&&void 0!==r?r:"")&&void 0!==i?i:"/";return""+((null==o?void 0:o.endsWith("/"))?o.slice(0,-1):o)+(e.startsWith("/")?e:"/"+e)}var f=function(e){return e&&!e.startsWith("http://")&&!e.startsWith("https://")&&!e.startsWith("//")};var y=function(e,t){return f(e)?h(e)?u(e):function(e,t){return h(e)?e:(0,m.resolve)(e,t)}(e,t):e},v={activeClassName:p.default.string,activeStyle:p.default.object,partiallyActive:p.default.bool},_=function(e){function t(t){var i;(i=e.call(this,t)||this).defaultGetProps=function(e){var t=e.isPartiallyCurrent,r=e.isCurrent;return(i.props.partiallyActive?t:r)?{className:[i.props.className,i.props.activeClassName].filter(Boolean).join(" "),style:(0,a.default)({},i.props.style,i.props.activeStyle)}:null};var r=!1;return"undefined"!=typeof window&&window.IntersectionObserver&&(r=!0),i.state={IOSupported:r},i.handleRef=i.handleRef.bind((0,n.default)(i)),i}(0,s.default)(t,e);var i=t.prototype;return i.componentDidUpdate=function(e,t){this.props.to===e.to||this.state.IOSupported||___loader.enqueue((0,c.parsePath)(y(this.props.to,window.location.pathname)).pathname)},i.componentDidMount=function(){this.state.IOSupported||___loader.enqueue((0,c.parsePath)(y(this.props.to,window.location.pathname)).pathname)},i.componentWillUnmount=function(){if(this.io){var e=this.io,t=e.instance,i=e.el;t.unobserve(i),t.disconnect()}},i.handleRef=function(e){var t,i,r,o=this;this.props.innerRef&&this.props.innerRef.hasOwnProperty("current")?this.props.innerRef.current=e:this.props.innerRef&&this.props.innerRef(e),this.state.IOSupported&&e&&(this.io=(t=e,i=function(){___loader.enqueue((0,c.parsePath)(y(o.props.to,window.location.pathname)).pathname)},(r=new window.IntersectionObserver((function(e){e.forEach((function(e){t===e.target&&(e.isIntersecting||e.intersectionRatio>0)&&(r.unobserve(t),r.disconnect(),i())}))}))).observe(t),{instance:r,el:t}))},i.render=function(){var e=this,t=this.props,i=t.to,r=t.getProps,n=void 0===r?this.defaultGetProps:r,s=t.onClick,p=t.onMouseEnter,m=(t.activeClassName,t.activeStyle,t.innerRef,t.partiallyActive,t.state),h=t.replace,u=(0,o.default)(t,["to","getProps","onClick","onMouseEnter","activeClassName","activeStyle","innerRef","partiallyActive","state","replace"]);return d.default.createElement(l.Location,null,(function(t){var r=t.location,o=y(i,r.pathname);return f(o)?d.default.createElement(l.Link,(0,a.default)({to:o,state:m,getProps:n,innerRef:e.handleRef,onMouseEnter:function(e){p&&p(e),___loader.hovering((0,c.parsePath)(o).pathname)},onClick:function(t){if(s&&s(t),!(0!==t.button||e.props.target||t.defaultPrevented||t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)){t.preventDefault();var i=h,r=encodeURI(o)===window.location.pathname;"boolean"!=typeof h&&r&&(i=!0),window.___navigate(o,{state:m,replace:i})}return!0}},u)):d.default.createElement("a",(0,a.default)({href:o},u))}))},t}(d.default.Component);_.propTypes=(0,a.default)({},v,{onClick:p.default.func,to:p.default.string.isRequired,replace:p.default.bool,state:p.default.object});var g=function(e,t,i){return console.warn('The "'+e+'" method is now deprecated and will be removed in Gatsby v'+i+'. Please use "'+t+'" instead.')},b=d.default.forwardRef((function(e,t){return d.default.createElement(_,(0,a.default)({innerRef:t},e))}));t.default=b;t.navigate=function(e,t){window.___navigate(y(e,window.location.pathname),t)};var w=function(e){g("push","navigate",3),window.___push(y(e,window.location.pathname))};t.push=w;t.replace=function(e){g("replace","navigate",3),window.___replace(y(e,window.location.pathname))};t.navigateTo=function(e){return g("navigateTo","navigate",3),w(e)}},SHde:function(e,t){e.exports=function(e,t){return function(i){return e(t(i))}}},SN9N:function(e,t,i){var r=i("Dh2Y"),o=i("dIZa");e.exports=function(e,t,i){(void 0!==i&&!o(e[t],i)||void 0===i&&!(t in e))&&r(e,t,i)}},SOtt:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("HFc/"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},SaFQ:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("7ZbK"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},ScDg:function(e,t,i){"use strict";t.a={file_requests:{FileRequest:{description:"A :link:`file request https://www.dropbox.com/help/9090` for receiving files into the user's Dropbox account.",fields:[{description:"The ID of the file request.",parameter:"id",type:{primitive:"String"}},{description:"The URL of the file request.",parameter:"url",type:{primitive:"String"}},{description:"The title of the file request.",parameter:"title",type:{primitive:"String"}},{description:"When this file request was created.",parameter:"created",type:{primitive:"Timestamp"}},{description:"Whether or not the file request is open. If the file request is closed, it will not accept any more file submissions.",parameter:"is_open",type:{primitive:"Boolean"}},{description:"The number of files this file request has received.",parameter:"file_count",type:{primitive:"Int64"}},{description:"The path of the folder in the Dropbox where uploaded files will be sent. This can be :val:`null` if the destination was removed. For apps with the app folder permission, this will be relative to the app folder.",parameter:"destination",type:{optional:{primitive:"String"}}},{description:"The deadline for this file request. Only set if the request has a deadline.",parameter:"deadline",type:{optional:{datatype:"FileRequestDeadline",namespace:"file_requests"}}}],stone_type:"struct"},FileRequestDeadline:{fields:[{description:"The deadline for this file request.",parameter:"deadline",type:{primitive:"Timestamp"}},{description:"If set, allow uploads after the deadline has passed. These     uploads will be marked overdue.",parameter:"allow_late_uploads",type:{optional:{datatype:"GracePeriod",namespace:"file_requests"}}}],stone_type:"struct"},GracePeriod:{fields:[{parameter:"one_day",type:{primitive:"Void"}},{parameter:"two_days",type:{primitive:"Void"}},{parameter:"seven_days",type:{primitive:"Void"}},{parameter:"thirty_days",type:{primitive:"Void"}},{parameter:"always",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListFileRequestsError:{description:"There was an error retrieving the file requests.",fields:[{description:"This user's Dropbox Business team doesn't allow file requests.",parameter:"disabled_for_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListFileRequestsResult:{description:"Result for :route:`list`.",fields:[{description:"The file requests owned by this user. Apps with the app folder permission will only see file requests in their app folder.",parameter:"file_requests",type:{list:{datatype:"FileRequest",namespace:"file_requests"}}}],stone_type:"struct"}}}},Sq4h:function(e,t,i){var r=i("QDPn"),o=i("9aUh");e.exports=function(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var i=r(e.prototype),a=e.apply(i,t);return o(a)?a:i}}},SvR2:function(e,t,i){"use strict";t.a={files:{UploadSessionAppendArg:{fields:[{description:"Contains the upload session ID and the offset.",parameter:"cursor",type:{datatype:"UploadSessionCursor",namespace:"files"}},{description:"If true, the current session will be closed, at which point you won't be able to call :route:`upload_session/append:2` anymore with the current session.",parameter:"close",type:{primitive:"Boolean"}}],stone_type:"struct"},UploadSessionCursor:{fields:[{description:"The upload session ID (returned by :route:`upload_session/start`).",parameter:"session_id",type:{primitive:"String"}},{description:"The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error.",parameter:"offset",type:{primitive:"UInt64"}}],stone_type:"struct"},UploadSessionLookupError:{fields:[{description:"The upload session ID was not found or has expired. Upload sessions are valid for 48 hours.",parameter:"not_found",type:{primitive:"Void"}},{description:"The specified offset was incorrect. See the value for the correct offset. This error may occur when a previous request was received and processed successfully but the client did not receive the response, e.g. due to a network error.",parameter:"incorrect_offset",type:{datatype:"UploadSessionOffsetError",namespace:"files"}},{description:"You are attempting to append data to an upload session that has already been closed (i.e. committed).",parameter:"closed",type:{primitive:"Void"}},{description:"The session must be closed before calling upload_session/finish_batch.",parameter:"not_closed",type:{primitive:"Void"}},{description:"You can not append to the upload session because the size of a file should not reach the max file size limit (i.e. 350GB).",parameter:"too_large",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UploadSessionOffsetError:{fields:[{description:"The offset up to which data has been collected.",parameter:"correct_offset",type:{primitive:"UInt64"}}],stone_type:"struct"}}}},SyCk:function(e,t,i){var r=i("RqPZ"),o=i("ckUF");e.exports=function(e){return null!=e&&o(e.length)&&!r(e)}},Szcl:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Fghp"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},T19l:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("H1/q"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},T1e2:function(e,t){e.exports=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}},T3O9:function(e,t,i){"use strict";t.a={sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupInfo:{description:"The information about a group. Groups is a way to manage a list of users  who need same access permission to the shared folder.",fields:[{parameter:"group_name",type:{primitive:"String"}},{parameter:"group_id",type:{primitive:"String"}},{description:"Who is allowed to manage the group.",parameter:"group_management_type",type:{datatype:"GroupManagementType",namespace:"team_common"}},{description:"The type of group.",parameter:"group_type",type:{datatype:"GroupType",namespace:"team_common"}},{description:"If the current user is a member of the group.",parameter:"is_member",type:{primitive:"Boolean"}},{description:"If the current user is an owner of the group.",parameter:"is_owner",type:{primitive:"Boolean"}},{description:"If the group is owned by the current user's team.",parameter:"same_team",type:{primitive:"Boolean"}},{description:"External ID of group. This is an arbitrary ID that an admin can attach to a group.",parameter:"group_external_id",type:{optional:{primitive:"String"}}},{description:"The number of members in the group.",parameter:"member_count",type:{optional:{primitive:"UInt32"}}}],stone_type:"struct"},GroupMembershipInfo:{description:"The information about a group member of the shared content.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"The information about the membership group.",parameter:"group",type:{datatype:"GroupInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},InviteeInfo:{description:"Information about the recipient of a shared content invitation.",fields:[{description:"E-mail address of invited user.",parameter:"email",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},InviteeMembershipInfo:{description:"Information about an invited member of a shared content.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Recipient of the invitation.",parameter:"invitee",type:{datatype:"InviteeInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}},{description:"The user this invitation is tied to, if available.",parameter:"user",type:{optional:{datatype:"UserInfo",namespace:"sharing"}}}],stone_type:"struct"},ListFolderMembersContinueArg:{fields:[{description:"The cursor returned by your last call to :route:`list_folder_members` or :route:`list_folder_members/continue`.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},ListFolderMembersContinueError:{fields:[{parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{description:":field:`ListFolderMembersContinueArg.cursor` is invalid.",parameter:"invalid_cursor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberAction:{description:"Actions that may be taken on members of a shared folder.",fields:[{description:"Allow the member to keep a copy of the folder when removing.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Make the member an editor of the folder.",parameter:"make_editor",type:{primitive:"Void"}},{description:"Make the member an owner of the folder.",parameter:"make_owner",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder.",parameter:"make_viewer",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder without commenting permissions.",parameter:"make_viewer_no_comment",type:{primitive:"Void"}},{description:"Remove the member from the folder.",parameter:"remove",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberPermission:{description:"Whether the user is allowed to take the action on the associated member.",fields:[{description:"The action that the user may wish to take on the member.",parameter:"action",type:{datatype:"MemberAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderMembers:{description:"Shared folder user and group membership.",fields:[{description:"The list of user members of the shared folder.",parameter:"users",type:{list:{datatype:"UserMembershipInfo",namespace:"sharing"}}},{description:"The list of group members of the shared folder.",parameter:"groups",type:{list:{datatype:"GroupMembershipInfo",namespace:"sharing"}}},{description:"The list of invitees to the shared folder.",parameter:"invitees",type:{list:{datatype:"InviteeMembershipInfo",namespace:"sharing"}}},{description:"Present if there are additional shared folder members that have not been returned yet. Pass the cursor into :route:`list_folder_members/continue` to list additional members.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},UserInfo:{description:"Basic information about a user. Use :route:`users.get_account` and :route:`users.get_account_batch` to obtain more detailed information.",fields:[{description:"The account ID of the user.",parameter:"account_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"The display name of the user.",parameter:"display_name",type:{primitive:"String"}},{description:"If the user is in the same team as current user.",parameter:"same_team",type:{primitive:"Boolean"}},{description:"The team member ID of the shared folder member. Only present if :field:`same_team` is true.",parameter:"team_member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"},UserMembershipInfo:{description:"The information about a user member of the shared content.",fields:[{description:"The access type for this member. It contains inherited access type from parent folder, and acquired access type from this folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"The account information for the membership user.",parameter:"user",type:{datatype:"UserInfo",namespace:"sharing"}},{description:"The permissions that requesting user has on this member. The set of permissions corresponds to the MemberActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"MemberPermission",namespace:"sharing"}}}},{description:"Never set.",parameter:"initials",type:{optional:{primitive:"String"}}},{description:"True if the member has access from a parent folder.",parameter:"is_inherited",type:{primitive:"Boolean"}}],stone_type:"struct"}},team_common:{GroupManagementType:{description:"The group type determines how a group is managed.",fields:[{description:"A group which is managed by selected users.",parameter:"user_managed",type:{primitive:"Void"}},{description:"A group which is managed by team admins only.",parameter:"company_managed",type:{primitive:"Void"}},{description:"A group which is managed automatically by Dropbox.",parameter:"system_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupType:{description:"The group type determines how a group is created and managed.",fields:[{description:"A group to which team members are automatically added. Applicable to :link:`team folders https://www.dropbox.com/help/986` only.",parameter:"team",type:{primitive:"Void"}},{description:"A group is created and managed by a user.",parameter:"user_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},T5cu:function(e,t,i){var r=i("5Zwl"),o=i("9aUh");e.exports=function(e,t,i){var a=!0,n=!0;if("function"!=typeof e)throw new TypeError("Expected a function");return o(i)&&(a="leading"in i?!!i.leading:a,n="trailing"in i?!!i.trailing:n),r(e,t,{leading:a,maxWait:t,trailing:n})}},T6We:function(e,t,i){"use strict";t.a={files:{LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},SearchArg:{fields:[{description:"The path in the user's Dropbox to search. Should probably be a folder.",parameter:"path",type:{primitive:"String"}},{description:'The string to search for. Query string may be rewritten to improve relevance of results. The string is split on spaces into multiple tokens. For file name searching, the last token is used for prefix matching (i.e. "bat c" matches "bat cave" but not "batman car").',parameter:"query",type:{primitive:"String"}},{description:"The starting index within the search results (used for paging).",parameter:"start",type:{primitive:"UInt64"}},{description:"The maximum number of search results to return.",parameter:"max_results",type:{primitive:"UInt64"}},{description:"The search mode (filename, filename_and_content, or deleted_filename). Note that searching file content is only available for Dropbox Business accounts.",parameter:"mode",type:{datatype:"SearchMode",namespace:"files"}}],stone_type:"struct"},SearchError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{parameter:"invalid_argument",type:{optional:{primitive:"String"}}},{description:"Something went wrong, please try again.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SearchMatch:{fields:[{description:"The type of the match.",parameter:"match_type",type:{datatype:"SearchMatchType",namespace:"files"}},{description:"The metadata for the matched file or folder.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}}],stone_type:"struct"},SearchMatchType:{description:"Indicates what type of match was found for a given item.",fields:[{description:"This item was matched on its file or folder name.",parameter:"filename",type:{primitive:"Void"}},{description:"This item was matched based on its file contents.",parameter:"content",type:{primitive:"Void"}},{description:"This item was matched based on both its contents and its file name.",parameter:"both",type:{primitive:"Void"}}],stone_type:"union"},SearchMode:{fields:[{description:"Search file and folder names.",parameter:"filename",type:{primitive:"Void"}},{description:"Search file and folder names as well as file contents.",parameter:"filename_and_content",type:{primitive:"Void"}},{description:"Search for deleted file and folder names.",parameter:"deleted_filename",type:{primitive:"Void"}}],stone_type:"union"},SearchResult:{fields:[{description:"A list (possibly empty) of matches for the query.",parameter:"matches",type:{list:{datatype:"SearchMatch",namespace:"files"}}},{description:"Used for paging. If true, indicates there is another page of results available that can be fetched by calling :route:`search` again.",parameter:"more",type:{primitive:"Boolean"}},{description:"Used for paging. Value to set the start argument to when calling :route:`search` to fetch the next page of results.",parameter:"start",type:{primitive:"UInt64"}}],stone_type:"struct"}}}},T9Ud:function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},TC1k:function(e,t,i){"use strict";t.a={team:{ActiveWebSession:{description:"Information on active web sessions.",fields:[{description:"The session id.",parameter:"session_id",type:{primitive:"String"}},{description:"Information on the hosting device.",parameter:"user_agent",type:{primitive:"String"}},{description:"Information on the hosting operating system.",parameter:"os",type:{primitive:"String"}},{description:"Information on the browser used for this web session.",parameter:"browser",type:{primitive:"String"}},{description:"The IP address of the last activity from this session.",parameter:"ip_address",type:{optional:{primitive:"String"}}},{description:"The country from which the last activity from this session was made.",parameter:"country",type:{optional:{primitive:"String"}}},{description:"The time this session was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}},{description:"The time of the last activity from this session.",parameter:"updated",type:{optional:{primitive:"Timestamp"}}},{description:"The time this session expires.",parameter:"expires",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},DesktopClientSession:{description:"Information about linked Dropbox desktop client sessions.",fields:[{description:"The session id.",parameter:"session_id",type:{primitive:"String"}},{description:"Name of the hosting desktop.",parameter:"host_name",type:{primitive:"String"}},{description:"The Dropbox desktop client type.",parameter:"client_type",type:{datatype:"DesktopPlatform",namespace:"team"}},{description:"The Dropbox client version.",parameter:"client_version",type:{primitive:"String"}},{description:"Information on the hosting platform.",parameter:"platform",type:{primitive:"String"}},{description:"Whether it's possible to delete all of the account files upon unlinking.",parameter:"is_delete_on_unlink_supported",type:{primitive:"Boolean"}},{description:"The IP address of the last activity from this session.",parameter:"ip_address",type:{optional:{primitive:"String"}}},{description:"The country from which the last activity from this session was made.",parameter:"country",type:{optional:{primitive:"String"}}},{description:"The time this session was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}},{description:"The time of the last activity from this session.",parameter:"updated",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},DesktopPlatform:{fields:[{description:"Official Windows Dropbox desktop client.",parameter:"windows",type:{primitive:"Void"}},{description:"Official Mac Dropbox desktop client.",parameter:"mac",type:{primitive:"Void"}},{description:"Official Linux Dropbox desktop client.",parameter:"linux",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListMemberDevicesArg:{fields:[{description:"The team's member id.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Whether to list web sessions of the team's member.",parameter:"include_web_sessions",type:{primitive:"Boolean"}},{description:"Whether to list linked desktop devices of the team's member.",parameter:"include_desktop_clients",type:{primitive:"Boolean"}},{description:"Whether to list linked mobile devices of the team's member.",parameter:"include_mobile_clients",type:{primitive:"Boolean"}}],stone_type:"struct"},ListMemberDevicesError:{fields:[{description:"Member not found.",parameter:"member_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListMemberDevicesResult:{fields:[{description:"List of web sessions made by this team member.",parameter:"active_web_sessions",type:{optional:{list:{datatype:"ActiveWebSession",namespace:"team"}}}},{description:"List of desktop clients used by this team member.",parameter:"desktop_client_sessions",type:{optional:{list:{datatype:"DesktopClientSession",namespace:"team"}}}},{description:"List of mobile client used by this team member.",parameter:"mobile_client_sessions",type:{optional:{list:{datatype:"MobileClientSession",namespace:"team"}}}}],stone_type:"struct"},MobileClientPlatform:{fields:[{description:"Official Dropbox iPhone client.",parameter:"iphone",type:{primitive:"Void"}},{description:"Official Dropbox iPad client.",parameter:"ipad",type:{primitive:"Void"}},{description:"Official Dropbox Android client.",parameter:"android",type:{primitive:"Void"}},{description:"Official Dropbox Windows phone client.",parameter:"windows_phone",type:{primitive:"Void"}},{description:"Official Dropbox Blackberry client.",parameter:"blackberry",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MobileClientSession:{description:"Information about linked Dropbox mobile client sessions.",fields:[{description:"The session id.",parameter:"session_id",type:{primitive:"String"}},{description:"The device name.",parameter:"device_name",type:{primitive:"String"}},{description:"The mobile application type.",parameter:"client_type",type:{datatype:"MobileClientPlatform",namespace:"team"}},{description:"The IP address of the last activity from this session.",parameter:"ip_address",type:{optional:{primitive:"String"}}},{description:"The country from which the last activity from this session was made.",parameter:"country",type:{optional:{primitive:"String"}}},{description:"The time this session was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}},{description:"The time of the last activity from this session.",parameter:"updated",type:{optional:{primitive:"Timestamp"}}},{description:"The dropbox client version.",parameter:"client_version",type:{optional:{primitive:"String"}}},{description:"The hosting OS version.",parameter:"os_version",type:{optional:{primitive:"String"}}},{description:"last carrier used by the device.",parameter:"last_carrier",type:{optional:{primitive:"String"}}}],stone_type:"struct"}}}},TE3c:function(e,t){e.exports=function(e,t){return t||(e=e.toLowerCase()),e.charAt(0).toUpperCase()+e.substring(1)},e.exports.words=function(e,t){return t||(e=e.toLowerCase()),e.replace(/(?!^[0-9])(^|[^a-zA-Z\u00C0-\u017F\u0400-\u04FF'])([a-zA-Z\u00C0-\u017F\u0400-\u04FF])/g,(function(e){return e.toUpperCase()}))}},TEbo:function(e,t,i){var r=i("Qn7i");e.exports=function(e){var t=r(e,(function(e){return 500===i.size&&i.clear(),e})),i=t.cache;return t}},TImY:function(e,t,i){"use strict";t.a={sharing:{AccessInheritance:{description:"Information about the inheritance policy of a shared folder.",fields:[{description:"The shared folder inherits its members from the parent folder.",parameter:"inherit",type:{primitive:"Void"}},{description:"The shared folder does not inherit its members from the parent folder.",parameter:"no_inherit",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AclUpdatePolicy:{description:"Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.",fields:[{description:"Only the owner can update the ACL.",parameter:"owner",type:{primitive:"Void"}},{description:"Any editor can update the ACL. This may be further restricted to editors on the same team.",parameter:"editors",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AudienceExceptionContentInfo:{description:"Information about the content that has a link audience different than that of this folder.",fields:[{description:"The name of the content, which is either a file or a folder.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},AudienceExceptions:{description:"The total count and truncated list of information of content inside this folder that has a different audience than the link on this folder. This is only returned for folders.",fields:[{parameter:"count",type:{primitive:"UInt32"}},{description:"A truncated list of some of the content that is an exception. The length of this list could be smaller than the count since it is only a sample but will not be empty as long as count is not 0.",parameter:"exceptions",type:{list:{datatype:"AudienceExceptionContentInfo",namespace:"sharing"}}}],stone_type:"struct"},AudienceRestrictingSharedFolder:{description:"Information about the shared folder that prevents the link audience for this link from being more restrictive.",fields:[{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The name of the shared folder.",parameter:"name",type:{primitive:"String"}},{description:"The link audience of the shared folder.",parameter:"audience",type:{datatype:"LinkAudience",namespace:"sharing"}}],stone_type:"struct"},FolderAction:{description:"Actions that may be taken on shared folders.",fields:[{description:"Change folder options, such as who can be invited to join the folder.",parameter:"change_options",type:{primitive:"Void"}},{description:"Disable viewer information for this folder.",parameter:"disable_viewer_info",type:{primitive:"Void"}},{description:"Change or edit contents of the folder.",parameter:"edit_contents",type:{primitive:"Void"}},{description:"Enable viewer information on the folder.",parameter:"enable_viewer_info",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read and write permission.",parameter:"invite_editor",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission.",parameter:"invite_viewer",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission but no comment permissions.",parameter:"invite_viewer_no_comment",type:{primitive:"Void"}},{description:"Relinquish one's own membership in the folder.",parameter:"relinquish_membership",type:{primitive:"Void"}},{description:"Unmount the folder.",parameter:"unmount",type:{primitive:"Void"}},{description:"Stop sharing this folder.",parameter:"unshare",type:{primitive:"Void"}},{description:"Keep a copy of the contents upon leaving or being kicked from the folder.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Use create_link instead.",parameter:"share_link",type:{primitive:"Void"}},{description:"Create a shared link for folder.",parameter:"create_link",type:{primitive:"Void"}},{description:"Set whether the folder inherits permissions from its parent.",parameter:"set_access_inheritance",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FolderPermission:{description:"Whether the user is allowed to take the action on the shared folder.",fields:[{description:"The action that the user may wish to take on the folder.",parameter:"action",type:{datatype:"FolderAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed, or if no reason is available.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},FolderPolicy:{description:"A set of policies governing membership and privileges for a shared folder.",fields:[{description:"Who can add and remove members from this shared folder.",parameter:"acl_update_policy",type:{datatype:"AclUpdatePolicy",namespace:"sharing"}},{description:"Who links can be shared with.",parameter:"shared_link_policy",type:{datatype:"SharedLinkPolicy",namespace:"sharing"}},{description:"Who can be a member of this shared folder, as set on the folder itself. The effective policy may differ from this value if the team-wide policy is more restrictive. Present only if the folder is owned by a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can be a member of this shared folder, taking into account both the folder and the team-wide policy. This value may differ from that of member_policy if the team-wide policy is more restrictive than the folder policy. Present only if the folder is owned by a team.",parameter:"resolved_member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAction:{description:"Actions that can be performed on a link.",fields:[{description:"Change the access level of the link.",parameter:"change_access_level",type:{primitive:"Void"}},{description:"Change the audience of the link.",parameter:"change_audience",type:{primitive:"Void"}},{description:"Remove the expiry date of the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Remove the password of the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Create or modify the expiry date of the link.",parameter:"set_expiry",type:{primitive:"Void"}},{description:"Create or modify the password of the link.",parameter:"set_password",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermission:{description:"Permissions for actions that can be performed on a link.",fields:[{parameter:"action",type:{datatype:"LinkAction",namespace:"sharing"}},{parameter:"allow",type:{primitive:"Boolean"}},{parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},ListFoldersArgs:{fields:[{description:"The maximum number of results to return per request.",parameter:"limit",type:{primitive:"UInt32"}},{description:"A list of `FolderAction`s corresponding to `FolderPermission`s that should appear in the  response's :field:`SharedFolderMetadata.permissions` field describing the actions the  authenticated user can perform on the folder.",parameter:"actions",type:{optional:{list:{datatype:"FolderAction",namespace:"sharing"}}}}],stone_type:"struct"},ListFoldersResult:{description:"Result for :route:`list_folders` or :route:`list_mountable_folders`, depending on which endpoint was requested.\nUnmounted shared folders can be identified by the absence of :field:`SharedFolderMetadata.path_lower`.",fields:[{description:"List of all shared folders the authenticated user has access to.",parameter:"entries",type:{list:{datatype:"SharedFolderMetadata",namespace:"sharing"}}},{description:"Present if there are additional shared folders that have not been returned yet. Pass the cursor into the corresponding continue endpoint (either :route:`list_folders/continue` or :route:`list_mountable_folders/continue`) to list additional folders.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberPolicy:{description:"Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.",fields:[{description:"Only a teammate can become a member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can become a member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedContentLinkMetadata:{description:"Metadata of a shared link for a file or folder.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The URL of the link.",parameter:"url",type:{primitive:"String"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}},{description:"The content inside this folder with link audience different than this folder's. This is only returned when an endpoint that returns metadata for a single shared folder is called, e.g. /get_folder_metadata.",parameter:"audience_exceptions",type:{optional:{datatype:"AudienceExceptions",namespace:"sharing"}}}],stone_type:"struct"},SharedFolderMetadata:{description:"The metadata which includes basic information about the shared folder.",fields:[{description:"The current user's access level for this shared folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Whether this folder is inside of a team folder.",parameter:"is_inside_team_folder",type:{primitive:"Boolean"}},{description:"Whether this folder is a :link:`team folder https://www.dropbox.com/en/help/986`.",parameter:"is_team_folder",type:{primitive:"Boolean"}},{description:"The name of the this shared folder.",parameter:"name",type:{primitive:"String"}},{description:"Policies governing this shared folder.",parameter:"policy",type:{datatype:"FolderPolicy",namespace:"sharing"}},{description:"URL for displaying a web preview of the shared folder.",parameter:"preview_url",type:{primitive:"String"}},{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"Timestamp indicating when the current user was invited to this shared folder.",parameter:"time_invited",type:{primitive:"Timestamp"}},{description:"The display names of the users that own the folder. If the folder is part of a team folder, the display names of the team admins are also included. Absent if the owner display names cannot be fetched.",parameter:"owner_display_names",type:{optional:{list:{primitive:"String"}}}},{description:"The team that owns the folder. This field is not present if the folder is not owned by a team.",parameter:"owner_team",type:{optional:{datatype:"Team",namespace:"users"}}},{description:"The ID of the parent shared folder. This field is present only if the folder is contained within another shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"The lower-cased full path of this shared folder. Absent for unmounted folders.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"Display name for the parent folder.",parameter:"parent_folder_name",type:{optional:{primitive:"String"}}},{description:"The metadata of the shared content link to this shared folder. Absent if there is no link on the folder. This is for an unreleased feature so it may not be returned yet.",parameter:"link_metadata",type:{optional:{datatype:"SharedContentLinkMetadata",namespace:"sharing"}}},{description:"Actions the current user may perform on the folder and its contents. The set of permissions corresponds to the FolderActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"FolderPermission",namespace:"sharing"}}}},{description:"Whether the folder inherits its members from its parent.",parameter:"access_inheritance",type:{datatype:"AccessInheritance",namespace:"sharing"}}],stone_type:"struct"},SharedLinkPolicy:{description:"Who can view shared links in this folder.",fields:[{description:"Links can be shared with anyone.",parameter:"anyone",type:{primitive:"Void"}},{description:"Links can be shared with anyone on the same team as the owner.",parameter:"team",type:{primitive:"Void"}},{description:"Links can only be shared among members of the shared folder.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ViewerInfoPolicy:{fields:[{description:"Viewer information is available on this file.",parameter:"enabled",type:{primitive:"Void"}},{description:"Viewer information is disabled on this file.",parameter:"disabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},TORE:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("/knb"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},TP4Q:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Xd3L"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},TRAi:function(e,t,i){"use strict";t.__esModule=!0,t.SessionStorage=void 0;var r=function(){function e(){}var t=e.prototype;return t.read=function(e,t){var i=this.getStateKey(e,t);try{var r=window.sessionStorage.getItem(i);return r?JSON.parse(r):0}catch(o){return window&&window.___GATSBY_REACT_ROUTER_SCROLL&&window.___GATSBY_REACT_ROUTER_SCROLL[i]?window.___GATSBY_REACT_ROUTER_SCROLL[i]:0}},t.save=function(e,t,i){var r=this.getStateKey(e,t),o=JSON.stringify(i);try{window.sessionStorage.setItem(r,o)}catch(a){window&&window.___GATSBY_REACT_ROUTER_SCROLL||(window.___GATSBY_REACT_ROUTER_SCROLL={}),window.___GATSBY_REACT_ROUTER_SCROLL[r]=JSON.parse(o)}},t.getStateKey=function(e,t){var i="@@scroll|"+(e.key||e.pathname);return null==t?i:i+"|"+t},e}();t.SessionStorage=r},TSCL:function(e,t,i){},TSPQ:function(e,t,i){var r=i("s3t7"),o=i("T9Ud");e.exports=function(e){return o(e)&&"[object WeakMap]"==r(e)}},TYo9:function(e,t,i){"use strict";t.a={files:{Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},RelocationBatchArg:{fields:[{description:"List of entries to be moved or copied. Each entry is :type:`RelocationPath`.",parameter:"entries",type:{list:{datatype:"RelocationPath",namespace:"files"}}},{description:"If there's a conflict with any file, have the Dropbox server try to autorename that file to avoid the conflict.",parameter:"autorename",type:{primitive:"Boolean"}},{description:"If true, :route:`copy_batch` will copy contents in shared folder, otherwise :field:`RelocationError.cant_copy_shared_folder` will be returned if :field:`RelocationPath.from_path` contains shared folder. This field is always true for :route:`move_batch`.",parameter:"allow_shared_folder",type:{primitive:"Boolean"}},{description:"Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies.",parameter:"allow_ownership_transfer",type:{primitive:"Boolean"}}],stone_type:"struct"},RelocationBatchLaunch:{description:"Result returned by :route:`copy_batch` or :route:`move_batch` that may either launch an asynchronous job or complete synchronously.",fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{parameter:"complete",type:{datatype:"RelocationBatchResult",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchResult:{fields:[{parameter:"entries",type:{list:{datatype:"RelocationBatchResultData",namespace:"files"}}}],stone_type:"struct"},RelocationBatchResultData:{fields:[{description:"Metadata of the relocated object.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}}],stone_type:"struct"},RelocationPath:{fields:[{description:"Path in the user's Dropbox to be copied or moved.",parameter:"from_path",type:{primitive:"String"}},{description:"Path in the user's Dropbox that is the destination.",parameter:"to_path",type:{primitive:"String"}}],stone_type:"struct"}}}},"Tb/z":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("HNLP"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},TfkW:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("7LhX"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},TsNJ:function(e,t){e.exports=function(e){return function(t){return e(t)}}},Tw9J:function(e,t,i){"use strict";t.a={}},UGOH:function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberAccessLevelResult:{description:"Contains information about a member's access level to content after an operation.",fields:[{description:"The member still has this level of access to the content through a parent folder.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"A localized string with additional information about why the user has this access level to the content.",parameter:"warning",type:{optional:{primitive:"String"}}},{description:"The parent folders that a member has access to. The field is present if the user has access to the first parent folder where the member gains access.",parameter:"access_details",type:{optional:{list:{datatype:"ParentFolderAccessInfo",namespace:"sharing"}}}}],stone_type:"struct"},MemberAction:{description:"Actions that may be taken on members of a shared folder.",fields:[{description:"Allow the member to keep a copy of the folder when removing.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Make the member an editor of the folder.",parameter:"make_editor",type:{primitive:"Void"}},{description:"Make the member an owner of the folder.",parameter:"make_owner",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder.",parameter:"make_viewer",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder without commenting permissions.",parameter:"make_viewer_no_comment",type:{primitive:"Void"}},{description:"Remove the member from the folder.",parameter:"remove",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberPermission:{description:"Whether the user is allowed to take the action on the associated member.",fields:[{description:"The action that the user may wish to take on the member.",parameter:"action",type:{datatype:"MemberAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},ParentFolderAccessInfo:{description:"Contains information about a parent folder that a member has access to.",fields:[{description:"Display name for the folder.",parameter:"folder_name",type:{primitive:"String"}},{description:"The identifier of the parent shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The user's permissions for the parent shared folder.",parameter:"permissions",type:{list:{datatype:"MemberPermission",namespace:"sharing"}}},{description:"The full path to the parent shared folder relative to the acting user's root.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RemoveFolderMemberError:{fields:[{parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{parameter:"member_error",type:{datatype:"SharedFolderMemberError",namespace:"sharing"}},{description:"The target user is the owner of the shared folder. You can't remove this user until ownership has been transferred to another member.",parameter:"folder_owner",type:{primitive:"Void"}},{description:"The target user has access to the shared folder via a group.",parameter:"group_access",type:{primitive:"Void"}},{description:"This action cannot be performed on a team shared folder.",parameter:"team_folder",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"This shared folder has too many files for leaving a copy. You can still remove this user without leaving a copy.",parameter:"too_many_files",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RemoveMemberJobStatus:{fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"Removing the folder member has finished. The value is information about whether the member has another form of access.",parameter:"complete",type:{datatype:"MemberAccessLevelResult",namespace:"sharing"}},{parameter:"failed",type:{datatype:"RemoveFolderMemberError",namespace:"sharing"}}],stone_type:"union"},SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderMemberError:{fields:[{description:"The target dropbox_id is invalid.",parameter:"invalid_dropbox_id",type:{primitive:"Void"}},{description:"The target dropbox_id is not a member of the shared folder.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"The target member only has inherited access to the shared folder.",parameter:"no_explicit_access",type:{datatype:"MemberAccessLevelResult",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},UGr4:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("vWFG"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},UHWX:function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},DownloadArg:{fields:[{description:"The path of the file to download.",parameter:"path",type:{primitive:"String"}},{description:"Please specify revision in :field:`path` instead.",parameter:"rev",type:{optional:{primitive:"String"}}}],stone_type:"struct"},DownloadError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{description:"This file type cannot be downloaded directly; use :route:`export` instead.",parameter:"unsupported_file",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"}}}},ULAX:function(e,t,i){var r=i("TEbo"),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,n=r((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(o,(function(e,i,r,o){t.push(r?o.replace(a,"$1"):i||e)})),t}));e.exports=n},UgeB:function(e,t,i){var r=i("GI0s"),o=i("T9Ud");e.exports=function(e){return o(e)&&"[object Arguments]"==r(e)}},UnPy:function(e,t){e.exports=function(e,t,i){var r=-1,o=e.length;t<0&&(t=-t>o?0:o+t),(i=i>o?o:i)<0&&(i+=o),o=t>i?0:i-t>>>0,t>>>=0;for(var a=Array(o);++r<o;)a[r]=e[r+t];return a}},UxWs:function(e,t,i){"use strict";i.r(t);var r=i("Fcif"),o=i("7L9N"),a=i("xtsi"),n=i("mXGw"),s=i.n(n),p=i("xARA"),d=i.n(p),l=i("JF+v"),m=i("5LHb"),c=i("Kn+0"),h=i.n(c),u=i("emEt"),f=i("YLt+"),y=i("5yr3"),v={id:"gatsby-announcer",style:{position:"absolute",top:0,width:1,height:1,padding:0,overflow:"hidden",clip:"rect(0, 0, 0, 0)",whiteSpace:"nowrap",border:0},"aria-live":"assertive","aria-atomic":"true"},_=i("ELdr"),g=i("SDHo"),b=i("aD51"),w=f.reduce((function(e,t){return e[t.fromPath]=t,e}),{});function T(e){var t=w[e];return null!=t&&(window.___replace(t.toPath),!0)}var V=function(e,t){T(e.pathname)||Object(a.apiRunner)("onPreRouteUpdate",{location:e,prevLocation:t})},k=function(e,t){T(e.pathname)||Object(a.apiRunner)("onRouteUpdate",{location:e,prevLocation:t})},S=function(e,t){void 0===t&&(t={});var i=Object(g.parsePath)(e).pathname,r=w[i];if(r&&(e=r.toPath,i=Object(g.parsePath)(e).pathname),window.___swUpdated)window.location=i;else{var o=setTimeout((function(){y.a.emit("onDelayedLoadPageResources",{pathname:i}),Object(a.apiRunner)("onRouteUpdateDelayed",{location:window.location})}),1e3);u.default.loadPage(i).then((function(r){if(!r||r.status===u.PageResourceStatus.Error)return window.history.replaceState({},"",location.href),window.location=i,void clearTimeout(o);r&&r.page.webpackCompilationHash!==window.___webpackCompilationHash&&("serviceWorker"in navigator&&null!==navigator.serviceWorker.controller&&"activated"===navigator.serviceWorker.controller.state&&navigator.serviceWorker.controller.postMessage({gatsbyApi:"clearPathResources"}),console.log("Site has changed on server. Reloading browser"),window.location=i),Object(l.navigate)(e,t),clearTimeout(o)}))}};function x(e,t){var i=this,r=t.location,o=r.pathname,n=r.hash,s=Object(a.apiRunner)("shouldUpdateScroll",{prevRouterProps:e,pathname:o,routerProps:{location:r},getSavedScrollPosition:function(e){return i._stateStorage.read(e)}});if(s.length>0)return s[s.length-1];if(e&&e.location.pathname===o)return n?decodeURI(n.slice(1)):[0,0];return!0}var A=function(e){function t(t){var i;return(i=e.call(this,t)||this).announcementRef=s.a.createRef(),i}Object(o.a)(t,e);var i=t.prototype;return i.componentDidUpdate=function(e,t){var i=this;requestAnimationFrame((function(){var e="new page at "+i.props.location.pathname;document.title&&(e=document.title);var t=document.querySelectorAll("#gatsby-focus-wrapper h1");t&&t.length&&(e=t[0].textContent);var r="Navigated to "+e;i.announcementRef.current&&(i.announcementRef.current.innerText!==r&&(i.announcementRef.current.innerText=r))}))},i.render=function(){return Object(b.c)("div",Object(r.a)({},v,{ref:this.announcementRef}))},t}(s.a.Component),P=function(e){function t(t){var i;return i=e.call(this,t)||this,V(t.location,null),i}Object(o.a)(t,e);var i=t.prototype;return i.componentDidMount=function(){k(this.props.location,null)},i.componentDidUpdate=function(e,t,i){i&&k(this.props.location,e.location)},i.getSnapshotBeforeUpdate=function(e){return this.props.location.pathname!==e.location.pathname&&(V(this.props.location,e.location),!0)},i.render=function(){return Object(b.c)(s.a.Fragment,null,this.props.children,Object(b.c)(A,{location:location}))},t}(s.a.Component),D=i("IOVJ"),I=i("XyBk"),E=i.n(I),L=i("mK0O");function R(e,t){for(var i in e)if(!(i in t))return!0;for(var r in t)if(e[r]!==t[r])return!0;return!1}function M(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function F(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?M(Object(i),!0).forEach((function(t){Object(L.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):M(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}var q=function(e){function t(t){var i;i=e.call(this)||this;var r=t.location,o=t.pageResources;return i.state={location:F({},r),pageResources:o||u.default.loadPageSync(r.pathname)},i}Object(o.a)(t,e),t.getDerivedStateFromProps=function(e,t){var i=e.location;return t.location.href!==i.href?{pageResources:u.default.loadPageSync(i.pathname),location:F({},i)}:{location:F({},i)}};var i=t.prototype;return i.loadResources=function(e){var t=this;u.default.loadPage(e).then((function(i){i&&i.status!==u.PageResourceStatus.Error?t.setState({location:F({},window.location),pageResources:i}):(window.history.replaceState({},"",location.href),window.location=e)}))},i.shouldComponentUpdate=function(e,t){return t.pageResources?this.state.pageResources!==t.pageResources||(this.state.pageResources.component!==t.pageResources.component||(this.state.pageResources.json!==t.pageResources.json||(!(this.state.location.key===t.location.key||!t.pageResources.page||!t.pageResources.page.matchPath&&!t.pageResources.page.path)||function(e,t,i){return R(e.props,t)||R(e.state,i)}(this,e,t)))):(this.loadResources(e.location.pathname),!1)},i.render=function(){return this.props.children(this.state)},t}(s.a.Component),U=i("cSJ8"),C=i("o2xN"),j=new u.ProdLoader(E.a,C);Object(u.setLoader)(j),j.setApiRunner(a.apiRunner),window.asyncRequires=E.a,window.___emitter=y.a,window.___loader=u.publicLoader,_.c.listen((function(e){e.location.action=e.action})),window.___push=function(e){return S(e,{replace:!1})},window.___replace=function(e){return S(e,{replace:!0})},window.___navigate=function(e,t){return S(e,t)},T(window.location.pathname),Object(a.apiRunnerAsync)("onClientEntry").then((function(){Object(a.apiRunner)("registerServiceWorker").length>0&&i("NSX3");var e=function(e){return Object(b.c)(l.BaseContext.Provider,{value:{baseuri:"/",basepath:"/"}},Object(b.c)(D.a,e))},t=function(t){function i(){return t.apply(this,arguments)||this}return Object(o.a)(i,t),i.prototype.render=function(){var t=this,i=this.props.location;return Object(b.c)(q,{location:i},(function(i){var o=i.pageResources,a=i.location;return Object(b.c)(P,{location:a},Object(b.c)(m.ScrollContext,{location:a,shouldUpdateScroll:x},Object(b.c)(l.Router,{basepath:"",location:a,id:"gatsby-focus-wrapper"},Object(b.c)(e,Object(r.a)({path:"/404.html"===o.page.path?Object(U.a)(a.pathname,""):encodeURI(o.page.matchPath||o.page.path)},t.props,{location:a,pageResources:o},o.json)))))}))},i}(s.a.Component),n=window,p=n.pagePath,c=n.location;p&&""+p!==c.pathname&&!(j.findMatchPath(Object(U.a)(c.pathname,""))||"/404.html"===p||p.match(/^\/404\/?$/)||p.match(/^\/offline-plugin-app-shell-fallback\/?$/))&&Object(l.navigate)(""+p+c.search+c.hash,{replace:!0}),u.publicLoader.loadPage(c.pathname).then((function(e){if(!e||e.status===u.PageResourceStatus.Error)throw new Error("page resources for "+c.pathname+" not found. Not rendering React");window.___webpackCompilationHash=e.page.webpackCompilationHash;var i=function(){return Object(b.c)(l.Location,null,(function(e){return Object(b.c)(t,e)}))},r=Object(a.apiRunner)("wrapRootElement",{element:Object(b.c)(i,null)},Object(b.c)(i,null),(function(e){return{element:e.result}})).pop(),o=function(){return r},n=Object(a.apiRunner)("replaceHydrateFunction",void 0,d.a.hydrate)[0];h()((function(){n(Object(b.c)(o,null),"undefined"!=typeof window?document.getElementById("___gatsby"):void 0,(function(){Object(a.apiRunner)("onInitialClientRender")}))}))}))}))},UypI:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("utPc"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},UzSQ:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("/BNV"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},UzdM:function(e,t,i){var r=i("j6ZD");e.exports=function(e){return e?(e=r(e))===1/0||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}},"V/u5":function(e){e.exports=JSON.parse('{"a":"10.0.28"}')},V2ZB:function(e,t,i){var r=i("F3Ab"),o=i("Dh2Y");e.exports=function(e,t,i,a){var n=!i;i||(i={});for(var s=-1,p=t.length;++s<p;){var d=t[s],l=a?a(i[d],e[d],d,i,e):void 0;void 0===l&&(l=e[d]),n?o(i,d,l):r(i,d,l)}return i}},V8GH:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{GroupAccessType:{description:"Role of a user in group.",fields:[{description:"User is a member of the group, but has no special permissions.",parameter:"member",type:{primitive:"Void"}},{description:"User can rename the group, and add/remove members.",parameter:"owner",type:{primitive:"Void"}}],stone_type:"union"},GroupMemberInfo:{description:"Profile of group member, and role in group.",fields:[{description:"Profile of group member.",parameter:"profile",type:{datatype:"MemberProfile",namespace:"team"}},{description:"The role that the user has in the group.",parameter:"access_type",type:{datatype:"GroupAccessType",namespace:"team"}}],stone_type:"struct"},GroupSelector:{description:"Argument for selecting a single group, either by group_id or by external group ID.",fields:[{description:"Group ID.",parameter:"group_id",type:{primitive:"String"}},{description:"External ID of the group.",parameter:"group_external_id",type:{primitive:"String"}}],stone_type:"union"},GroupSelectorError:{description:"Error that can be raised when :type:`GroupSelector` is used.",fields:[{description:"No matching group found. No groups match the specified group ID.",parameter:"group_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupsMembersListArg:{fields:[{description:"The group whose members are to be listed.",parameter:"group",type:{datatype:"GroupSelector",namespace:"team"}},{description:"Number of results to return per call.",parameter:"limit",type:{primitive:"UInt32"}}],stone_type:"struct"},GroupsMembersListResult:{fields:[{parameter:"members",type:{list:{datatype:"GroupMemberInfo",namespace:"team"}}},{description:"Pass the cursor into :route:`groups/members/list/continue` to obtain additional group members.",parameter:"cursor",type:{primitive:"String"}},{description:"Is true if there are additional group members that have not been returned yet. An additional call to :route:`groups/members/list/continue` can retrieve them.",parameter:"has_more",type:{primitive:"Boolean"}}],stone_type:"struct"},MemberProfile:{description:"Basic member profile.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},V9LH:function(e,t,i){"use strict";t.a={file_properties:{LookUpPropertiesError:{fields:[{description:"No property group was found.",parameter:"property_group_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{parameter:"malformed_path",type:{primitive:"String"}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroupUpdate:{fields:[{description:"A unique identifier for a property template.",parameter:"template_id",type:{primitive:"String"}},{description:"Property fields to update. If the property field already exists, it is updated. If the property field doesn't exist, the property group is added.",parameter:"add_or_update_fields",type:{optional:{list:{datatype:"PropertyField",namespace:"file_properties"}}}},{description:"Property fields to remove (by name), provided they exist.",parameter:"remove_fields",type:{optional:{list:{primitive:"String"}}}}],stone_type:"struct"},UpdatePropertiesArg:{fields:[{description:"A unique identifier for the file or folder.",parameter:"path",type:{primitive:"String"}},{description:'The property groups "delta" updates to apply.',parameter:"update_property_groups",type:{list:{datatype:"PropertyGroupUpdate",namespace:"file_properties"}}}],stone_type:"struct"},UpdatePropertiesError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{parameter:"path",type:{datatype:"LookupError",namespace:"file_properties"}},{description:"This folder cannot be tagged. Tagging folders is not supported for team-owned templates.",parameter:"unsupported_folder",type:{primitive:"Void"}},{description:"One or more of the supplied property field values is too large.",parameter:"property_field_too_large",type:{primitive:"Void"}},{description:"One or more of the supplied property fields does not conform to the template specifications.",parameter:"does_not_fit_template",type:{primitive:"Void"}},{description:"There are 2 or more property groups referring to the same templates in the input.",parameter:"duplicate_property_groups",type:{primitive:"Void"}},{parameter:"property_group_lookup",type:{datatype:"LookUpPropertiesError",namespace:"file_properties"}}],stone_type:"open_union"}}}},VDtQ:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("/YmN"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},VLNq:function(e,t,i){"use strict";t.a={file_properties:{InvalidPropertyGroupError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{parameter:"path",type:{datatype:"LookupError",namespace:"file_properties"}},{description:"This folder cannot be tagged. Tagging folders is not supported for team-owned templates.",parameter:"unsupported_folder",type:{primitive:"Void"}},{description:"One or more of the supplied property field values is too large.",parameter:"property_field_too_large",type:{primitive:"Void"}},{description:"One or more of the supplied property fields does not conform to the template specifications.",parameter:"does_not_fit_template",type:{primitive:"Void"}},{description:"There are 2 or more property groups referring to the same templates in the input.",parameter:"duplicate_property_groups",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{parameter:"malformed_path",type:{primitive:"String"}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{CommitInfo:{fields:[{description:"Path in the user's Dropbox to save the file.",parameter:"path",type:{primitive:"String"}},{description:"Selects what to do if the file already exists.",parameter:"mode",type:{datatype:"WriteMode",namespace:"files"}},{description:"If there's a conflict, as determined by :field:`mode`, have the Dropbox server try to autorename the file to avoid conflict.",parameter:"autorename",type:{primitive:"Boolean"}},{description:"The value to store as the :field:`client_modified` timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified.",parameter:"client_modified",type:{optional:{primitive:"Timestamp"}}},{description:"Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If :val:`true`, this tells the clients that this modification shouldn't result in a user notification.",parameter:"mute",type:{primitive:"Boolean"}},{description:"List of custom properties to add to file.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:'Be more strict about how each :type:`WriteMode` detects conflict. For example, always return a conflict error when :field:`mode` = :field:`WriteMode.update` and the given "rev" doesn\'t match the existing file\'s "rev", even if the existing file has been deleted.',parameter:"strict_conflict",type:{primitive:"Boolean"}}],stone_type:"struct"},Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"},UploadSessionCursor:{fields:[{description:"The upload session ID (returned by :route:`upload_session/start`).",parameter:"session_id",type:{primitive:"String"}},{description:"The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error.",parameter:"offset",type:{primitive:"UInt64"}}],stone_type:"struct"},UploadSessionFinishArg:{fields:[{description:"Contains the upload session ID and the offset.",parameter:"cursor",type:{datatype:"UploadSessionCursor",namespace:"files"}},{description:"Contains the path and other optional modifiers for the commit.",parameter:"commit",type:{datatype:"CommitInfo",namespace:"files"}}],stone_type:"struct"},UploadSessionFinishError:{fields:[{description:"The session arguments are incorrect; the value explains the reason.",parameter:"lookup_failed",type:{datatype:"UploadSessionLookupError",namespace:"files"}},{description:"Unable to save the uploaded contents to a file. Data has already been appended to the upload session. Please retry with empty data body and updated offset.",parameter:"path",type:{datatype:"WriteError",namespace:"files"}},{description:"The supplied property group is invalid. The file has uploaded without property groups.",parameter:"properties_error",type:{datatype:"InvalidPropertyGroupError",namespace:"file_properties"}},{description:"The batch request commits files into too many different shared folders. Please limit your batch request to files contained in a single shared folder.",parameter:"too_many_shared_folder_targets",type:{primitive:"Void"}},{description:"There are too many write operations happening in the user's Dropbox. You should retry uploading this file.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UploadSessionLookupError:{fields:[{description:"The upload session ID was not found or has expired. Upload sessions are valid for 48 hours.",parameter:"not_found",type:{primitive:"Void"}},{description:"The specified offset was incorrect. See the value for the correct offset. This error may occur when a previous request was received and processed successfully but the client did not receive the response, e.g. due to a network error.",parameter:"incorrect_offset",type:{datatype:"UploadSessionOffsetError",namespace:"files"}},{description:"You are attempting to append data to an upload session that has already been closed (i.e. committed).",parameter:"closed",type:{primitive:"Void"}},{description:"The session must be closed before calling upload_session/finish_batch.",parameter:"not_closed",type:{primitive:"Void"}},{description:"You can not append to the upload session because the size of a file should not reach the max file size limit (i.e. 350GB).",parameter:"too_large",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UploadSessionOffsetError:{fields:[{description:"The offset up to which data has been collected.",parameter:"correct_offset",type:{primitive:"UInt64"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteMode:{description:"Your intent when writing a file to some path. This is used to determine what constitutes a conflict and what the autorename strategy is.\nIn some situations, the conflict behavior is identical: (a) If the target path doesn't refer to anything, the file is always written; no conflict. (b) If the target path refers to a folder, it's always a conflict. (c) If the target path refers to a file with identical contents, nothing gets written; no conflict.\nThe conflict checking differs in the case where there's a file at the target path with contents different from the contents you're trying to write.",fields:[{description:'Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, "document.txt" might become "document (2).txt".',parameter:"add",type:{primitive:"Void"}},{description:"Always overwrite the existing file. The autorename strategy is the same as it is for :field:`add`.",parameter:"overwrite",type:{primitive:"Void"}},{description:'Overwrite if the given "rev" matches the existing file\'s "rev". The autorename strategy is to append the string "conflicted copy" to the file name. For example, "document.txt" might become "document (conflicted copy).txt" or "document (Panda\'s conflicted copy).txt".',parameter:"update",type:{primitive:"String"}}],stone_type:"union"}}}},VNQV:function(e,t,i){var r=i("LSEb")(i("s3UK"),"DataView");e.exports=r},VP5h:function(e,t,i){"use strict";t.a={team:{LegalHoldsPolicyReleaseArg:{fields:[{description:"The legal hold Id.",parameter:"id",type:{primitive:"String"}}],stone_type:"struct"},LegalHoldsPolicyReleaseError:{fields:[{description:"There has been an unknown legal hold error.",parameter:"unknown_legal_hold_error",type:{primitive:"Void"}},{description:"You don't have permissions to perform this action.",parameter:"insufficient_permissions",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"Legal hold is currently performing another operation.",parameter:"legal_hold_performing_another_operation",type:{primitive:"Void"}},{description:"Legal hold is currently performing a release or is already released.",parameter:"legal_hold_already_releasing",type:{primitive:"Void"}},{description:"Legal hold policy does not exist for :field:`LegalHoldsPolicyReleaseArg.id`.",parameter:"legal_hold_policy_not_found",type:{primitive:"Void"}}],stone_type:"open_union"}}}},VXDN:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("j0i9"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},VXnV:function(e,t,i){"use strict";t.a={file_properties:{TemplateFilterBase:{fields:[{description:"Only templates with an ID in the supplied list will be returned (a subset of templates will be returned).",parameter:"filter_some",type:{list:{primitive:"String"}}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},files:{GetMetadataArg:{fields:[{description:"The path of a file or folder on Dropbox.",parameter:"path",type:{primitive:"String"}},{description:"If true, :field:`FileMetadata.media_info` is set for photo and video.",parameter:"include_media_info",type:{primitive:"Boolean"}},{description:"If true, :type:`DeletedMetadata` will be returned for deleted file or folder, otherwise :field:`LookupError.not_found` will be returned.",parameter:"include_deleted",type:{primitive:"Boolean"}},{description:"If true, the results will include a flag for each file indicating whether or not  that file has any explicit members.",parameter:"include_has_explicit_shared_members",type:{primitive:"Boolean"}},{description:"If set to a valid list of template IDs, :field:`FileMetadata.property_groups` is set if there exists property data associated with the file and each of the listed templates.",parameter:"include_property_groups",type:{optional:{datatype:"TemplateFilterBase",namespace:"file_properties"}}}],stone_type:"struct"},GetMetadataError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}}],stone_type:"union"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0}}}},VY7S:function(e,t,i){var r=i("WRuO"),o=i("COrk");e.exports=function(e,t,i,a){var n=i.length,s=n,p=!a;if(null==e)return!s;for(e=Object(e);n--;){var d=i[n];if(p&&d[2]?d[1]!==e[d[0]]:!(d[0]in e))return!1}for(;++n<s;){var l=(d=i[n])[0],m=e[l],c=d[1];if(p&&d[2]){if(void 0===m&&!(l in e))return!1}else{var h=new r;if(a)var u=a(m,c,l,e,t,h);if(!(void 0===u?o(c,m,3,a,h):u))return!1}}return!0}},VZJX:function(e,t,i){var r=i("cm7J");e.exports=function(e){var t=this.__data__,i=r(t,e);return i<0?void 0:t[i][1]}},VbZR:function(e,t){e.exports=function(e){return e!=e}},VcOe:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("vfsU"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},VdN0:function(e,t,i){"use strict";t.a={team_common:{MemberSpaceLimitType:{description:"The type of the space limit imposed on a team member.",fields:[{description:"The team member does not have imposed space limit.",parameter:"off",type:{primitive:"Void"}},{description:"The team member has soft imposed space limit - the limit is used for display and for notifications.",parameter:"alert_only",type:{primitive:"Void"}},{description:"The team member has hard imposed space limit - Dropbox file sync will stop after the limit is reached.",parameter:"stop_sync",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{IndividualSpaceAllocation:{fields:[{description:"The total space allocated to the user's account (bytes).",parameter:"allocated",type:{primitive:"UInt64"}}],stone_type:"struct"},SpaceAllocation:{description:"Space is allocated differently based on the type of account.",fields:[{description:"The user's space allocation applies only to their individual account.",parameter:"individual",type:{datatype:"IndividualSpaceAllocation",namespace:"users"}},{description:"The user shares space with other members of their team.",parameter:"team",type:{datatype:"TeamSpaceAllocation",namespace:"users"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SpaceUsage:{description:"Information about a user's space usage and quota.",fields:[{description:"The user's total space usage (bytes).",parameter:"used",type:{primitive:"UInt64"}},{description:"The user's space allocation.",parameter:"allocation",type:{datatype:"SpaceAllocation",namespace:"users"}}],stone_type:"struct"},TeamSpaceAllocation:{fields:[{description:"The total space currently used by the user's team (bytes).",parameter:"used",type:{primitive:"UInt64"}},{description:"The total space allocated to the user's team (bytes).",parameter:"allocated",type:{primitive:"UInt64"}},{description:"The total space allocated to the user within its team allocated space (0 means that no restriction is imposed on the user's quota within its team).",parameter:"user_within_team_space_allocated",type:{primitive:"UInt64"}},{description:"The type of the space limit imposed on the team member (off, alert_only, stop_sync).",parameter:"user_within_team_space_limit_type",type:{datatype:"MemberSpaceLimitType",namespace:"team_common"}},{description:"An accurate cached calculation of a team member's total space usage (bytes).",parameter:"user_within_team_space_used_cached",type:{primitive:"UInt64"}}],stone_type:"struct"}}}},Vsi7:function(e,t,i){"use strict";t.a={files:{LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},MoveIntoVaultError:{fields:[{description:"Moving shared folder into Vault is not allowed.",parameter:"is_shared_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationArg:{fields:[{description:"Path in the user's Dropbox to be copied or moved.",parameter:"from_path",type:{primitive:"String"}},{description:"Path in the user's Dropbox that is the destination.",parameter:"to_path",type:{primitive:"String"}},{description:"If true, :route:`copy` will copy contents in shared folder, otherwise :field:`RelocationError.cant_copy_shared_folder` will be returned if :field:`from_path` contains shared folder. This field is always true for :route:`move`.",parameter:"allow_shared_folder",type:{primitive:"Boolean"}},{description:"If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict.",parameter:"autorename",type:{primitive:"Boolean"}},{description:"Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies.",parameter:"allow_ownership_transfer",type:{primitive:"Boolean"}}],stone_type:"struct"},RelocationError:{fields:[{parameter:"from_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"from_write",type:{datatype:"WriteError",namespace:"files"}},{parameter:"to",type:{datatype:"WriteError",namespace:"files"}},{description:"Shared folders can't be copied.",parameter:"cant_copy_shared_folder",type:{primitive:"Void"}},{description:"Your move operation would result in nested shared folders.  This is not allowed.",parameter:"cant_nest_shared_folder",type:{primitive:"Void"}},{description:"You cannot move a folder into itself.",parameter:"cant_move_folder_into_itself",type:{primitive:"Void"}},{description:"The operation would involve more than 10,000 files and folders.",parameter:"too_many_files",type:{primitive:"Void"}},{description:"There are duplicated/nested paths among :field:`RelocationArg.from_path` and :field:`RelocationArg.to_path`.",parameter:"duplicated_or_nested_paths",type:{primitive:"Void"}},{description:"Your move operation would result in an ownership transfer. You may reissue the request with the field :field:`RelocationArg.allow_ownership_transfer` to true.",parameter:"cant_transfer_ownership",type:{primitive:"Void"}},{description:"The current user does not have enough space to move or copy the files.",parameter:"insufficient_quota",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{description:"Can't move the shared folder to the given destination.",parameter:"cant_move_shared_folder",type:{primitive:"Void"}},{description:"Some content cannot be moved into Vault under certain circumstances, see detailed error.",parameter:"cant_move_into_vault",type:{datatype:"MoveIntoVaultError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationResult:{fields:[{description:"Metadata of the relocated object.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},Vujp:function(e,t,i){var r=i("6iN7"),o=i("lgYy"),a=i("SyCk");e.exports=function(e){return a(e)?r(e,!0):o(e)}},VveD:function(e,t,i){var r=i("fRAL"),o=i("Sq4h"),a=i("s3UK");e.exports=function(e,t,i,n){var s=1&t,p=o(e);return function t(){for(var o=-1,d=arguments.length,l=-1,m=n.length,c=Array(m+d),h=this&&this!==a&&this instanceof t?p:e;++l<m;)c[l]=n[l];for(;d--;)c[l++]=arguments[++o];return r(h,s?i:this,c)}}},W2NF:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("ONaf"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},W8I1:function(e,t,i){"use strict";t.a={team:{LegalHoldPolicy:{fields:[{description:"The legal hold id.",parameter:"id",type:{primitive:"String"}},{description:"Policy name.",parameter:"name",type:{primitive:"String"}},{description:"Team members IDs and number of permanetly deleted members under hold.",parameter:"members",type:{datatype:"MembersInfo",namespace:"team"}},{description:"The current state of the hold.",parameter:"status",type:{datatype:"LegalHoldStatus",namespace:"team"}},{description:"Start date of the legal hold policy.",parameter:"start_date",type:{primitive:"Timestamp"}},{description:"A description of the legal hold policy.",parameter:"description",type:{optional:{primitive:"String"}}},{description:"The time at which the legal hold was activated.",parameter:"activation_time",type:{optional:{primitive:"Timestamp"}}},{description:"End date of the legal hold policy.",parameter:"end_date",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},LegalHoldStatus:{fields:[{description:"The legal hold policy is active.",parameter:"active",type:{primitive:"Void"}},{description:"The legal hold policy was released.",parameter:"released",type:{primitive:"Void"}},{description:"The legal hold policy is activating.",parameter:"activating",type:{primitive:"Void"}},{description:"The legal hold policy is updating.",parameter:"updating",type:{primitive:"Void"}},{description:"The legal hold policy is exporting.",parameter:"exporting",type:{primitive:"Void"}},{description:"The legal hold policy is releasing.",parameter:"releasing",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LegalHoldsListPoliciesArg:{fields:[{description:"Whether to return holds that were released.",parameter:"include_released",type:{primitive:"Boolean"}}],stone_type:"struct"},LegalHoldsListPoliciesError:{fields:[{description:"There has been an unknown legal hold error.",parameter:"unknown_legal_hold_error",type:{primitive:"Void"}},{description:"You don't have permissions to perform this action.",parameter:"insufficient_permissions",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"Temporary infrastructure failure, please retry.",parameter:"transient_error",type:{primitive:"Void"}}],stone_type:"open_union"},LegalHoldsListPoliciesResult:{fields:[{parameter:"policies",type:{list:{datatype:"LegalHoldPolicy",namespace:"team"}}}],stone_type:"struct"},MembersInfo:{fields:[{description:"Team member IDs of the users under this hold.",parameter:"team_member_ids",type:{list:{primitive:"String"}}},{description:"The number of permanently deleted users that were under this hold.",parameter:"permanently_deleted_users",type:{primitive:"UInt64"}}],stone_type:"struct"}}}},WCFZ:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{GroupAccessType:{description:"Role of a user in group.",fields:[{description:"User is a member of the group, but has no special permissions.",parameter:"member",type:{primitive:"Void"}},{description:"User can rename the group, and add/remove members.",parameter:"owner",type:{primitive:"Void"}}],stone_type:"union"},GroupCreateArg:{fields:[{description:"Group name.",parameter:"group_name",type:{primitive:"String"}},{description:"Automatically add the creator of the group.",parameter:"add_creator_as_owner",type:{primitive:"Boolean"}},{description:"The creator of a team can associate an arbitrary external ID to the group.",parameter:"group_external_id",type:{optional:{primitive:"String"}}},{description:"Whether the team can be managed by selected users, or only by team admins.",parameter:"group_management_type",type:{optional:{datatype:"GroupManagementType",namespace:"team_common"}}}],stone_type:"struct"},GroupCreateError:{fields:[{description:"The requested group name is already being used by another group.",parameter:"group_name_already_used",type:{primitive:"Void"}},{description:"Group name is empty or has invalid characters.",parameter:"group_name_invalid",type:{primitive:"Void"}},{description:"The requested external ID is already being used by another group.",parameter:"external_id_already_in_use",type:{primitive:"Void"}},{description:"System-managed group cannot be manually created.",parameter:"system_managed_group_disallowed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupFullInfo:{description:"Full description of a group.",fields:[{parameter:"group_name",type:{primitive:"String"}},{parameter:"group_id",type:{primitive:"String"}},{description:"Who is allowed to manage the group.",parameter:"group_management_type",type:{datatype:"GroupManagementType",namespace:"team_common"}},{description:"The group creation time as a UTC timestamp in milliseconds since the Unix epoch.",parameter:"created",type:{primitive:"UInt64"}},{description:"External ID of group. This is an arbitrary ID that an admin can attach to a group.",parameter:"group_external_id",type:{optional:{primitive:"String"}}},{description:"The number of members in the group.",parameter:"member_count",type:{optional:{primitive:"UInt32"}}},{description:"List of group members.",parameter:"members",type:{optional:{list:{datatype:"GroupMemberInfo",namespace:"team"}}}}],stone_type:"struct"},GroupMemberInfo:{description:"Profile of group member, and role in group.",fields:[{description:"Profile of group member.",parameter:"profile",type:{datatype:"MemberProfile",namespace:"team"}},{description:"The role that the user has in the group.",parameter:"access_type",type:{datatype:"GroupAccessType",namespace:"team"}}],stone_type:"struct"},MemberProfile:{description:"Basic member profile.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"}},team_common:{GroupManagementType:{description:"The group type determines how a group is managed.",fields:[{description:"A group which is managed by selected users.",parameter:"user_managed",type:{primitive:"Void"}},{description:"A group which is managed by team admins only.",parameter:"company_managed",type:{primitive:"Void"}},{description:"A group which is managed automatically by Dropbox.",parameter:"system_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},WGrI:function(e,t,i){"use strict";var r=function(e){return function(e){return!!e&&"object"==typeof e}(e)&&!function(e){var t=Object.prototype.toString.call(e);return"[object RegExp]"===t||"[object Date]"===t||function(e){return e.$$typeof===o}(e)}(e)};var o="function"==typeof Symbol&&Symbol.for?Symbol.for("react.element"):60103;function a(e,t){return!1!==t.clone&&t.isMergeableObject(e)?l((i=e,Array.isArray(i)?[]:{}),e,t):e;var i}function n(e,t,i){return e.concat(t).map((function(e){return a(e,i)}))}function s(e){return Object.keys(e).concat(function(e){return Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(e).filter((function(t){return e.propertyIsEnumerable(t)})):[]}(e))}function p(e,t){try{return t in e}catch(i){return!1}}function d(e,t,i){var r={};return i.isMergeableObject(e)&&s(e).forEach((function(t){r[t]=a(e[t],i)})),s(t).forEach((function(o){(function(e,t){return p(e,t)&&!(Object.hasOwnProperty.call(e,t)&&Object.propertyIsEnumerable.call(e,t))})(e,o)||(p(e,o)&&i.isMergeableObject(t[o])?r[o]=function(e,t){if(!t.customMerge)return l;var i=t.customMerge(e);return"function"==typeof i?i:l}(o,i)(e[o],t[o],i):r[o]=a(t[o],i))})),r}function l(e,t,i){(i=i||{}).arrayMerge=i.arrayMerge||n,i.isMergeableObject=i.isMergeableObject||r,i.cloneUnlessOtherwiseSpecified=a;var o=Array.isArray(t);return o===Array.isArray(e)?o?i.arrayMerge(e,t,i):d(e,t,i):a(t,i)}l.all=function(e,t){if(!Array.isArray(e))throw new Error("first argument should be an array");return e.reduce((function(e,i){return l(e,i,t)}),{})};var m=l;e.exports=m},"WMT/":function(e,t){e.exports=function(e,t){for(var i=-1,r=null==e?0:e.length;++i<r&&!1!==t(e[i],i,e););return e}},WOig:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("ol9n"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},WRuO:function(e,t,i){var r=i("RW/s"),o=i("e1Ej"),a=i("zEvu"),n=i("Chmn"),s=i("AJMQ"),p=i("kCQp");function d(e){var t=this.__data__=new r(e);this.size=t.size}d.prototype.clear=o,d.prototype.delete=a,d.prototype.get=n,d.prototype.has=s,d.prototype.set=p,e.exports=d},WYPT:function(e,t,i){var r=i("JpX9");function o(e,t,i){var a=r(e,8,void 0,void 0,void 0,void 0,void 0,t=i?void 0:t);return a.placeholder=o.placeholder,a}o.placeholder={},e.exports=o},Wbzz:function(e,t,i){"use strict";i("mXGw");var r=i("SDHo"),o=i.n(r);i.d(t,"a",(function(){return o.a}));i("lw3w");var a=i("emEt");i("aD51"),a.default.enqueue},WjON:function(e,t,i){var r=i("zcvR");e.exports=function(e){var t=r(this,e).delete(e);return this.size-=t?1:0,t}},WojU:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("QazD"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"X/0h":function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},X3Hh:function(e,t,i){var r=i("QDPn"),o=i("iZmY");function a(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=void 0}a.prototype=r(o.prototype),a.prototype.constructor=a,e.exports=a},XA32:function(e,t){e.exports=function(e){return e.placeholder}},XHVS:function(e,t,i){"use strict";t.a={files:{LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},sharing:{CreateSharedLinkArg:{fields:[{description:"The path to share.",parameter:"path",type:{primitive:"String"}},{description:"Whether to return a shortened URL.",parameter:"short_url",type:{primitive:"Boolean"}},{description:"If it's okay to share a path that does not yet exist, set this to either :field:`PendingUploadMode.file` or :field:`PendingUploadMode.folder` to indicate whether to assume it's a file or folder.",parameter:"pending_upload",type:{optional:{datatype:"PendingUploadMode",namespace:"sharing"}}}],stone_type:"struct"},CreateSharedLinkError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PathLinkMetadata:{description:"Metadata for a path-based shared link.",fields:[{description:"URL of the shared link.",parameter:"url",type:{primitive:"String"}},{description:"Who can access the link.",parameter:"visibility",type:{datatype:"Visibility",namespace:"sharing"}},{description:"Path in user's Dropbox.",parameter:"path",type:{primitive:"String"}},{description:"Expiration time, if set. By default the link won't expire.",parameter:"expires",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},PendingUploadMode:{description:"Flag to indicate pending upload default (for linking to not-yet-existing paths).",fields:[{description:"Assume pending uploads are files.",parameter:"file",type:{primitive:"Void"}},{description:"Assume pending uploads are folders.",parameter:"folder",type:{primitive:"Void"}}],stone_type:"union"},Visibility:{description:"Who can access a shared link. The most open visibility is :field:`public`. The default depends on many aspects, such as team and user preferences and shared folder settings.",fields:[{description:"Anyone who has received the link can access it. No login required.",parameter:"public",type:{primitive:"Void"}},{description:"Only members of the same team can access the link. Login is required.",parameter:"team_only",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Only members of the same team who have the link-specific password can access the link.",parameter:"team_and_password",type:{primitive:"Void"}},{description:"Only members of the shared folder containing the linked file can access the link. Login is required.",parameter:"shared_folder_only",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},XHox:function(e,t,i){var r=i("+dZb")("head",i("9lU+"),i("hgXp"));r.placeholder=i("IOY3"),e.exports=r},XHrT:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("SvR2"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},XMYa:function(e,t,i){"use strict";t.a={file_requests:{DeleteFileRequestArgs:{description:"Arguments for :route:`delete`.",fields:[{description:"List IDs of the file requests to delete.",parameter:"ids",type:{list:{primitive:"String"}}}],stone_type:"struct"},DeleteFileRequestError:{description:"There was an error deleting these file requests.",fields:[{description:"This user's Dropbox Business team doesn't allow file requests.",parameter:"disabled_for_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"This file request ID was not found.",parameter:"not_found",type:{primitive:"Void"}},{description:"The specified path is not a folder.",parameter:"not_a_folder",type:{primitive:"Void"}},{description:"This file request is not accessible to this app. Apps with the app folder permission can only access file requests in their app folder.",parameter:"app_lacks_access",type:{primitive:"Void"}},{description:"This user doesn't have permission to access or modify this file request.",parameter:"no_permission",type:{primitive:"Void"}},{description:"This user's email address is not verified. File requests are only available on accounts with a verified email address. Users can verify their email address :link:`here https://www.dropbox.com/help/317`.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"There was an error validating the request. For example, the title was invalid, or there were disallowed characters in the destination path.",parameter:"validation_error",type:{primitive:"Void"}},{description:"One or more file requests currently open.",parameter:"file_request_open",type:{primitive:"Void"}}],stone_type:"open_union"},DeleteFileRequestsResult:{description:"Result for :route:`delete`.",fields:[{description:"The file requests deleted by the request.",parameter:"file_requests",type:{list:{datatype:"FileRequest",namespace:"file_requests"}}}],stone_type:"struct"},FileRequest:{description:"A :link:`file request https://www.dropbox.com/help/9090` for receiving files into the user's Dropbox account.",fields:[{description:"The ID of the file request.",parameter:"id",type:{primitive:"String"}},{description:"The URL of the file request.",parameter:"url",type:{primitive:"String"}},{description:"The title of the file request.",parameter:"title",type:{primitive:"String"}},{description:"When this file request was created.",parameter:"created",type:{primitive:"Timestamp"}},{description:"Whether or not the file request is open. If the file request is closed, it will not accept any more file submissions.",parameter:"is_open",type:{primitive:"Boolean"}},{description:"The number of files this file request has received.",parameter:"file_count",type:{primitive:"Int64"}},{description:"The path of the folder in the Dropbox where uploaded files will be sent. This can be :val:`null` if the destination was removed. For apps with the app folder permission, this will be relative to the app folder.",parameter:"destination",type:{optional:{primitive:"String"}}},{description:"The deadline for this file request. Only set if the request has a deadline.",parameter:"deadline",type:{optional:{datatype:"FileRequestDeadline",namespace:"file_requests"}}}],stone_type:"struct"},FileRequestDeadline:{fields:[{description:"The deadline for this file request.",parameter:"deadline",type:{primitive:"Timestamp"}},{description:"If set, allow uploads after the deadline has passed. These     uploads will be marked overdue.",parameter:"allow_late_uploads",type:{optional:{datatype:"GracePeriod",namespace:"file_requests"}}}],stone_type:"struct"},GracePeriod:{fields:[{parameter:"one_day",type:{primitive:"Void"}},{parameter:"two_days",type:{primitive:"Void"}},{parameter:"seven_days",type:{primitive:"Void"}},{parameter:"thirty_days",type:{primitive:"Void"}},{parameter:"always",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},XXCu:function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},Xd3L:function(e,t,i){"use strict";t.a={file_properties:{ModifyTemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"A property field key with that name already exists in the template.",parameter:"conflicting_property_names",type:{primitive:"Void"}},{description:"There are too many properties in the changed template. The maximum number of properties per template is 32.",parameter:"too_many_properties",type:{primitive:"Void"}},{description:"There are too many templates for the team.",parameter:"too_many_templates",type:{primitive:"Void"}},{description:"The template name, description or one or more of the property field keys is too large.",parameter:"template_attribute_too_large",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyFieldTemplate:{description:"Defines how a single property field may be structured. Used exclusively by :type:`PropertyGroupTemplate`.",fields:[{description:"Key of the property field being described. Property field keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description of the property field. Property field descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Data type of the value of this property field. This type will be enforced upon property creation and modifications.",parameter:"type",type:{datatype:"PropertyType",namespace:"file_properties"}}],stone_type:"struct"},PropertyType:{description:"Data type of the given property field added.",fields:[{description:"The associated property field will be of type string. Unicode is supported.",parameter:"string",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UpdateTemplateArg:{fields:[{description:"An identifier for template added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}},{description:"A display name for the template. template names can be up to 256 bytes.",parameter:"name",type:{optional:{primitive:"String"}}},{description:"Description for the new template. Template descriptions can be up to 1024 bytes.",parameter:"description",type:{optional:{primitive:"String"}}},{description:"Property field templates to be added to the group template. There can be up to 32 properties in a single template.",parameter:"add_fields",type:{optional:{list:{datatype:"PropertyFieldTemplate",namespace:"file_properties"}}}}],stone_type:"struct"},UpdateTemplateResult:{fields:[{description:"An identifier for template added by route  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}}],stone_type:"struct"}}}},XucX:function(e,t,i){"use strict";t.a={users:{BasicAccount:{description:"Basic information about any account.",fields:[{description:"The user's unique Dropbox ID.",parameter:"account_id",type:{primitive:"String"}},{description:"Details of a user's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's e-mail address. Do not rely on this without checking the :field:`email_verified` field. Even then, it's possible that the user has since lost access to their e-mail.",parameter:"email",type:{primitive:"String"}},{description:"Whether the user has verified their e-mail address.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"Whether the user has been disabled.",parameter:"disabled",type:{primitive:"Boolean"}},{description:"Whether this user is a teammate of the current user. If this account is the current user's account, then this will be :val:`true`.",parameter:"is_teammate",type:{primitive:"Boolean"}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}},{description:"The user's unique team member id. This field will only be present if the user is part of a team and :field:`is_teammate` is :val:`true`.",parameter:"team_member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GetAccountBatchArg:{fields:[{description:"List of user account identifiers.  Should not contain any duplicate account IDs.",parameter:"account_ids",type:{list:{primitive:"String"}}}],stone_type:"struct"},GetAccountBatchError:{fields:[{description:"The value is an account ID specified in :field:`GetAccountBatchArg.account_ids` that does not exist.",parameter:"no_account",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},XyBk:function(e,t,i){t.components={"component---src-mdx-non-generated-business-endpoints-preamble-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(4)]).then(i.bind(null,"Ogh8"))},"component---src-mdx-non-generated-user-endpoints-preamble-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(5)]).then(i.bind(null,"bpam"))},"component---src-mdx-routes-account-set-profile-photo-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(6)]).then(i.bind(null,"JeSn"))},"component---src-mdx-routes-auth-token-from-oauth-1-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(7)]).then(i.bind(null,"H6Gi"))},"component---src-mdx-routes-auth-token-revoke-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(8)]).then(i.bind(null,"EFbP"))},"component---src-mdx-routes-check-app-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(9)]).then(i.bind(null,"QN4+"))},"component---src-mdx-routes-check-user-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(10)]).then(i.bind(null,"0lZ5"))},"component---src-mdx-routes-cloud-docs-get-content-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(11)]).then(i.bind(null,"1Q+S"))},"component---src-mdx-routes-cloud-docs-get-metadata-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(12)]).then(i.bind(null,"c5Az"))},"component---src-mdx-routes-cloud-docs-lock-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(13)]).then(i.bind(null,"jHvF"))},"component---src-mdx-routes-cloud-docs-rename-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(14)]).then(i.bind(null,"0Lsf"))},"component---src-mdx-routes-cloud-docs-unlock-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(15)]).then(i.bind(null,"Hpbo"))},"component---src-mdx-routes-cloud-docs-update-content-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(16)]).then(i.bind(null,"s6Ff"))},"component---src-mdx-routes-contacts-delete-manual-contacts-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(17)]).then(i.bind(null,"3XB0"))},"component---src-mdx-routes-contacts-delete-manual-contacts-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(18)]).then(i.bind(null,"gQ3s"))},"component---src-mdx-routes-file-properties-properties-add-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(19)]).then(i.bind(null,"P0zC"))},"component---src-mdx-routes-file-properties-properties-overwrite-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(20)]).then(i.bind(null,"Pkmi"))},"component---src-mdx-routes-file-properties-properties-remove-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(21)]).then(i.bind(null,"tnb8"))},"component---src-mdx-routes-file-properties-properties-search-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(22)]).then(i.bind(null,"Zh07"))},"component---src-mdx-routes-file-properties-properties-search-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(23)]).then(i.bind(null,"hD3h"))},"component---src-mdx-routes-file-properties-properties-update-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(24)]).then(i.bind(null,"K5Gz"))},"component---src-mdx-routes-file-properties-templates-add-for-team-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(25)]).then(i.bind(null,"K9yr"))},"component---src-mdx-routes-file-properties-templates-add-for-user-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(26)]).then(i.bind(null,"t1R+"))},"component---src-mdx-routes-file-properties-templates-get-for-team-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(27)]).then(i.bind(null,"TIHH"))},"component---src-mdx-routes-file-properties-templates-get-for-user-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(28)]).then(i.bind(null,"9jiv"))},"component---src-mdx-routes-file-properties-templates-list-for-team-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(29)]).then(i.bind(null,"oZb2"))},"component---src-mdx-routes-file-properties-templates-list-for-user-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(30)]).then(i.bind(null,"/GgI"))},"component---src-mdx-routes-file-properties-templates-remove-for-team-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(31)]).then(i.bind(null,"p9r7"))},"component---src-mdx-routes-file-properties-templates-remove-for-user-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(32)]).then(i.bind(null,"vYef"))},"component---src-mdx-routes-file-properties-templates-update-for-team-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(33)]).then(i.bind(null,"0KwT"))},"component---src-mdx-routes-file-properties-templates-update-for-user-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(34)]).then(i.bind(null,"tbf5"))},"component---src-mdx-routes-file-requests-count-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(35)]).then(i.bind(null,"iB6l"))},"component---src-mdx-routes-file-requests-create-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(36)]).then(i.bind(null,"yCAU"))},"component---src-mdx-routes-file-requests-delete-all-closed-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(37)]).then(i.bind(null,"EYeL"))},"component---src-mdx-routes-file-requests-delete-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(38)]).then(i.bind(null,"czym"))},"component---src-mdx-routes-file-requests-get-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(39)]).then(i.bind(null,"i2Lk"))},"component---src-mdx-routes-file-requests-list-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(40)]).then(i.bind(null,"wf23"))},"component---src-mdx-routes-file-requests-list-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(41)]).then(i.bind(null,"I8r4"))},"component---src-mdx-routes-file-requests-list-v-2-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(42)]).then(i.bind(null,"3png"))},"component---src-mdx-routes-file-requests-update-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(43)]).then(i.bind(null,"8cDG"))},"component---src-mdx-routes-files-alpha-get-metadata-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(44)]).then(i.bind(null,"/W1I"))},"component---src-mdx-routes-files-alpha-upload-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(45)]).then(i.bind(null,"VYHe"))},"component---src-mdx-routes-files-copy-batch-check-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(46)]).then(i.bind(null,"tgdh"))},"component---src-mdx-routes-files-copy-batch-check-v-2-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(47)]).then(i.bind(null,"oG1a"))},"component---src-mdx-routes-files-copy-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(48)]).then(i.bind(null,"9eOf"))},"component---src-mdx-routes-files-copy-batch-v-2-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(49)]).then(i.bind(null,"Djl/"))},"component---src-mdx-routes-files-copy-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(50)]).then(i.bind(null,"yA/L"))},"component---src-mdx-routes-files-copy-reference-get-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(51)]).then(i.bind(null,"JW8Y"))},"component---src-mdx-routes-files-copy-reference-save-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(52)]).then(i.bind(null,"XZVB"))},"component---src-mdx-routes-files-copy-v-2-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(53)]).then(i.bind(null,"uOQ0"))},"component---src-mdx-routes-files-create-folder-batch-check-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(54)]).then(i.bind(null,"6rbH"))},"component---src-mdx-routes-files-create-folder-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(55)]).then(i.bind(null,"4pGu"))},"component---src-mdx-routes-files-create-folder-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(56)]).then(i.bind(null,"sGbC"))},"component---src-mdx-routes-files-create-folder-v-2-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(57)]).then(i.bind(null,"ulkG"))},"component---src-mdx-routes-files-delete-batch-check-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(58)]).then(i.bind(null,"Wkbj"))},"component---src-mdx-routes-files-delete-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(59)]).then(i.bind(null,"5c8r"))},"component---src-mdx-routes-files-delete-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(60)]).then(i.bind(null,"F8BB"))},"component---src-mdx-routes-files-delete-v-2-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(61)]).then(i.bind(null,"SZAW"))},"component---src-mdx-routes-files-download-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(62)]).then(i.bind(null,"Hq8f"))},"component---src-mdx-routes-files-download-zip-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(63)]).then(i.bind(null,"s9PI"))},"component---src-mdx-routes-files-export-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(64)]).then(i.bind(null,"JvL2"))},"component---src-mdx-routes-files-get-file-lock-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(65)]).then(i.bind(null,"0wvK"))},"component---src-mdx-routes-files-get-metadata-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(66)]).then(i.bind(null,"KABx"))},"component---src-mdx-routes-files-get-preview-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(67)]).then(i.bind(null,"YOVY"))},"component---src-mdx-routes-files-get-temporary-link-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(68)]).then(i.bind(null,"+CZV"))},"component---src-mdx-routes-files-get-temporary-upload-link-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(69)]).then(i.bind(null,"ELUU"))},"component---src-mdx-routes-files-get-thumbnail-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(70)]).then(i.bind(null,"mZl2"))},"component---src-mdx-routes-files-get-thumbnail-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(71)]).then(i.bind(null,"Mhtm"))},"component---src-mdx-routes-files-get-thumbnail-v-2-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(72)]).then(i.bind(null,"ClIA"))},"component---src-mdx-routes-files-list-folder-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(73)]).then(i.bind(null,"rQAo"))},"component---src-mdx-routes-files-list-folder-get-latest-cursor-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(74)]).then(i.bind(null,"dlzH"))},"component---src-mdx-routes-files-list-folder-longpoll-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(75)]).then(i.bind(null,"6TSB"))},"component---src-mdx-routes-files-list-folder-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(76)]).then(i.bind(null,"fSiQ"))},"component---src-mdx-routes-files-list-revisions-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(77)]).then(i.bind(null,"tEBs"))},"component---src-mdx-routes-files-lock-file-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(78)]).then(i.bind(null,"2eBt"))},"component---src-mdx-routes-files-move-batch-check-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(79)]).then(i.bind(null,"AmgJ"))},"component---src-mdx-routes-files-move-batch-check-v-2-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(80)]).then(i.bind(null,"ZO6a"))},"component---src-mdx-routes-files-move-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(81)]).then(i.bind(null,"uqZP"))},"component---src-mdx-routes-files-move-batch-v-2-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(82)]).then(i.bind(null,"CeuH"))},"component---src-mdx-routes-files-move-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(83)]).then(i.bind(null,"DbEI"))},"component---src-mdx-routes-files-move-v-2-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(84)]).then(i.bind(null,"sMOT"))},"component---src-mdx-routes-files-permanently-delete-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(85)]).then(i.bind(null,"3sp4"))},"component---src-mdx-routes-files-properties-add-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(86)]).then(i.bind(null,"ja9v"))},"component---src-mdx-routes-files-properties-overwrite-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(87)]).then(i.bind(null,"1TBb"))},"component---src-mdx-routes-files-properties-remove-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(88)]).then(i.bind(null,"Dakt"))},"component---src-mdx-routes-files-properties-template-get-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(89)]).then(i.bind(null,"tClg"))},"component---src-mdx-routes-files-properties-template-list-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(90)]).then(i.bind(null,"biAV"))},"component---src-mdx-routes-files-properties-update-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(91)]).then(i.bind(null,"4NlH"))},"component---src-mdx-routes-files-restore-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(92)]).then(i.bind(null,"NBt1"))},"component---src-mdx-routes-files-save-url-check-job-status-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(93)]).then(i.bind(null,"R1Pp"))},"component---src-mdx-routes-files-save-url-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(94)]).then(i.bind(null,"+NSM"))},"component---src-mdx-routes-files-search-continue-v-2-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(95)]).then(i.bind(null,"VSEy"))},"component---src-mdx-routes-files-search-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(96)]).then(i.bind(null,"WB2c"))},"component---src-mdx-routes-files-search-v-2-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(97)]).then(i.bind(null,"nciq"))},"component---src-mdx-routes-files-unlock-file-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(98)]).then(i.bind(null,"JFPL"))},"component---src-mdx-routes-files-upload-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(99)]).then(i.bind(null,"Hn2z"))},"component---src-mdx-routes-files-upload-session-append-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(100)]).then(i.bind(null,"deEx"))},"component---src-mdx-routes-files-upload-session-append-v-2-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(101)]).then(i.bind(null,"di79"))},"component---src-mdx-routes-files-upload-session-finish-batch-check-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(102)]).then(i.bind(null,"k+bJ"))},"component---src-mdx-routes-files-upload-session-finish-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(103)]).then(i.bind(null,"M8N/"))},"component---src-mdx-routes-files-upload-session-finish-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(104)]).then(i.bind(null,"XCdw"))},"component---src-mdx-routes-files-upload-session-start-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(105)]).then(i.bind(null,"LTTi"))},"component---src-mdx-routes-sharing-add-file-member-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(106)]).then(i.bind(null,"tWC6"))},"component---src-mdx-routes-sharing-add-folder-member-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(107)]).then(i.bind(null,"AaX2"))},"component---src-mdx-routes-sharing-change-file-member-access-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(108)]).then(i.bind(null,"0IAN"))},"component---src-mdx-routes-sharing-check-job-status-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(109)]).then(i.bind(null,"0044"))},"component---src-mdx-routes-sharing-check-remove-member-job-status-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(110)]).then(i.bind(null,"vLk+"))},"component---src-mdx-routes-sharing-check-share-job-status-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(111)]).then(i.bind(null,"0/1c"))},"component---src-mdx-routes-sharing-create-shared-link-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(112)]).then(i.bind(null,"Z3Yl"))},"component---src-mdx-routes-sharing-create-shared-link-with-settings-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(113)]).then(i.bind(null,"AfB/"))},"component---src-mdx-routes-sharing-get-file-metadata-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(114)]).then(i.bind(null,"Sp+n"))},"component---src-mdx-routes-sharing-get-file-metadata-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(115)]).then(i.bind(null,"Aiw8"))},"component---src-mdx-routes-sharing-get-folder-metadata-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(116)]).then(i.bind(null,"7JwJ"))},"component---src-mdx-routes-sharing-get-shared-link-file-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(117)]).then(i.bind(null,"Fr3U"))},"component---src-mdx-routes-sharing-get-shared-link-metadata-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(118)]).then(i.bind(null,"wBgT"))},"component---src-mdx-routes-sharing-get-shared-links-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(119)]).then(i.bind(null,"HR6S"))},"component---src-mdx-routes-sharing-list-file-members-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(120)]).then(i.bind(null,"Z9SK"))},"component---src-mdx-routes-sharing-list-file-members-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(121)]).then(i.bind(null,"Kc7m"))},"component---src-mdx-routes-sharing-list-file-members-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(122)]).then(i.bind(null,"nx1c"))},"component---src-mdx-routes-sharing-list-folder-members-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(123)]).then(i.bind(null,"wo1G"))},"component---src-mdx-routes-sharing-list-folder-members-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(124)]).then(i.bind(null,"9Yhu"))},"component---src-mdx-routes-sharing-list-folders-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(125)]).then(i.bind(null,"CIAq"))},"component---src-mdx-routes-sharing-list-folders-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(126)]).then(i.bind(null,"jeiM"))},"component---src-mdx-routes-sharing-list-mountable-folders-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(127)]).then(i.bind(null,"0csH"))},"component---src-mdx-routes-sharing-list-mountable-folders-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(128)]).then(i.bind(null,"IQOq"))},"component---src-mdx-routes-sharing-list-received-files-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(129)]).then(i.bind(null,"ECDw"))},"component---src-mdx-routes-sharing-list-received-files-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(130)]).then(i.bind(null,"nA81"))},"component---src-mdx-routes-sharing-list-shared-links-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(131)]).then(i.bind(null,"Pmkw"))},"component---src-mdx-routes-sharing-modify-shared-link-settings-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(132)]).then(i.bind(null,"ERl1"))},"component---src-mdx-routes-sharing-mount-folder-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(133)]).then(i.bind(null,"zsLp"))},"component---src-mdx-routes-sharing-relinquish-file-membership-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(134)]).then(i.bind(null,"Q1De"))},"component---src-mdx-routes-sharing-relinquish-folder-membership-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(135)]).then(i.bind(null,"YSDl"))},"component---src-mdx-routes-sharing-remove-file-member-2-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(136)]).then(i.bind(null,"O4fK"))},"component---src-mdx-routes-sharing-remove-file-member-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(137)]).then(i.bind(null,"XyH6"))},"component---src-mdx-routes-sharing-remove-folder-member-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(138)]).then(i.bind(null,"lK3h"))},"component---src-mdx-routes-sharing-revoke-shared-link-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(139)]).then(i.bind(null,"QpUb"))},"component---src-mdx-routes-sharing-set-access-inheritance-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(140)]).then(i.bind(null,"+n9O"))},"component---src-mdx-routes-sharing-share-folder-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(141)]).then(i.bind(null,"ioZD"))},"component---src-mdx-routes-sharing-transfer-folder-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(142)]).then(i.bind(null,"txjt"))},"component---src-mdx-routes-sharing-unmount-folder-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(143)]).then(i.bind(null,"Leo6"))},"component---src-mdx-routes-sharing-unshare-file-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(144)]).then(i.bind(null,"KsNY"))},"component---src-mdx-routes-sharing-unshare-folder-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(145)]).then(i.bind(null,"JDU4"))},"component---src-mdx-routes-sharing-update-file-member-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(146)]).then(i.bind(null,"k8Hu"))},"component---src-mdx-routes-sharing-update-folder-member-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(147)]).then(i.bind(null,"5Em6"))},"component---src-mdx-routes-sharing-update-folder-policy-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(148)]).then(i.bind(null,"cxoM"))},"component---src-mdx-routes-team-devices-list-member-devices-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(149)]).then(i.bind(null,"Lw3Q"))},"component---src-mdx-routes-team-devices-list-members-devices-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(150)]).then(i.bind(null,"upJl"))},"component---src-mdx-routes-team-devices-list-team-devices-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(151)]).then(i.bind(null,"XB/i"))},"component---src-mdx-routes-team-devices-revoke-device-session-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(152)]).then(i.bind(null,"aY43"))},"component---src-mdx-routes-team-devices-revoke-device-session-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(153)]).then(i.bind(null,"UWIs"))},"component---src-mdx-routes-team-features-get-values-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(154)]).then(i.bind(null,"Uslm"))},"component---src-mdx-routes-team-get-info-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(155)]).then(i.bind(null,"J3hZ"))},"component---src-mdx-routes-team-groups-create-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(156)]).then(i.bind(null,"TlAJ"))},"component---src-mdx-routes-team-groups-delete-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(157)]).then(i.bind(null,"z29P"))},"component---src-mdx-routes-team-groups-get-info-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(158)]).then(i.bind(null,"pXgB"))},"component---src-mdx-routes-team-groups-job-status-get-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(159)]).then(i.bind(null,"cB5p"))},"component---src-mdx-routes-team-groups-list-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(160)]).then(i.bind(null,"+sML"))},"component---src-mdx-routes-team-groups-list-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(161)]).then(i.bind(null,"kDhE"))},"component---src-mdx-routes-team-groups-members-add-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(162)]).then(i.bind(null,"JyON"))},"component---src-mdx-routes-team-groups-members-list-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(163)]).then(i.bind(null,"ZgXt"))},"component---src-mdx-routes-team-groups-members-list-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(164)]).then(i.bind(null,"uxyB"))},"component---src-mdx-routes-team-groups-members-remove-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(165)]).then(i.bind(null,"N//X"))},"component---src-mdx-routes-team-groups-members-set-access-type-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(166)]).then(i.bind(null,"AR3e"))},"component---src-mdx-routes-team-groups-update-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(167)]).then(i.bind(null,"x4Lm"))},"component---src-mdx-routes-team-legal-holds-create-policy-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(168)]).then(i.bind(null,"ngu5"))},"component---src-mdx-routes-team-legal-holds-get-policy-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(169)]).then(i.bind(null,"TarJ"))},"component---src-mdx-routes-team-legal-holds-list-held-revisions-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(170)]).then(i.bind(null,"sh2H"))},"component---src-mdx-routes-team-legal-holds-list-held-revisions-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(171)]).then(i.bind(null,"+CAZ"))},"component---src-mdx-routes-team-legal-holds-list-policies-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(172)]).then(i.bind(null,"fZZD"))},"component---src-mdx-routes-team-legal-holds-release-policy-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(173)]).then(i.bind(null,"MDZI"))},"component---src-mdx-routes-team-legal-holds-update-policy-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(174)]).then(i.bind(null,"UDOs"))},"component---src-mdx-routes-team-linked-apps-list-member-linked-apps-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(175)]).then(i.bind(null,"5ZDL"))},"component---src-mdx-routes-team-linked-apps-list-members-linked-apps-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(176)]).then(i.bind(null,"tNHV"))},"component---src-mdx-routes-team-linked-apps-list-team-linked-apps-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(177)]).then(i.bind(null,"KzfH"))},"component---src-mdx-routes-team-linked-apps-revoke-linked-app-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(178)]).then(i.bind(null,"G6Dw"))},"component---src-mdx-routes-team-linked-apps-revoke-linked-app-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(179)]).then(i.bind(null,"O+d5"))},"component---src-mdx-routes-team-member-space-limits-excluded-users-add-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(180)]).then(i.bind(null,"Y+C5"))},"component---src-mdx-routes-team-member-space-limits-excluded-users-list-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(181)]).then(i.bind(null,"Hw8d"))},"component---src-mdx-routes-team-member-space-limits-excluded-users-list-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(182)]).then(i.bind(null,"BbY/"))},"component---src-mdx-routes-team-member-space-limits-excluded-users-remove-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(183)]).then(i.bind(null,"GZnu"))},"component---src-mdx-routes-team-member-space-limits-get-custom-quota-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(184)]).then(i.bind(null,"GFaq"))},"component---src-mdx-routes-team-member-space-limits-remove-custom-quota-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(185)]).then(i.bind(null,"Mm2v"))},"component---src-mdx-routes-team-member-space-limits-set-custom-quota-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(186)]).then(i.bind(null,"Y/aw"))},"component---src-mdx-routes-team-members-add-job-status-get-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(187)]).then(i.bind(null,"9qUH"))},"component---src-mdx-routes-team-members-add-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(188)]).then(i.bind(null,"3Grk"))},"component---src-mdx-routes-team-members-delete-profile-photo-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(189)]).then(i.bind(null,"+PsM"))},"component---src-mdx-routes-team-members-get-info-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(190)]).then(i.bind(null,"soe0"))},"component---src-mdx-routes-team-members-list-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(191)]).then(i.bind(null,"yE6G"))},"component---src-mdx-routes-team-members-list-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(192)]).then(i.bind(null,"Ay5I"))},"component---src-mdx-routes-team-members-move-former-member-files-job-status-check-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(193)]).then(i.bind(null,"cGm3"))},"component---src-mdx-routes-team-members-move-former-member-files-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(194)]).then(i.bind(null,"EsL7"))},"component---src-mdx-routes-team-members-recover-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(195)]).then(i.bind(null,"JhWV"))},"component---src-mdx-routes-team-members-remove-job-status-get-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(196)]).then(i.bind(null,"thpx"))},"component---src-mdx-routes-team-members-remove-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(197)]).then(i.bind(null,"C0q1"))},"component---src-mdx-routes-team-members-secondary-emails-add-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(198)]).then(i.bind(null,"uWoy"))},"component---src-mdx-routes-team-members-secondary-emails-delete-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(199)]).then(i.bind(null,"fSvd"))},"component---src-mdx-routes-team-members-secondary-emails-resend-verification-emails-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(200)]).then(i.bind(null,"CvBP"))},"component---src-mdx-routes-team-members-send-welcome-email-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(201)]).then(i.bind(null,"t/ty"))},"component---src-mdx-routes-team-members-set-admin-permissions-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(202)]).then(i.bind(null,"4Qtd"))},"component---src-mdx-routes-team-members-set-profile-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(203)]).then(i.bind(null,"aTmW"))},"component---src-mdx-routes-team-members-set-profile-photo-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(204)]).then(i.bind(null,"Hx00"))},"component---src-mdx-routes-team-members-suspend-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(205)]).then(i.bind(null,"CJvw"))},"component---src-mdx-routes-team-members-unsuspend-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(206)]).then(i.bind(null,"rsyh"))},"component---src-mdx-routes-team-namespaces-list-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(207)]).then(i.bind(null,"4Eio"))},"component---src-mdx-routes-team-namespaces-list-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(208)]).then(i.bind(null,"6JSy"))},"component---src-mdx-routes-team-properties-template-add-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(209)]).then(i.bind(null,"ewJi"))},"component---src-mdx-routes-team-properties-template-get-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(210)]).then(i.bind(null,"P7Hl"))},"component---src-mdx-routes-team-properties-template-list-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(211)]).then(i.bind(null,"UmCG"))},"component---src-mdx-routes-team-properties-template-update-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(212)]).then(i.bind(null,"L3F7"))},"component---src-mdx-routes-team-reports-get-activity-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(213)]).then(i.bind(null,"R70A"))},"component---src-mdx-routes-team-reports-get-devices-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(214)]).then(i.bind(null,"UNJV"))},"component---src-mdx-routes-team-reports-get-membership-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(215)]).then(i.bind(null,"aanA"))},"component---src-mdx-routes-team-reports-get-storage-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(216)]).then(i.bind(null,"T0B5"))},"component---src-mdx-routes-team-team-folder-activate-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(217)]).then(i.bind(null,"g2hI"))},"component---src-mdx-routes-team-team-folder-archive-check-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(218)]).then(i.bind(null,"1bhq"))},"component---src-mdx-routes-team-team-folder-archive-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(219)]).then(i.bind(null,"736v"))},"component---src-mdx-routes-team-team-folder-create-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(220)]).then(i.bind(null,"g6/r"))},"component---src-mdx-routes-team-team-folder-get-info-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(221)]).then(i.bind(null,"tPcZ"))},"component---src-mdx-routes-team-team-folder-list-continue-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(222)]).then(i.bind(null,"+CRc"))},"component---src-mdx-routes-team-team-folder-list-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(223)]).then(i.bind(null,"Z9Tj"))},"component---src-mdx-routes-team-team-folder-permanently-delete-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(224)]).then(i.bind(null,"3PEa"))},"component---src-mdx-routes-team-team-folder-rename-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(225)]).then(i.bind(null,"CZW6"))},"component---src-mdx-routes-team-team-folder-update-sync-settings-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(226)]).then(i.bind(null,"jLSw"))},"component---src-mdx-routes-team-token-get-authenticated-admin-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(227)]).then(i.bind(null,"IJNh"))},"component---src-mdx-routes-users-features-get-values-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(228)]).then(i.bind(null,"FEl2"))},"component---src-mdx-routes-users-get-account-batch-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(229)]).then(i.bind(null,"WPUD"))},"component---src-mdx-routes-users-get-account-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(230)]).then(i.bind(null,"Wreh"))},"component---src-mdx-routes-users-get-current-account-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(231)]).then(i.bind(null,"ScD5"))},"component---src-mdx-routes-users-get-space-usage-mdx":function(){return Promise.all([i.e(1),i.e(0),i.e(232)]).then(i.bind(null,"6dv+"))},"component---src-pages-404-js":function(){return i.e(233).then(i.bind(null,"w2l6"))}}},XzXK:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("R/D+"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},Y6lS:function(e,t,i){"use strict";t.a={file_properties:{TemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TemplateFilterBase:{fields:[{description:"Only templates with an ID in the supplied list will be returned (a subset of templates will be returned).",parameter:"filter_some",type:{list:{primitive:"String"}}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},files:{ListFolderArg:{fields:[{description:"A unique identifier for the file.",parameter:"path",type:{primitive:"String"}},{description:"If true, the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders.",parameter:"recursive",type:{primitive:"Boolean"}},{description:"If true, :field:`FileMetadata.media_info` is set for photo and video. This parameter will no longer have an effect starting December 2, 2019.",parameter:"include_media_info",type:{primitive:"Boolean"}},{description:"If true, the results will include entries for files and folders that used to exist but were deleted.",parameter:"include_deleted",type:{primitive:"Boolean"}},{description:"If true, the results will include a flag for each file indicating whether or not  that file has any explicit members.",parameter:"include_has_explicit_shared_members",type:{primitive:"Boolean"}},{description:"If true, the results will include entries under mounted folders which includes app folder, shared folder and team folder.",parameter:"include_mounted_folders",type:{primitive:"Boolean"}},{description:"The maximum number of results to return per request. Note: This is an approximate number and there can be slightly more entries returned in some cases.",parameter:"limit",type:{optional:{primitive:"UInt32"}}},{description:"A shared link to list the contents of. If the link is password-protected, the password must be provided. If this field is present, :field:`ListFolderArg.path` will be relative to root of the shared link. Only non-recursive mode is supported for shared link.",parameter:"shared_link",type:{optional:{datatype:"SharedLink",namespace:"files"}}},{description:"If set to a valid list of template IDs, :field:`FileMetadata.property_groups` is set if there exists property data associated with the file and each of the listed templates.",parameter:"include_property_groups",type:{optional:{datatype:"TemplateFilterBase",namespace:"file_properties"}}},{description:"If true, include files that are not downloadable, i.e. Google Docs.",parameter:"include_non_downloadable_files",type:{primitive:"Boolean"}}],stone_type:"struct"},ListFolderError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{parameter:"template_error",type:{datatype:"TemplateError",namespace:"file_properties"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListFolderResult:{fields:[{description:"The files and (direct) subfolders in the folder.",parameter:"entries",type:{list:{datatype:"Metadata",namespace:"files"}}},{description:"Pass the cursor into :route:`list_folder/continue` to see what's changed in the folder since your previous query.",parameter:"cursor",type:{primitive:"String"}},{description:"If true, then there are more entries available. Pass the cursor to :route:`list_folder/continue` to retrieve the rest.",parameter:"has_more",type:{primitive:"Boolean"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},SharedLink:{fields:[{description:"Shared link url.",parameter:"url",type:{primitive:"String"}},{description:"Password for the shared link.",parameter:"password",type:{optional:{primitive:"String"}}}],stone_type:"struct"}}}},YGe5:function(e,t,i){"use strict";t.a={files:{ContentSyncSetting:{fields:[{description:"Id of the item this setting is applied to.",parameter:"id",type:{primitive:"String"}},{description:"Setting for this item.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}}],stone_type:"struct"},SyncSetting:{fields:[{description:"On first sync to members' computers, the specified folder will follow its parent folder's setting or otherwise follow default sync behavior.",parameter:"default",type:{primitive:"Void"}},{description:"On first sync to members' computers, the specified folder will be set to not sync with selective sync.",parameter:"not_synced",type:{primitive:"Void"}},{description:"The specified folder's not_synced setting is inactive due to its location or other configuration changes. It will follow its parent folder's setting.",parameter:"not_synced_inactive",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},team:{TeamFolderListContinueArg:{fields:[{description:"Indicates from what point to get the next set of team folders.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},TeamFolderListContinueError:{fields:[{description:"The cursor is invalid.",parameter:"invalid_cursor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderListResult:{description:"Result for :route:`team_folder/list` and :route:`team_folder/list/continue`.",fields:[{description:"List of all team folders in the authenticated team.",parameter:"team_folders",type:{list:{datatype:"TeamFolderMetadata",namespace:"team"}}},{description:"Pass the cursor into :route:`team_folder/list/continue` to obtain additional team folders.",parameter:"cursor",type:{primitive:"String"}},{description:"Is true if there are additional team folders that have not been returned yet. An additional call to :route:`team_folder/list/continue` can retrieve them.",parameter:"has_more",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamFolderMetadata:{description:"Properties of a team folder.",fields:[{description:"The ID of the team folder.",parameter:"team_folder_id",type:{primitive:"String"}},{description:"The name of the team folder.",parameter:"name",type:{primitive:"String"}},{description:"The status of the team folder.",parameter:"status",type:{datatype:"TeamFolderStatus",namespace:"team"}},{description:"True if this team folder is a shared team root.",parameter:"is_team_shared_dropbox",type:{primitive:"Boolean"}},{description:"The sync setting applied to this team folder.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}},{description:"Sync settings applied to contents of this team folder.",parameter:"content_sync_settings",type:{list:{datatype:"ContentSyncSetting",namespace:"files"}}}],stone_type:"struct"},TeamFolderStatus:{fields:[{description:"The team folder and sub-folders are available to all members.",parameter:"active",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archived",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"YLt+":function(e){e.exports=JSON.parse("[]")},YMTJ:function(e,t,i){"use strict";t.a={async:{LaunchEmptyResult:{description:"Result returned by methods that may either launch an asynchronous job or complete synchronously. Upon synchronous completion of the job, no additional information is returned.",fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{description:"The job finished synchronously and successfully.",parameter:"complete",type:{primitive:"Void"}}],stone_type:"union"}},sharing:{RelinquishFolderMembershipArg:{fields:[{description:"The ID for the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"Keep a copy of the folder's contents upon relinquishing membership.",parameter:"leave_a_copy",type:{primitive:"Boolean"}}],stone_type:"struct"},RelinquishFolderMembershipError:{fields:[{parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{description:"The current user is the owner of the shared folder. Owners cannot relinquish membership to their own folders. Try unsharing or transferring ownership first.",parameter:"folder_owner",type:{primitive:"Void"}},{description:"The shared folder is currently mounted.  Unmount the shared folder before relinquishing membership.",parameter:"mounted",type:{primitive:"Void"}},{description:"The current user has access to the shared folder via a group.  You can't relinquish membership to folders shared via groups.",parameter:"group_access",type:{primitive:"Void"}},{description:"This action cannot be performed on a team shared folder.",parameter:"team_folder",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"The current user only has inherited access to the shared folder.  You can't relinquish inherited membership to folders.",parameter:"no_explicit_access",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},YNFj:function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{CreateFolderBatchArg:{fields:[{description:"List of paths to be created in the user's Dropbox. Duplicate path arguments in the batch are considered only once.",parameter:"paths",type:{list:{primitive:"String"}}},{description:"If there's a conflict, have the Dropbox server try to autorename the folder to avoid the conflict.",parameter:"autorename",type:{primitive:"Boolean"}},{description:"Whether to force the create to happen asynchronously.",parameter:"force_async",type:{primitive:"Boolean"}}],stone_type:"struct"},CreateFolderBatchLaunch:{description:"Result returned by :route:`create_folder_batch` that may either launch an asynchronous job or complete synchronously.",fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{parameter:"complete",type:{datatype:"CreateFolderBatchResult",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},CreateFolderBatchResult:{fields:[{description:"Each entry in :field:`CreateFolderBatchArg.paths` will appear at the same position inside :field:`CreateFolderBatchResult.entries`.",parameter:"entries",type:{list:{datatype:"CreateFolderBatchResultEntry",namespace:"files"}}}],stone_type:"struct"},CreateFolderBatchResultEntry:{fields:[{parameter:"success",type:{datatype:"CreateFolderEntryResult",namespace:"files"}},{parameter:"failure",type:{datatype:"CreateFolderEntryError",namespace:"files"}}],stone_type:"union"},CreateFolderEntryError:{fields:[{parameter:"path",type:{datatype:"WriteError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},CreateFolderEntryResult:{fields:[{description:"Metadata of the created folder.",parameter:"metadata",type:{datatype:"FolderMetadata",namespace:"files"}}],stone_type:"struct"},FolderMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the folder.",parameter:"id",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Please use :field:`sharing_info` instead.",parameter:"shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Set if the folder is contained in a shared folder or is a shared folder mount point.",parameter:"sharing_info",type:{optional:{datatype:"FolderSharingInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified. Note that only properties associated with user-owned templates, not team-owned templates, can be attached to folders.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}}],stone_type:"struct",todo:!0},FolderSharingInfo:{description:"Sharing info for a folder which is contained in a shared folder or is a shared folder mount point.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"Set if the folder is contained by a shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"If this folder is a shared folder mount point, the ID of the shared folder mounted at this location.",parameter:"shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Specifies that the folder can only be traversed and the user can only see a limited subset of the contents of this folder because they don't have read access to this folder. They do, however, have access to some sub folder.",parameter:"traverse_only",type:{primitive:"Boolean"}},{description:"Specifies that the folder cannot be accessed by the user.",parameter:"no_access",type:{primitive:"Boolean"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},YODn:function(e,t,i){var r=i("JpX9"),o=i("yF7r"),a=o((function(e,t){return r(e,256,void 0,void 0,void 0,t)}));e.exports=a},YXIH:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("V8GH"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},YXVp:function(e,t,i){"use strict";t.a={team:{DeviceSessionArg:{fields:[{description:"The session id.",parameter:"session_id",type:{primitive:"String"}},{description:"The unique id of the member owning the device.",parameter:"team_member_id",type:{primitive:"String"}}],stone_type:"struct"},RevokeDesktopClientArg:{fields:[{description:"The session id.",parameter:"session_id",type:{primitive:"String"}},{description:"The unique id of the member owning the device.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Whether to delete all files of the account (this is possible only if supported by the desktop client and  will be made the next time the client access the account).",parameter:"delete_on_unlink",type:{primitive:"Boolean"}}],stone_type:"struct"},RevokeDeviceSessionArg:{fields:[{description:"End an active session.",parameter:"web_session",type:{datatype:"DeviceSessionArg",namespace:"team"}},{description:"Unlink a linked desktop device.",parameter:"desktop_client",type:{datatype:"RevokeDesktopClientArg",namespace:"team"}},{description:"Unlink a linked mobile device.",parameter:"mobile_client",type:{datatype:"DeviceSessionArg",namespace:"team"}}],stone_type:"union"},RevokeDeviceSessionBatchArg:{fields:[{parameter:"revoke_devices",type:{list:{datatype:"RevokeDeviceSessionArg",namespace:"team"}}}],stone_type:"struct"},RevokeDeviceSessionBatchError:{description:"",fields:[{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RevokeDeviceSessionBatchResult:{fields:[{parameter:"revoke_devices_status",type:{list:{datatype:"RevokeDeviceSessionStatus",namespace:"team"}}}],stone_type:"struct"},RevokeDeviceSessionError:{fields:[{description:"Device session not found.",parameter:"device_session_not_found",type:{primitive:"Void"}},{description:"Member not found.",parameter:"member_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RevokeDeviceSessionStatus:{fields:[{description:"Result of the revoking request.",parameter:"success",type:{primitive:"Boolean"}},{description:"The error cause in case of a failure.",parameter:"error_type",type:{optional:{datatype:"RevokeDeviceSessionError",namespace:"team"}}}],stone_type:"struct"}}}},YaJL:function(e,t,i){var r=i("LSEb"),o=function(){try{var e=r(Object,"defineProperty");return e({},"",{}),e}catch(t){}}();e.exports=o},YjYz:function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{CreateFolderArg:{fields:[{description:"Path in the user's Dropbox to create.",parameter:"path",type:{primitive:"String"}},{description:"If there's a conflict, have the Dropbox server try to autorename the folder to avoid the conflict.",parameter:"autorename",type:{primitive:"Boolean"}}],stone_type:"struct"},CreateFolderError:{fields:[{parameter:"path",type:{datatype:"WriteError",namespace:"files"}}],stone_type:"union"},CreateFolderResult:{fields:[{description:"Metadata of the created folder.",parameter:"metadata",type:{datatype:"FolderMetadata",namespace:"files"}}],stone_type:"struct"},FolderMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the folder.",parameter:"id",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Please use :field:`sharing_info` instead.",parameter:"shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Set if the folder is contained in a shared folder or is a shared folder mount point.",parameter:"sharing_info",type:{optional:{datatype:"FolderSharingInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified. Note that only properties associated with user-owned templates, not team-owned templates, can be attached to folders.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}}],stone_type:"struct",todo:!0},FolderSharingInfo:{description:"Sharing info for a folder which is contained in a shared folder or is a shared folder mount point.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"Set if the folder is contained by a shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"If this folder is a shared folder mount point, the ID of the shared folder mounted at this location.",parameter:"shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Specifies that the folder can only be traversed and the user can only see a limited subset of the contents of this folder because they don't have read access to this folder. They do, however, have access to some sub folder.",parameter:"traverse_only",type:{primitive:"Boolean"}},{description:"Specifies that the folder cannot be accessed by the user.",parameter:"no_access",type:{primitive:"Boolean"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},YoP1:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Qm5v"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},YtR8:function(e,t,i){"use strict";t.a={team:{ApiApp:{description:"Information on linked third party applications.",fields:[{description:"The application unique id.",parameter:"app_id",type:{primitive:"String"}},{description:"The application name.",parameter:"app_name",type:{primitive:"String"}},{description:"Whether the linked application uses a dedicated folder.",parameter:"is_app_folder",type:{primitive:"Boolean"}},{description:"The application publisher name.",parameter:"publisher",type:{optional:{primitive:"String"}}},{description:"The publisher's URL.",parameter:"publisher_url",type:{optional:{primitive:"String"}}},{description:"The time this application was linked.",parameter:"linked",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},ListTeamAppsArg:{description:"Arguments for :route:`linked_apps/list_team_linked_apps`.",fields:[{description:"At the first call to the :route:`linked_apps/list_team_linked_apps` the cursor shouldn't be passed. Then, if the result of the call includes a cursor, the following requests should include the received cursors in order to receive the next sub list of the team applications.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},ListTeamAppsError:{description:"Error returned by :route:`linked_apps/list_team_linked_apps`.",fields:[{description:"Indicates that the cursor has been invalidated. Call :route:`linked_apps/list_team_linked_apps` again with an empty cursor to obtain a new cursor.",parameter:"reset",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListTeamAppsResult:{description:"Information returned by :route:`linked_apps/list_team_linked_apps`.",fields:[{description:"The linked applications of each member of the team.",parameter:"apps",type:{list:{datatype:"MemberLinkedApps",namespace:"team"}}},{description:"If true, then there are more apps available. Pass the cursor to :route:`linked_apps/list_team_linked_apps` to retrieve the rest.",parameter:"has_more",type:{primitive:"Boolean"}},{description:"Pass the cursor into :route:`linked_apps/list_team_linked_apps` to receive the next sub list of team's applications.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberLinkedApps:{description:"Information on linked applications of a team member.",fields:[{description:"The member unique Id.",parameter:"team_member_id",type:{primitive:"String"}},{description:"List of third party applications linked by this team member.",parameter:"linked_api_apps",type:{list:{datatype:"ApiApp",namespace:"team"}}}],stone_type:"struct"}}}},Yzgk:function(e,t,i){var r=i("RqPZ"),o=i("zc1V"),a=i("9aUh"),n=i("bE7W"),s=/^\[object .+?Constructor\]$/,p=Function.prototype,d=Object.prototype,l=p.toString,m=d.hasOwnProperty,c=RegExp("^"+l.call(m).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!a(e)||o(e))&&(r(e)?c:s).test(n(e))}},Z6X3:function(e,t,i){"use strict";t.a={files:{FileLock:{fields:[{description:"The lock description.",parameter:"content",type:{datatype:"FileLockContent",namespace:"files"}}],stone_type:"struct"},FileLockContent:{fields:[{description:"Empty type to indicate no lock.",parameter:"unlocked",type:{primitive:"Void"}},{description:"A lock held by a single user.",parameter:"single_user",type:{datatype:"SingleUserLock",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LockConflictError:{fields:[{description:"The lock that caused the conflict.",parameter:"lock",type:{datatype:"FileLock",namespace:"files"}}],stone_type:"struct"},LockFileBatchResult:{fields:[{description:"Each Entry in the 'entries' will have '.tag' with the operation status (e.g. success), the metadata for the file and the lock state after the operation.",parameter:"entries",type:{list:{datatype:"LockFileResultEntry",namespace:"files"}}}],stone_type:"struct"},LockFileError:{fields:[{description:"Could not find the specified resource.",parameter:"path_lookup",type:{datatype:"LookupError",namespace:"files"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{description:"There are too many files in one request. Please retry with fewer files.",parameter:"too_many_files",type:{primitive:"Void"}},{description:"The user does not have permissions to change the lock state or access the file.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"Item is a type that cannot be locked.",parameter:"cannot_be_locked",type:{primitive:"Void"}},{description:"Requested file is not currently shared.",parameter:"file_not_shared",type:{primitive:"Void"}},{description:"The user action conflicts with an existing lock on the file.",parameter:"lock_conflict",type:{datatype:"LockConflictError",namespace:"files"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LockFileResult:{fields:[{description:"Metadata of the file.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}},{description:"The file lock state after the operation.",parameter:"lock",type:{datatype:"FileLock",namespace:"files"}}],stone_type:"struct"},LockFileResultEntry:{fields:[{parameter:"success",type:{datatype:"LockFileResult",namespace:"files"}},{parameter:"failure",type:{datatype:"LockFileError",namespace:"files"}}],stone_type:"union"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},SingleUserLock:{fields:[{description:"The time the lock was created.",parameter:"created",type:{primitive:"Timestamp"}},{description:"The account ID of the lock holder if known.",parameter:"lock_holder_account_id",type:{primitive:"String"}},{description:"The id of the team of the account holder if it exists.",parameter:"lock_holder_team_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"},UnlockFileArg:{fields:[{description:"Path in the user's Dropbox to a file.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},UnlockFileBatchArg:{fields:[{description:"List of 'entries'. Each 'entry' contains a path of the file which will be unlocked. Duplicate path arguments in the batch are considered only once.",parameter:"entries",type:{list:{datatype:"UnlockFileArg",namespace:"files"}}}],stone_type:"struct"}}}},ZEig:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Y6lS"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},ZFoC:function(e,t,i){"use strict";i.d(t,"b",(function(){return o.a})),i.d(t,"a",(function(){return be})),i.d(t,"c",(function(){return Ze})),i.d(t,"d",(function(){return we})),i.d(t,"e",(function(){return Ae})),i.d(t,"f",(function(){return De})),i.d(t,"g",(function(){return Re})),i.d(t,"h",(function(){return Be}));var r=i("7L9N"),o=i("Wbzz"),a=i("mXGw"),n=i("PbS7"),s=i.n(n),p=i("OoM2"),d=i.n(p),l=i("RhEf"),m=i.n(l),c=i("3GNe"),h=i.n(c),u=i("mwLw"),f=i.n(u),y=i("dYK0"),v=i.n(y),_=i("EqhP"),g=i.n(_);var b=function(){return(b=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var o in t=arguments[i])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function w(e){return e.toLowerCase()}var T=[/([a-z0-9])([A-Z])/g,/([A-Z])([A-Z][a-z])/g],V=/[^A-Z0-9]+/gi;function k(e,t,i){return t instanceof RegExp?e.replace(t,i):t.reduce((function(e,t){return e.replace(t,i)}),e)}function S(e,t){var i=e.charAt(0),r=e.substr(1).toLowerCase();return t>0&&i>="0"&&i<="9"?"_"+i+r:""+i.toUpperCase()+r}function x(e,t){return void 0===t&&(t={}),function(e,t){void 0===t&&(t={});for(var i=t.splitRegexp,r=void 0===i?T:i,o=t.stripRegexp,a=void 0===o?V:o,n=t.transform,s=void 0===n?w:n,p=t.delimiter,d=void 0===p?" ":p,l=k(k(e,r,"$1\0$2"),a,"\0"),m=0,c=l.length;"\0"===l.charAt(m);)m++;for(;"\0"===l.charAt(c-1);)c--;return l.slice(m,c).split("\0").map(s).join(d)}(e,b({delimiter:"",transform:S},t))}var A=i("HcYh"),P=i.n(A),D=i("9xxD"),I=i.n(D),E=i("knvM"),L=i.n(E),R=i("GC0P"),M=i.n(R),F=i("G4dw"),q=i.n(F),U=i("eciW"),C=i.n(U);function j(e){var t=new Error(e);return t.source="ulid",t}var O="0123456789ABCDEFGHJKMNPQRSTVWXYZ",B=O.length,G=Math.pow(2,48)-1;function W(e){var t=Math.floor(e()*B);return t===B&&(t=B-1),O.charAt(t)}function N(e,t){if(isNaN(e))throw new Error(e+" must be a number");if(e>G)throw j("cannot encode time greater than "+G);if(e<0)throw j("time must be positive");if(!1===Number.isInteger(e))throw j("time must be an integer");for(var i=void 0,r="";t>0;t--)r=O.charAt(i=e%B)+r,e=(e-i)/B;return r}function z(e,t){for(var i="";e>0;e--)i=W(t)+i;return i}function X(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments[1];t||(t="undefined"!=typeof window?window:null);var r=t&&(t.crypto||t.msCrypto);if(r)return function(){var e=new Uint8Array(1);return r.getRandomValues(e),e[0]/255};try{var o=i("DGBo");return function(){return o.randomBytes(1).readUInt8()/255}}catch(a){}if(e){try{console.error("secure crypto unusable, falling back to insecure Math.random()!")}catch(a){}return function(){return Math.random()}}throw j("secure crypto unusable, insecure Math.random not allowed")}var H,Y=(H||(H=X()),function(e){return isNaN(e)&&(e=Date.now()),N(e,10)+z(16,H)}),K={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","Ấ":"A","Ắ":"A","Ẳ":"A","Ẵ":"A","Ặ":"A","Æ":"AE","Ầ":"A","Ằ":"A","Ȃ":"A","Ç":"C","Ḉ":"C","È":"E","É":"E","Ê":"E","Ë":"E","Ế":"E","Ḗ":"E","Ề":"E","Ḕ":"E","Ḝ":"E","Ȇ":"E","Ì":"I","Í":"I","Î":"I","Ï":"I","Ḯ":"I","Ȋ":"I","Ð":"D","Ñ":"N","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","Ố":"O","Ṍ":"O","Ṓ":"O","Ȏ":"O","Ù":"U","Ú":"U","Û":"U","Ü":"U","Ý":"Y","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","ấ":"a","ắ":"a","ẳ":"a","ẵ":"a","ặ":"a","æ":"ae","ầ":"a","ằ":"a","ȃ":"a","ç":"c","ḉ":"c","è":"e","é":"e","ê":"e","ë":"e","ế":"e","ḗ":"e","ề":"e","ḕ":"e","ḝ":"e","ȇ":"e","ì":"i","í":"i","î":"i","ï":"i","ḯ":"i","ȋ":"i","ð":"d","ñ":"n","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","ố":"o","ṍ":"o","ṓ":"o","ȏ":"o","ù":"u","ú":"u","û":"u","ü":"u","ý":"y","ÿ":"y","Ā":"A","ā":"a","Ă":"A","ă":"a","Ą":"A","ą":"a","Ć":"C","ć":"c","Ĉ":"C","ĉ":"c","Ċ":"C","ċ":"c","Č":"C","č":"c","C̆":"C","c̆":"c","Ď":"D","ď":"d","Đ":"D","đ":"d","Ē":"E","ē":"e","Ĕ":"E","ĕ":"e","Ė":"E","ė":"e","Ę":"E","ę":"e","Ě":"E","ě":"e","Ĝ":"G","Ǵ":"G","ĝ":"g","ǵ":"g","Ğ":"G","ğ":"g","Ġ":"G","ġ":"g","Ģ":"G","ģ":"g","Ĥ":"H","ĥ":"h","Ħ":"H","ħ":"h","Ḫ":"H","ḫ":"h","Ĩ":"I","ĩ":"i","Ī":"I","ī":"i","Ĭ":"I","ĭ":"i","Į":"I","į":"i","İ":"I","ı":"i","Ĳ":"IJ","ĳ":"ij","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","Ḱ":"K","ḱ":"k","K̆":"K","k̆":"k","Ĺ":"L","ĺ":"l","Ļ":"L","ļ":"l","Ľ":"L","ľ":"l","Ŀ":"L","ŀ":"l","Ł":"l","ł":"l","Ḿ":"M","ḿ":"m","M̆":"M","m̆":"m","Ń":"N","ń":"n","Ņ":"N","ņ":"n","Ň":"N","ň":"n","ŉ":"n","N̆":"N","n̆":"n","Ō":"O","ō":"o","Ŏ":"O","ŏ":"o","Ő":"O","ő":"o","Œ":"OE","œ":"oe","P̆":"P","p̆":"p","Ŕ":"R","ŕ":"r","Ŗ":"R","ŗ":"r","Ř":"R","ř":"r","R̆":"R","r̆":"r","Ȓ":"R","ȓ":"r","Ś":"S","ś":"s","Ŝ":"S","ŝ":"s","Ş":"S","Ș":"S","ș":"s","ş":"s","Š":"S","š":"s","Ţ":"T","ţ":"t","ț":"t","Ț":"T","Ť":"T","ť":"t","Ŧ":"T","ŧ":"t","T̆":"T","t̆":"t","Ũ":"U","ũ":"u","Ū":"U","ū":"u","Ŭ":"U","ŭ":"u","Ů":"U","ů":"u","Ű":"U","ű":"u","Ų":"U","ų":"u","Ȗ":"U","ȗ":"u","V̆":"V","v̆":"v","Ŵ":"W","ŵ":"w","Ẃ":"W","ẃ":"w","X̆":"X","x̆":"x","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Y̆":"Y","y̆":"y","Ź":"Z","ź":"z","Ż":"Z","ż":"z","Ž":"Z","ž":"z","ſ":"s","ƒ":"f","Ơ":"O","ơ":"o","Ư":"U","ư":"u","Ǎ":"A","ǎ":"a","Ǐ":"I","ǐ":"i","Ǒ":"O","ǒ":"o","Ǔ":"U","ǔ":"u","Ǖ":"U","ǖ":"u","Ǘ":"U","ǘ":"u","Ǚ":"U","ǚ":"u","Ǜ":"U","ǜ":"u","Ứ":"U","ứ":"u","Ṹ":"U","ṹ":"u","Ǻ":"A","ǻ":"a","Ǽ":"AE","ǽ":"ae","Ǿ":"O","ǿ":"o","Þ":"TH","þ":"th","Ṕ":"P","ṕ":"p","Ṥ":"S","ṥ":"s","X́":"X","x́":"x","Ѓ":"Г","ѓ":"г","Ќ":"К","ќ":"к","A̋":"A","a̋":"a","E̋":"E","e̋":"e","I̋":"I","i̋":"i","Ǹ":"N","ǹ":"n","Ồ":"O","ồ":"o","Ṑ":"O","ṑ":"o","Ừ":"U","ừ":"u","Ẁ":"W","ẁ":"w","Ỳ":"Y","ỳ":"y","Ȁ":"A","ȁ":"a","Ȅ":"E","ȅ":"e","Ȉ":"I","ȉ":"i","Ȍ":"O","ȍ":"o","Ȑ":"R","ȑ":"r","Ȕ":"U","ȕ":"u","B̌":"B","b̌":"b","Č̣":"C","č̣":"c","Ê̌":"E","ê̌":"e","F̌":"F","f̌":"f","Ǧ":"G","ǧ":"g","Ȟ":"H","ȟ":"h","J̌":"J","ǰ":"j","Ǩ":"K","ǩ":"k","M̌":"M","m̌":"m","P̌":"P","p̌":"p","Q̌":"Q","q̌":"q","Ř̩":"R","ř̩":"r","Ṧ":"S","ṧ":"s","V̌":"V","v̌":"v","W̌":"W","w̌":"w","X̌":"X","x̌":"x","Y̌":"Y","y̌":"y","A̧":"A","a̧":"a","B̧":"B","b̧":"b","Ḑ":"D","ḑ":"d","Ȩ":"E","ȩ":"e","Ɛ̧":"E","ɛ̧":"e","Ḩ":"H","ḩ":"h","I̧":"I","i̧":"i","Ɨ̧":"I","ɨ̧":"i","M̧":"M","m̧":"m","O̧":"O","o̧":"o","Q̧":"Q","q̧":"q","U̧":"U","u̧":"u","X̧":"X","x̧":"x","Z̧":"Z","z̧":"z"},J=Object.keys(K).join("|"),Z=new RegExp(J,"g"),Q=new RegExp(J,""),$=function(e){return e.replace(Z,(function(e){return K[e]}))},ee=$,te=function(e){return!!e.match(Q)},ie=$;ee.has=te,ee.remove=ie;var re="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},oe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e},ae={CASE_SENSITIVE_EQUAL:9,EQUAL:8,STARTS_WITH:7,WORD_STARTS_WITH:6,STRING_CASE:5,STRING_CASE_ACRONYM:4,CONTAINS:3,ACRONYM:2,MATCHES:1,NO_MATCH:0},ne={CAMEL:.8,PASCAL:.6,KEBAB:.4,SNAKE:.2,NO_CASE:0};function se(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!t)return e;var r=i.keys,o=i.threshold,a=void 0===o?ae.MATCHES:o,n=e.reduce((function(e,o,n){var s=pe(o,r,t,i),p=s.rankedItem,d=s.rank,l=s.keyIndex,m=s.keyThreshold;return d>=(void 0===m?a:m)&&e.push({rankedItem:p,item:o,rank:d,index:n,keyIndex:l}),e}),[]);return n.sort(le).map((function(e){return e.item}))}function pe(e,t,i,r){return t?function(e,t){return t.reduce((function(t,i){var r=function(e,t){"object"===(void 0===t?"undefined":re(t))&&(t=t.key);var i=void 0;i="function"==typeof t?t(e):-1!==t.indexOf(".")?t.split(".").reduce((function(e,t){return e?e[t]:null}),e):e[t];return null!=i?[].concat(i):null}(e,i);return r&&r.forEach((function(e){t.push({itemValue:e,attributes:ce(i)})})),t}),[])}(e,t).reduce((function(e,t,o){var a=e.rank,n=e.keyIndex,s=e.keyThreshold,p=t.itemValue,d=t.attributes,l=de(p,i,r),m=d.minRanking,c=d.maxRanking,h=d.threshold;return l<m&&l>=ae.MATCHES?l=m:l>c&&(l=c),l>a&&(a=l,n=o,s=h),{rankedItem:p,rank:a,keyIndex:n,keyThreshold:s}}),{rank:ae.NO_MATCH,keyIndex:-1,keyThreshold:r.threshold}):{rankedItem:e,rank:de(e,i,r),keyIndex:-1,keyThreshold:r.threshold}}function de(e,t,i){if(e=me(e,i),(t=me(t,i)).length>e.length)return ae.NO_MATCH;if(e===t)return ae.CASE_SENSITIVE_EQUAL;var r,o,a=function(e){var t=e.toLowerCase()!==e,i=e.indexOf("-")>=0,r=e.indexOf("_")>=0;if(!t&&!r&&i)return ne.KEBAB;if(!t&&r&&!i)return ne.SNAKE;if(t&&!i&&!r){return e[0].toUpperCase()===e[0]?ne.PASCAL:ne.CAMEL}return ne.NO_CASE}(e),n=function(e,t,i){var r=e.toLowerCase().indexOf(t.toLowerCase());switch(i){case ne.SNAKE:return"_"===e[r-1];case ne.KEBAB:return"-"===e[r-1];case ne.PASCAL:case ne.CAMEL:return-1!==r&&e[r]===e[r].toUpperCase();default:return!1}}(e,t,a),s=function(e,t,i){var r=null;switch(i){case ne.SNAKE:r="_";break;case ne.KEBAB:r="-";break;case ne.PASCAL:case ne.CAMEL:r=/(?=[A-Z])/;break;default:r=null}var o=e.split(r);return t.toLowerCase().split("").reduce((function(e,t,i){var r=o[i];return e&&r&&r[0].toLowerCase()===t}),!0)}(e,t,a);return(e=e.toLowerCase())===(t=t.toLowerCase())?ae.EQUAL+a:0===e.indexOf(t)?ae.STARTS_WITH+a:-1!==e.indexOf(" "+t)?ae.WORD_STARTS_WITH+a:n?ae.STRING_CASE+a:a>0&&s?ae.STRING_CASE_ACRONYM+a:-1!==e.indexOf(t)?ae.CONTAINS+a:1===t.length?ae.NO_MATCH:-1!==(r=e,o="",r.split(" ").forEach((function(e){e.split("-").forEach((function(e){o+=e.substr(0,1)}))})),o).indexOf(t)?ae.ACRONYM+a:function(e,t){var i=0,r=0;function o(e,t,r){for(var o=r;o<t.length;o++){if(t[o]===e)return i+=1,o+1}return-1}var a=o(t[0],e,0);if(a<0)return ae.NO_MATCH;r=a;for(var n=1;n<t.length;n++){var s=t[n];if(!((r=o(s,e,r))>-1))return ae.NO_MATCH}return function(e){var r=i/t.length;return ae.MATCHES+r*(1/e)}(r-a)}(e,t)}function le(e,t){var i=e.rankedItem,r=e.rank,o=e.keyIndex,a=t.rankedItem,n=t.rank,s=t.keyIndex;return r===n?o===s?String(i).localeCompare(a):o<s?-1:1:r>n?-1:1}function me(e,t){return e=""+e,t.keepDiacritics||(e=ee(e)),e}function ce(e){return"string"==typeof e&&(e={key:e}),oe({maxRanking:1/0,minRanking:-1/0},e)}se.rankings=ae,se.caseRankings=ne;var he=se,ue=i("Egi+"),fe=i.n(ue),ye=i("TE3c"),ve=i.n(ye);"undefined"!=typeof Link&&Link&&Link===Object(Link)&&Object.isExtensible(Link)&&!Link.hasOwnProperty("__filemeta")&&Object.defineProperty(Link,"__filemeta",{configurable:!0,value:{name:"Link",filename:"node_modules/docz/dist/index.esm.js"}});var _e={layout:function(e){var t=e.children;return Object(a.createElement)(a.Fragment,null,t)},notFound:function(){return Object(a.createElement)(a.Fragment,null,"Not found")},playground:function(e){var t=e.component,i=e.code;return Object(a.createElement)("div",null,t,Object(a.createElement)("pre",null,i))}},ge=Object(a.createContext)(_e),be=function(e){var t=e.components,i=void 0===t?{}:t,r=e.children;return Object(a.createElement)(ge.Provider,{value:Object.assign({},_e,i)},r)},we=function(){return Object(a.useContext)(ge)};var Te,Ve,ke,Se,xe=(Te={},ke=Object(a.createContext)(Te),Se=new Set,{context:ke,set:function(e){return function(e){Se.forEach((function(t){return t(e)}))}(e)},Provider:(Ve=function(e){function t(){var t;return(t=e.apply(this,arguments)||this).state=t.props.initial||Te||{},t}Object(r.a)(t,e),t.getDerivedStateFromProps=function(e,t){return d()(e.initial,t)?null:e.initial};var i=t.prototype;return i.componentDidMount=function(){var e=this;Se.add((function(t){return e.setState(t)}))},i.componentWillUnmount=function(){Se.clear()},i.render=function(){return Object(a.createElement)(ke.Provider,{value:this.state},this.props.children)},t}(a.Component),Ve.displayName="DoczStateProvider",Ve)}),Ae=function(){var e=Object(a.useContext)(xe.context),t=e.transform,i=e.config,r=e.themeConfig,o=void 0===r?{}:r,n=s()(o,i?i.themeConfig:{}),p=t?t(n):n;return Object.assign({},i,{themeConfig:p})},Pe=function(e){var t=e.componentName,i=e.fileName,r=we(),o=Object(a.useContext)(xe.context).props,n=o&&o.length>0&&o.find((function(e){return function(e,t){return!![i,"/"+e+".","/"+m()(e)+".","/"+x(e)+"."].find((function(e){return t.key.includes(e)}))}(t,e)})),s=f()("value",n)||[],p=v()(s),d=s.find((function(e){return e.displayName===t})),l=Object(a.useMemo)((function(){return P()({createElement:a.createElement,elements:r})}),[r]);return Object(a.useMemo)((function(){var e=f()("props",d||p);return h()((function(e){var t=f()("description",e);return t?g()("description",l(t).tree,e):e}))(e)}),[l,d||p])},De=function(){var e=Object(a.useContext)(xe.context);return f()("currentEntry.value",e)},Ie=function(e){var t=JSON.parse(e.data),i=t.type,r=t.payload,o=i.startsWith("state.")&&i.split(".")[1];o&&xe.set((function(e){var t;return Object.assign({},e,((t={})[o]=r,t))}))},Ee=function(e){Object(a.useEffect)((function(){if(e){var t=new WebSocket(e);return t.onmessage=Ie,function(){return t.close()}}}),[])};function Le(e,t,i){return e<t?i?1:-1:e>t?i?-1:1:0}var Re=function(){var e=Object(a.useContext)(xe.context).entries,t=(void 0===e?[]:e).map((function(e){return e.value}));return I()(t,(function(e,t){return Le(e.name,t.name)}))},Me=function(e){return!e.menu},Fe=function(e,t){return t.filter(function(e){return function(t){return t.menu===e}}(e))},qe=function(e){var t,i,r=e.filter(Me),o=(t=e,i="menu",Array.from(new Set(t.reduce((function(e,t){var r=f()(i)(t);return r?e.concat([r]):e}),[])))).map(function(e){return function(t){return{name:t,menu:Fe(t,e)}}}(e));return L()("name",o,r)},Ue=C()((function e(t){var i=function(e){return"string"==typeof e?{name:e}:e}(t);return Object.assign({},i,{id:i.id||Y(),parent:f()("parent",i)||f()("parent",t),menu:Array.isArray(i.menu)?i.menu.map(e):i.menu})}),(function(e){return e.href||e.route?q()("menu",e):e})),Ce=function(e,t){void 0===t&&(t=[]);var i="string"!=typeof e?f()("name",e):e,r=t.findIndex((function(e){return e===i}));return-1!==r?r:1/0},je=function(e,t){return e.name<t.name?-1:e.name>t.name?1:0},Oe=function e(t,i){var r;return void 0===i&&(i=[]),I()(t,(void 0===(r=i)&&(r=[]),function(e,t){var i=r.map((function(e){return e.name||e}));return Le(Ce(e,i),Ce(t,i))}),je).map((function(t){if(!t.menu)return t;var r=i.find((function(e){return e.name===t.name})),o=r&&r.menu;return Object.assign({},t,{menu:o?e(t.menu,o):I()(t.menu,je)})}))},Be=function(e){var t=(e||{}).query,i=void 0===t?"":t,r=Object(a.useContext)(xe.context),o=r.entries,n=r.config;if(!o)return null;var s,p,d,l,m=o.map((function(e){return e.value})),c=qe(m),h=Object(a.useMemo)((function(){var t,i,r=function e(t,i){var r=t.map(Ue),o=i.map(Ue);return L()("name",r,o).map((function(t){if(!t.menu)return t;var i=o.find((function(e){return e.name===t.name})),r=i&&i.menu;return Object.assign({},t,{menu:r?e(t.menu,r):t.menu||i.menu})}))}(c,n.menu),o=Oe(r,n.menu);return t=o,(i=e&&e.filter)?t.filter(i).map((function(e){return e.menu?Object.assign({},e,{menu:e.menu.filter(i)}):e})):t}),[o,n]);return i&&i.length>0?(s=i,p=h.map((function(e){return[e].concat(e.menu||[])})),d=M()(2,p),l=Array.from(new Set(d)),he(l,s,{keys:["name"]})):h},Ge=function(e,t){var i=Object(a.useRef)(t);return Object(a.useEffect)((function(){i.current=e})),i.current},We="object"==typeof window,Ne=function(e,t){return{innerHeight:We?window.innerHeight:t,innerWidth:We?window.innerWidth:e,outerHeight:We?window.outerHeight:t,outerWidth:We?window.outerWidth:e}},ze=function(e,t,i){void 0===e&&(e=300),void 0===t&&(t=1/0),void 0===i&&(i=1/0);var r=Object(a.useState)(Ne(i,i)),o=r[0],n=r[1],s=fe()(e,(function(){return n(Ne(i,i))}));return Object(a.useEffect)((function(){return window.addEventListener("resize",s),function(){window.removeEventListener("resize",s)}}),[]),o},Xe=function(e){var t=e.className,i=e.children,r=e.style,o=e.wrapper,n=e.__scope,s=e.__position,p=e.__code,d=e.language,l=e.useScoping,m=we(),c=m.playground;return c?Object(a.createElement)(c,{components:m,component:i,className:t,style:r,wrapper:o,scope:n,position:s,code:p,language:d,useScoping:l}):null},He=/(?:React\.)?(?:PropTypes\.)?objectOf\((?:React\.)?(?:PropTypes\.)?(\w+)\)/,Ye=function(e){return function e(t){switch(t.name.toLowerCase()){case"instanceof":return"Class("+t.value+")";case"enum":return t.computed?t.value:t.value?t.value.map((function(e){return""+e.value})).join(" │ "):t.raw;case"union":return t.value?t.value.map((function(t){return""+e(t)})).join(" │ "):t.raw;case"array":return t.raw;case"arrayof":return"Array<"+e(t.value)+">";case"custom":if(-1!==t.raw.indexOf("function")||-1!==t.raw.indexOf("=>"))return"Custom(Function)";if(-1!==t.raw.toLowerCase().indexOf("objectof")){var i=t.raw.match(He);return i&&i[1]?"ObjectOf("+ve()(i[1])+")":"ObjectOf"}return"Custom";case"bool":return"Boolean";case"func":return"Function";case"shape":var r=t.value,o={};return Object.keys(r).forEach((function(t){o[t]=e(r[t])})),JSON.stringify(o,null,2);default:return t.name}}(e)},Ke=function(e){var t=f()("name",e.flowType||e.type);if(!t)return null;var i=t.startsWith('"')||"enum"===t,r=i?"enum":t,o=f()("type.value",e);return r?i&&"string"==typeof o||!e.flowType&&!i&&!o||e.flowType&&!e.flowType.elements?r:e.flowType?Ye(e.flowType):Ye(e.type):null},Je=function(e){var t=e.title,i=e.isToggle,r=e.isRaw,o=e.of,n=function(e,t){var i={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(i[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(i[r[o]]=e[r[o]])}return i}(e,["title","isToggle","isRaw","of"]),s=we().props,p=f()("__filemeta.filename",o),d=f()("__filemeta.name",o)||f()("displayName",o)||f()("name",o),l=Pe({componentName:d,fileName:p});return s?Object(a.createElement)(s,Object.assign({title:t,isRaw:r,isToggle:i,props:l,getPropType:Ke,of:o},n)):null};function Ze(e,t){return void 0===t&&(t=function(e){return e}),function(i){var r=Object(a.memo)((function(r){var o=r.db,n=r.currentEntry,s=r.children,p=Object.assign({},o,{currentEntry:n,themeConfig:e,transform:t});return Object(a.createElement)(xe.Provider,{initial:p},Object(a.createElement)(i,null,s))}));return r.displayName=i.displayName||"DoczTheme",r}}void 0!==ze&&ze&&ze===Object(ze)&&Object.isExtensible(ze)&&!ze.hasOwnProperty("__filemeta")&&Object.defineProperty(ze,"__filemeta",{configurable:!0,value:{name:"useWindowSize",filename:"node_modules/docz/dist/index.esm.js"}}),void 0!==Ge&&Ge&&Ge===Object(Ge)&&Object.isExtensible(Ge)&&!Ge.hasOwnProperty("__filemeta")&&Object.defineProperty(Ge,"__filemeta",{configurable:!0,value:{name:"usePrevious",filename:"node_modules/docz/dist/index.esm.js"}}),void 0!==Be&&Be&&Be===Object(Be)&&Object.isExtensible(Be)&&!Be.hasOwnProperty("__filemeta")&&Object.defineProperty(Be,"__filemeta",{configurable:!0,value:{name:"useMenus",filename:"node_modules/docz/dist/index.esm.js"}}),void 0!==Re&&Re&&Re===Object(Re)&&Object.isExtensible(Re)&&!Re.hasOwnProperty("__filemeta")&&Object.defineProperty(Re,"__filemeta",{configurable:!0,value:{name:"useDocs",filename:"node_modules/docz/dist/index.esm.js"}}),void 0!==Ee&&Ee&&Ee===Object(Ee)&&Object.isExtensible(Ee)&&!Ee.hasOwnProperty("__filemeta")&&Object.defineProperty(Ee,"__filemeta",{configurable:!0,value:{name:"useDataServer",filename:"node_modules/docz/dist/index.esm.js"}}),void 0!==De&&De&&De===Object(De)&&Object.isExtensible(De)&&!De.hasOwnProperty("__filemeta")&&Object.defineProperty(De,"__filemeta",{configurable:!0,value:{name:"useCurrentDoc",filename:"node_modules/docz/dist/index.esm.js"}}),void 0!==Ae&&Ae&&Ae===Object(Ae)&&Object.isExtensible(Ae)&&!Ae.hasOwnProperty("__filemeta")&&Object.defineProperty(Ae,"__filemeta",{configurable:!0,value:{name:"useConfig",filename:"node_modules/docz/dist/index.esm.js"}}),void 0!==we&&we&&we===Object(we)&&Object.isExtensible(we)&&!we.hasOwnProperty("__filemeta")&&Object.defineProperty(we,"__filemeta",{configurable:!0,value:{name:"useComponents",filename:"node_modules/docz/dist/index.esm.js"}}),void 0!==Pe&&Pe&&Pe===Object(Pe)&&Object.isExtensible(Pe)&&!Pe.hasOwnProperty("__filemeta")&&Object.defineProperty(Pe,"__filemeta",{configurable:!0,value:{name:"useComponentProps",filename:"node_modules/docz/dist/index.esm.js"}}),void 0!==Ze&&Ze&&Ze===Object(Ze)&&Object.isExtensible(Ze)&&!Ze.hasOwnProperty("__filemeta")&&Object.defineProperty(Ze,"__filemeta",{configurable:!0,value:{name:"theme",filename:"node_modules/docz/dist/index.esm.js"}}),void 0!==xe&&xe&&xe===Object(xe)&&Object.isExtensible(xe)&&!xe.hasOwnProperty("__filemeta")&&Object.defineProperty(xe,"__filemeta",{configurable:!0,value:{name:"doczState",filename:"node_modules/docz/dist/index.esm.js"}}),void 0!==Je&&Je&&Je===Object(Je)&&Object.isExtensible(Je)&&!Je.hasOwnProperty("__filemeta")&&Object.defineProperty(Je,"__filemeta",{configurable:!0,value:{name:"Props",filename:"node_modules/docz/dist/index.esm.js"}}),void 0!==Xe&&Xe&&Xe===Object(Xe)&&Object.isExtensible(Xe)&&!Xe.hasOwnProperty("__filemeta")&&Object.defineProperty(Xe,"__filemeta",{configurable:!0,value:{name:"Playground",filename:"node_modules/docz/dist/index.esm.js"}}),void 0!==be&&be&&be===Object(be)&&Object.isExtensible(be)&&!be.hasOwnProperty("__filemeta")&&Object.defineProperty(be,"__filemeta",{configurable:!0,value:{name:"ComponentsProvider",filename:"node_modules/docz/dist/index.esm.js"}})},ZPhZ:function(e,t,i){var r=i("fRAL"),o=i("Sq4h"),a=i("ySkN"),n=i("97Yx"),s=i("XA32"),p=i("cud3"),d=i("s3UK");e.exports=function(e,t,i){var l=o(e);return function o(){for(var m=arguments.length,c=Array(m),h=m,u=s(o);h--;)c[h]=arguments[h];var f=m<3&&c[0]!==u&&c[m-1]!==u?[]:p(c,u);if((m-=f.length)<i)return n(e,t,a,o.placeholder,void 0,c,f,void 0,void 0,i-m);var y=this&&this!==d&&this instanceof o?l:e;return r(y,this,c)}}},ZjZ4:function(e,t,i){var r=i("IqJI");e.exports=function(e){return(null==e?0:e.length)?r(e,1):[]}},ZkUl:function(e,t,i){"use strict";i.r(t),i.d(t,"startsWith",(function(){return a})),i.d(t,"pick",(function(){return n})),i.d(t,"match",(function(){return s})),i.d(t,"resolve",(function(){return p})),i.d(t,"insertParams",(function(){return d})),i.d(t,"validateRedirect",(function(){return l})),i.d(t,"shallowCompare",(function(){return g}));var r=i("+Ltg"),o=i.n(r),a=function(e,t){return e.substr(0,t.length)===t},n=function(e,t){for(var i=void 0,r=void 0,a=t.split("?")[0],n=y(a),s=""===n[0],p=f(e),d=0,l=p.length;d<l;d++){var c=!1,u=p[d].route;if(u.default)r={route:u,params:{},uri:t};else{for(var v=y(u.path),g={},b=Math.max(n.length,v.length),w=0;w<b;w++){var T=v[w],V=n[w];if(h(T)){g[T.slice(1)||"*"]=n.slice(w).map(decodeURIComponent).join("/");break}if(void 0===V){c=!0;break}var k=m.exec(T);if(k&&!s){-1===_.indexOf(k[1])||o()(!1);var S=decodeURIComponent(V);g[k[1]]=S}else if(T!==V){c=!0;break}}if(!c){i={route:u,params:g,uri:"/"+n.slice(0,w).join("/")};break}}}return i||r||null},s=function(e,t){return n([{path:e}],t)},p=function(e,t){if(a(e,"/"))return e;var i=e.split("?"),r=i[0],o=i[1],n=t.split("?")[0],s=y(r),p=y(n);if(""===s[0])return v(n,o);if(!a(s[0],".")){var d=p.concat(s).join("/");return v(("/"===n?"":"/")+d,o)}for(var l=p.concat(s),m=[],c=0,h=l.length;c<h;c++){var u=l[c];".."===u?m.pop():"."!==u&&m.push(u)}return v("/"+m.join("/"),o)},d=function(e,t){var i=e.split("?"),r=i[0],o=i[1],a=void 0===o?"":o,n="/"+y(r).map((function(e){var i=m.exec(e);return i?t[i[1]]:e})).join("/"),s=t.location,p=(s=void 0===s?{}:s).search,d=(void 0===p?"":p).split("?")[1]||"";return n=v(n,a,d)},l=function(e,t){var i=function(e){return c(e)};return y(e).filter(i).sort().join("/")===y(t).filter(i).sort().join("/")},m=/^:(.+)/,c=function(e){return m.test(e)},h=function(e){return e&&"*"===e[0]},u=function(e,t){return{route:e,score:e.default?0:y(e.path).reduce((function(e,t){return e+=4,!function(e){return""===e}(t)?c(t)?e+=2:h(t)?e-=5:e+=3:e+=1,e}),0),index:t}},f=function(e){return e.map(u).sort((function(e,t){return e.score<t.score?1:e.score>t.score?-1:e.index-t.index}))},y=function(e){return e.replace(/(^\/+|\/+$)/g,"").split("/")},v=function(e){for(var t=arguments.length,i=Array(t>1?t-1:0),r=1;r<t;r++)i[r-1]=arguments[r];return e+((i=i.filter((function(e){return e&&e.length>0})))&&i.length>0?"?"+i.join("&"):"")},_=["uri","path"],g=function(e,t){var i=Object.keys(e);return i.length===Object.keys(t).length&&i.every((function(i){return t.hasOwnProperty(i)&&e[i]===t[i]}))}},Zs3A:function(e,t){var i="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",r="["+i+"]",o="\\d+",a="[\\u2700-\\u27bf]",n="[a-z\\xdf-\\xf6\\xf8-\\xff]",s="[^\\ud800-\\udfff"+i+o+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",p="(?:\\ud83c[\\udde6-\\uddff]){2}",d="[\\ud800-\\udbff][\\udc00-\\udfff]",l="[A-Z\\xc0-\\xd6\\xd8-\\xde]",m="(?:"+n+"|"+s+")",c="(?:"+l+"|"+s+")",h="(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?",u="[\\ufe0e\\ufe0f]?"+h+("(?:\\u200d(?:"+["[^\\ud800-\\udfff]",p,d].join("|")+")[\\ufe0e\\ufe0f]?"+h+")*"),f="(?:"+[a,p,d].join("|")+")"+u,y=RegExp([l+"?"+n+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[r,l,"$"].join("|")+")",c+"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[r,l+m,"$"].join("|")+")",l+"?"+m+"+(?:['’](?:d|ll|m|re|s|t|ve))?",l+"+(?:['’](?:D|LL|M|RE|S|T|VE))?","\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",o,f].join("|"),"g");e.exports=function(e){return e.match(y)||[]}},Zy3L:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("m/eG"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},ZzBG:function(e,t,i){"use strict";t.a={files:{Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},RelocationBatchArg:{fields:[{description:"List of entries to be moved or copied. Each entry is :type:`RelocationPath`.",parameter:"entries",type:{list:{datatype:"RelocationPath",namespace:"files"}}},{description:"If there's a conflict with any file, have the Dropbox server try to autorename that file to avoid the conflict.",parameter:"autorename",type:{primitive:"Boolean"}},{description:"If true, :route:`copy_batch` will copy contents in shared folder, otherwise :field:`RelocationError.cant_copy_shared_folder` will be returned if :field:`RelocationPath.from_path` contains shared folder. This field is always true for :route:`move_batch`.",parameter:"allow_shared_folder",type:{primitive:"Boolean"}},{description:"Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies.",parameter:"allow_ownership_transfer",type:{primitive:"Boolean"}}],stone_type:"struct"},RelocationBatchLaunch:{description:"Result returned by :route:`copy_batch` or :route:`move_batch` that may either launch an asynchronous job or complete synchronously.",fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{parameter:"complete",type:{datatype:"RelocationBatchResult",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchResult:{fields:[{parameter:"entries",type:{list:{datatype:"RelocationBatchResultData",namespace:"files"}}}],stone_type:"struct"},RelocationBatchResultData:{fields:[{description:"Metadata of the relocated object.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}}],stone_type:"struct"},RelocationPath:{fields:[{description:"Path in the user's Dropbox to be copied or moved.",parameter:"from_path",type:{primitive:"String"}},{description:"Path in the user's Dropbox that is the destination.",parameter:"to_path",type:{primitive:"String"}}],stone_type:"struct"}}}},a7J0:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("yPSF"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},a7YA:function(e,t){e.exports=function(e,t){return function(i){return null!=i&&(i[e]===t&&(void 0!==t||e in Object(i)))}}},aBIM:function(e,t,i){var r=i("zcvR");e.exports=function(e){return r(this,e).get(e)}},aCmY:function(e,t){e.exports=function(e,t,i,r){for(var o=e.length,a=i+(r?1:-1);r?a--:++a<o;)if(t(e[a],a,e))return a;return-1}},aD51:function(e,t,i){"use strict";i.d(t,"a",(function(){return F})),i.d(t,"b",(function(){return P})),i.d(t,"c",(function(){return M}));var r=i("QKC2"),o=i.n(r),a=i("mXGw");var n=function(){function e(e){this.isSpeedy=void 0===e.speedy||e.speedy,this.tags=[],this.ctr=0,this.nonce=e.nonce,this.key=e.key,this.container=e.container,this.before=null}var t=e.prototype;return t.insert=function(e){if(this.ctr%(this.isSpeedy?65e3:1)==0){var t,i=function(e){var t=document.createElement("style");return t.setAttribute("data-emotion",e.key),void 0!==e.nonce&&t.setAttribute("nonce",e.nonce),t.appendChild(document.createTextNode("")),t}(this);t=0===this.tags.length?this.before:this.tags[this.tags.length-1].nextSibling,this.container.insertBefore(i,t),this.tags.push(i)}var r=this.tags[this.tags.length-1];if(this.isSpeedy){var o=function(e){if(e.sheet)return e.sheet;for(var t=0;t<document.styleSheets.length;t++)if(document.styleSheets[t].ownerNode===e)return document.styleSheets[t]}(r);try{var a=105===e.charCodeAt(1)&&64===e.charCodeAt(0);o.insertRule(e,a?0:o.cssRules.length)}catch(n){0}}else r.appendChild(document.createTextNode(e));this.ctr++},t.flush=function(){this.tags.forEach((function(e){return e.parentNode.removeChild(e)})),this.tags=[],this.ctr=0},e}();var s=function(e){function t(e,t,r){var o=t.trim().split(u);t=o;var a=o.length,n=e.length;switch(n){case 0:case 1:var s=0;for(e=0===n?"":e[0]+" ";s<a;++s)t[s]=i(e,t[s],r).trim();break;default:var p=s=0;for(t=[];s<a;++s)for(var d=0;d<n;++d)t[p++]=i(e[d]+" ",o[s],r).trim()}return t}function i(e,t,i){var r=t.charCodeAt(0);switch(33>r&&(r=(t=t.trim()).charCodeAt(0)),r){case 38:return t.replace(f,"$1"+e.trim());case 58:return e.trim()+t.replace(f,"$1"+e.trim());default:if(0<1*i&&0<t.indexOf("\f"))return t.replace(f,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function r(e,t,i,a){var n=e+";",s=2*t+3*i+4*a;if(944===s){e=n.indexOf(":",9)+1;var p=n.substring(e,n.length-1).trim();return p=n.substring(0,e).trim()+p+";",1===D||2===D&&o(p,1)?"-webkit-"+p+p:p}if(0===D||2===D&&!o(n,1))return n;switch(s){case 1015:return 97===n.charCodeAt(10)?"-webkit-"+n+n:n;case 951:return 116===n.charCodeAt(3)?"-webkit-"+n+n:n;case 963:return 110===n.charCodeAt(5)?"-webkit-"+n+n:n;case 1009:if(100!==n.charCodeAt(4))break;case 969:case 942:return"-webkit-"+n+n;case 978:return"-webkit-"+n+"-moz-"+n+n;case 1019:case 983:return"-webkit-"+n+"-moz-"+n+"-ms-"+n+n;case 883:if(45===n.charCodeAt(8))return"-webkit-"+n+n;if(0<n.indexOf("image-set(",11))return n.replace(S,"$1-webkit-$2")+n;break;case 932:if(45===n.charCodeAt(4))switch(n.charCodeAt(5)){case 103:return"-webkit-box-"+n.replace("-grow","")+"-webkit-"+n+"-ms-"+n.replace("grow","positive")+n;case 115:return"-webkit-"+n+"-ms-"+n.replace("shrink","negative")+n;case 98:return"-webkit-"+n+"-ms-"+n.replace("basis","preferred-size")+n}return"-webkit-"+n+"-ms-"+n+n;case 964:return"-webkit-"+n+"-ms-flex-"+n+n;case 1023:if(99!==n.charCodeAt(8))break;return"-webkit-box-pack"+(p=n.substring(n.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+n+"-ms-flex-pack"+p+n;case 1005:return c.test(n)?n.replace(m,":-webkit-")+n.replace(m,":-moz-")+n:n;case 1e3:switch(t=(p=n.substring(13).trim()).indexOf("-")+1,p.charCodeAt(0)+p.charCodeAt(t)){case 226:p=n.replace(g,"tb");break;case 232:p=n.replace(g,"tb-rl");break;case 220:p=n.replace(g,"lr");break;default:return n}return"-webkit-"+n+"-ms-"+p+n;case 1017:if(-1===n.indexOf("sticky",9))break;case 975:switch(t=(n=e).length-10,s=(p=(33===n.charCodeAt(t)?n.substring(0,t):n).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|p.charCodeAt(7))){case 203:if(111>p.charCodeAt(8))break;case 115:n=n.replace(p,"-webkit-"+p)+";"+n;break;case 207:case 102:n=n.replace(p,"-webkit-"+(102<s?"inline-":"")+"box")+";"+n.replace(p,"-webkit-"+p)+";"+n.replace(p,"-ms-"+p+"box")+";"+n}return n+";";case 938:if(45===n.charCodeAt(5))switch(n.charCodeAt(6)){case 105:return p=n.replace("-items",""),"-webkit-"+n+"-webkit-box-"+p+"-ms-flex-"+p+n;case 115:return"-webkit-"+n+"-ms-flex-item-"+n.replace(T,"")+n;default:return"-webkit-"+n+"-ms-flex-line-pack"+n.replace("align-content","").replace(T,"")+n}break;case 973:case 989:if(45!==n.charCodeAt(3)||122===n.charCodeAt(4))break;case 931:case 953:if(!0===k.test(e))return 115===(p=e.substring(e.indexOf(":")+1)).charCodeAt(0)?r(e.replace("stretch","fill-available"),t,i,a).replace(":fill-available",":stretch"):n.replace(p,"-webkit-"+p)+n.replace(p,"-moz-"+p.replace("fill-",""))+n;break;case 962:if(n="-webkit-"+n+(102===n.charCodeAt(5)?"-ms-"+n:"")+n,211===i+a&&105===n.charCodeAt(13)&&0<n.indexOf("transform",10))return n.substring(0,n.indexOf(";",27)+1).replace(h,"$1-webkit-$2")+n}return n}function o(e,t){var i=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?i:10);return i=e.substring(i+1,e.length-1),R(2!==t?r:r.replace(V,"$1"),i,t)}function a(e,t){var i=r(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return i!==t+";"?i.replace(w," or ($1)").substring(4):"("+t+")"}function n(e,t,i,r,o,a,n,s,d,l){for(var m,c=0,h=t;c<L;++c)switch(m=E[c].call(p,e,h,i,r,o,a,n,s,d,l)){case void 0:case!1:case!0:case null:break;default:h=m}if(h!==t)return h}function s(e){return void 0!==(e=e.prefix)&&(R=null,e?"function"!=typeof e?D=1:(D=2,R=e):D=0),s}function p(e,i){var s=e;if(33>s.charCodeAt(0)&&(s=s.trim()),s=[s],0<L){var p=n(-1,i,s,s,A,x,0,0,0,0);void 0!==p&&"string"==typeof p&&(i=p)}var m=function e(i,s,p,m,c){for(var h,u,f,g,w,T=0,V=0,k=0,S=0,E=0,R=0,F=f=h=0,q=0,U=0,C=0,j=0,O=p.length,B=O-1,G="",W="",N="",z="";q<O;){if(u=p.charCodeAt(q),q===B&&0!==V+S+k+T&&(0!==V&&(u=47===V?10:47),S=k=T=0,O++,B++),0===V+S+k+T){if(q===B&&(0<U&&(G=G.replace(l,"")),0<G.trim().length)){switch(u){case 32:case 9:case 59:case 13:case 10:break;default:G+=p.charAt(q)}u=59}switch(u){case 123:for(h=(G=G.trim()).charCodeAt(0),f=1,j=++q;q<O;){switch(u=p.charCodeAt(q)){case 123:f++;break;case 125:f--;break;case 47:switch(u=p.charCodeAt(q+1)){case 42:case 47:e:{for(F=q+1;F<B;++F)switch(p.charCodeAt(F)){case 47:if(42===u&&42===p.charCodeAt(F-1)&&q+2!==F){q=F+1;break e}break;case 10:if(47===u){q=F+1;break e}}q=F}}break;case 91:u++;case 40:u++;case 34:case 39:for(;q++<B&&p.charCodeAt(q)!==u;);}if(0===f)break;q++}switch(f=p.substring(j,q),0===h&&(h=(G=G.replace(d,"").trim()).charCodeAt(0)),h){case 64:switch(0<U&&(G=G.replace(l,"")),u=G.charCodeAt(1)){case 100:case 109:case 115:case 45:U=s;break;default:U=I}if(j=(f=e(s,U,f,u,c+1)).length,0<L&&(w=n(3,f,U=t(I,G,C),s,A,x,j,u,c,m),G=U.join(""),void 0!==w&&0===(j=(f=w.trim()).length)&&(u=0,f="")),0<j)switch(u){case 115:G=G.replace(b,a);case 100:case 109:case 45:f=G+"{"+f+"}";break;case 107:f=(G=G.replace(y,"$1 $2"))+"{"+f+"}",f=1===D||2===D&&o("@"+f,3)?"@-webkit-"+f+"@"+f:"@"+f;break;default:f=G+f,112===m&&(W+=f,f="")}else f="";break;default:f=e(s,t(s,G,C),f,m,c+1)}N+=f,f=C=U=F=h=0,G="",u=p.charCodeAt(++q);break;case 125:case 59:if(1<(j=(G=(0<U?G.replace(l,""):G).trim()).length))switch(0===F&&(h=G.charCodeAt(0),45===h||96<h&&123>h)&&(j=(G=G.replace(" ",":")).length),0<L&&void 0!==(w=n(1,G,s,i,A,x,W.length,m,c,m))&&0===(j=(G=w.trim()).length)&&(G="\0\0"),h=G.charCodeAt(0),u=G.charCodeAt(1),h){case 0:break;case 64:if(105===u||99===u){z+=G+p.charAt(q);break}default:58!==G.charCodeAt(j-1)&&(W+=r(G,h,u,G.charCodeAt(2)))}C=U=F=h=0,G="",u=p.charCodeAt(++q)}}switch(u){case 13:case 10:47===V?V=0:0===1+h&&107!==m&&0<G.length&&(U=1,G+="\0"),0<L*M&&n(0,G,s,i,A,x,W.length,m,c,m),x=1,A++;break;case 59:case 125:if(0===V+S+k+T){x++;break}default:switch(x++,g=p.charAt(q),u){case 9:case 32:if(0===S+T+V)switch(E){case 44:case 58:case 9:case 32:g="";break;default:32!==u&&(g=" ")}break;case 0:g="\\0";break;case 12:g="\\f";break;case 11:g="\\v";break;case 38:0===S+V+T&&(U=C=1,g="\f"+g);break;case 108:if(0===S+V+T+P&&0<F)switch(q-F){case 2:112===E&&58===p.charCodeAt(q-3)&&(P=E);case 8:111===R&&(P=R)}break;case 58:0===S+V+T&&(F=q);break;case 44:0===V+k+S+T&&(U=1,g+="\r");break;case 34:case 39:0===V&&(S=S===u?0:0===S?u:S);break;case 91:0===S+V+k&&T++;break;case 93:0===S+V+k&&T--;break;case 41:0===S+V+T&&k--;break;case 40:if(0===S+V+T){if(0===h)switch(2*E+3*R){case 533:break;default:h=1}k++}break;case 64:0===V+k+S+T+F+f&&(f=1);break;case 42:case 47:if(!(0<S+T+k))switch(V){case 0:switch(2*u+3*p.charCodeAt(q+1)){case 235:V=47;break;case 220:j=q,V=42}break;case 42:47===u&&42===E&&j+2!==q&&(33===p.charCodeAt(j+2)&&(W+=p.substring(j,q+1)),g="",V=0)}}0===V&&(G+=g)}R=E,E=u,q++}if(0<(j=W.length)){if(U=s,0<L&&(void 0!==(w=n(2,W,U,i,A,x,j,m,c,m))&&0===(W=w).length))return z+W+N;if(W=U.join(",")+"{"+W+"}",0!=D*P){switch(2!==D||o(W,2)||(P=0),P){case 111:W=W.replace(_,":-moz-$1")+W;break;case 112:W=W.replace(v,"::-webkit-input-$1")+W.replace(v,"::-moz-$1")+W.replace(v,":-ms-input-$1")+W}P=0}}return z+W+N}(I,s,i,0,0);return 0<L&&(void 0!==(p=n(-2,m,s,s,A,x,m.length,0,0,0))&&(m=p)),"",P=0,x=A=1,m}var d=/^\0+/g,l=/[\0\r\f]/g,m=/: */g,c=/zoo|gra/,h=/([,: ])(transform)/g,u=/,\r+?/g,f=/([\t\r\n ])*\f?&/g,y=/@(k\w+)\s*(\S*)\s*/,v=/::(place)/g,_=/:(read-only)/g,g=/[svh]\w+-[tblr]{2}/,b=/\(\s*(.*)\s*\)/g,w=/([\s\S]*?);/g,T=/-self|flex-/g,V=/[^]*?(:[rp][el]a[\w-]+)[^]*/,k=/stretch|:\s*\w+\-(?:conte|avail)/,S=/([^-])(image-set\()/,x=1,A=1,P=0,D=1,I=[],E=[],L=0,R=null,M=0;return p.use=function e(t){switch(t){case void 0:case null:L=E.length=0;break;default:if("function"==typeof t)E[L++]=t;else if("object"==typeof t)for(var i=0,r=t.length;i<r;++i)e(t[i]);else M=0|!!t}return e},p.set=s,void 0!==e&&s(e),p};function p(e){e&&d.current.insert(e+"}")}var d={current:null},l=function(e,t,i,r,o,a,n,s,l,m){switch(e){case 1:switch(t.charCodeAt(0)){case 64:return d.current.insert(t+";"),"";case 108:if(98===t.charCodeAt(2))return""}break;case 2:if(0===s)return t+"/*|*/";break;case 3:switch(s){case 102:case 112:return d.current.insert(i[0]+t),"";default:return t+(0===m?"/*|*/":"")}case-2:t.split("/*|*/}").forEach(p)}},m=function(e){void 0===e&&(e={});var t,i=e.key||"css";void 0!==e.prefix&&(t={prefix:e.prefix});var r=new s(t);var o,a={};o=e.container||document.head;var p,m=document.querySelectorAll("style[data-emotion-"+i+"]");Array.prototype.forEach.call(m,(function(e){e.getAttribute("data-emotion-"+i).split(" ").forEach((function(e){a[e]=!0})),e.parentNode!==o&&o.appendChild(e)})),r.use(e.stylisPlugins)(l),p=function(e,t,i,o){var a=t.name;d.current=i,r(e,t.styles),o&&(c.inserted[a]=!0)};var c={key:i,sheet:new n({key:i,container:o,nonce:e.nonce,speedy:e.speedy}),nonce:e.nonce,inserted:a,registered:{},insert:p};return c};function c(e,t,i){var r="";return i.split(" ").forEach((function(i){void 0!==e[i]?t.push(e[i]):r+=i+" "})),r}var h=function(e,t,i){var r=e.key+"-"+t.name;if(!1===i&&void 0===e.registered[r]&&(e.registered[r]=t.styles),void 0===e.inserted[t.name]){var o=t;do{e.insert("."+r,o,e.sheet,!0);o=o.next}while(void 0!==o)}};var u=function(e){for(var t,i=0,r=0,o=e.length;o>=4;++r,o-=4)t=1540483477*(65535&(t=255&e.charCodeAt(r)|(255&e.charCodeAt(++r))<<8|(255&e.charCodeAt(++r))<<16|(255&e.charCodeAt(++r))<<24))+(59797*(t>>>16)<<16),i=1540483477*(65535&(t^=t>>>24))+(59797*(t>>>16)<<16)^1540483477*(65535&i)+(59797*(i>>>16)<<16);switch(o){case 3:i^=(255&e.charCodeAt(r+2))<<16;case 2:i^=(255&e.charCodeAt(r+1))<<8;case 1:i=1540483477*(65535&(i^=255&e.charCodeAt(r)))+(59797*(i>>>16)<<16)}return(((i=1540483477*(65535&(i^=i>>>13))+(59797*(i>>>16)<<16))^i>>>15)>>>0).toString(36)},f={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},y=i("M8e6"),v=/[A-Z]|^ms/g,_=/_EMO_([^_]+?)_([^]*?)_EMO_/g,g=function(e){return 45===e.charCodeAt(1)},b=function(e){return null!=e&&"boolean"!=typeof e},w=Object(y.a)((function(e){return g(e)?e:e.replace(v,"-$&").toLowerCase()})),T=function(e,t){switch(e){case"animation":case"animationName":if("string"==typeof t)return t.replace(_,(function(e,t,i){return k={name:t,styles:i,next:k},t}))}return 1===f[e]||g(e)||"number"!=typeof t||0===t?t:t+"px"};function V(e,t,i,r){if(null==i)return"";if(void 0!==i.__emotion_styles)return i;switch(typeof i){case"boolean":return"";case"object":if(1===i.anim)return k={name:i.name,styles:i.styles,next:k},i.name;if(void 0!==i.styles){var o=i.next;if(void 0!==o)for(;void 0!==o;)k={name:o.name,styles:o.styles,next:k},o=o.next;return i.styles+";"}return function(e,t,i){var r="";if(Array.isArray(i))for(var o=0;o<i.length;o++)r+=V(e,t,i[o],!1);else for(var a in i){var n=i[a];if("object"!=typeof n)null!=t&&void 0!==t[n]?r+=a+"{"+t[n]+"}":b(n)&&(r+=w(a)+":"+T(a,n)+";");else if(!Array.isArray(n)||"string"!=typeof n[0]||null!=t&&void 0!==t[n[0]]){var s=V(e,t,n,!1);switch(a){case"animation":case"animationName":r+=w(a)+":"+s+";";break;default:r+=a+"{"+s+"}"}}else for(var p=0;p<n.length;p++)b(n[p])&&(r+=w(a)+":"+T(a,n[p])+";")}return r}(e,t,i);case"function":if(void 0!==e){var a=k,n=i(e);return k=a,V(e,t,n,r)}break;case"string":}if(null==t)return i;var s=t[i];return void 0===s||r?i:s}var k,S=/label:\s*([^\s;\n{]+)\s*;/g;var x=function(e,t,i){if(1===e.length&&"object"==typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var r=!0,o="";k=void 0;var a=e[0];null==a||void 0===a.raw?(r=!1,o+=V(i,t,a,!1)):o+=a[0];for(var n=1;n<e.length;n++)o+=V(i,t,e[n],46===o.charCodeAt(o.length-1)),r&&(o+=a[n]);S.lastIndex=0;for(var s,p="";null!==(s=S.exec(o));)p+="-"+s[1];return{name:u(o)+p,styles:o,next:k}};var A=Object(a.createContext)("undefined"!=typeof HTMLElement?m():null),P=Object(a.createContext)({}),D=(A.Provider,function(e){return Object(a.forwardRef)((function(t,i){return Object(a.createElement)(A.Consumer,null,(function(r){return e(t,r,i)}))}))}),I="__EMOTION_TYPE_PLEASE_DO_NOT_USE__",E=Object.prototype.hasOwnProperty,L=function(e,t,i,r){var o=null===i?t.css:t.css(i);"string"==typeof o&&void 0!==e.registered[o]&&(o=e.registered[o]);var n=t[I],s=[o],p="";"string"==typeof t.className?p=c(e.registered,s,t.className):null!=t.className&&(p=t.className+" ");var d=x(s);h(e,d,"string"==typeof n);p+=e.key+"-"+d.name;var l={};for(var m in t)E.call(t,m)&&"css"!==m&&m!==I&&(l[m]=t[m]);return l.ref=r,l.className=p,Object(a.createElement)(n,l)},R=D((function(e,t,i){return"function"==typeof e.css?Object(a.createElement)(P.Consumer,null,(function(r){return L(t,e,r,i)})):L(t,e,null,i)}));var M=function(e,t){var i=arguments;if(null==t||!E.call(t,"css"))return a.createElement.apply(void 0,i);var r=i.length,o=new Array(r);o[0]=R;var n={};for(var s in t)E.call(t,s)&&(n[s]=t[s]);n[I]=e,o[1]=n;for(var p=2;p<r;p++)o[p]=i[p];return a.createElement.apply(null,o)},F=D((function(e,t){var i=e.styles;if("function"==typeof i)return Object(a.createElement)(P.Consumer,null,(function(e){var r=x([i(e)]);return Object(a.createElement)(q,{serialized:r,cache:t})}));var r=x([i]);return Object(a.createElement)(q,{serialized:r,cache:t})})),q=function(e){function t(t,i,r){return e.call(this,t,i,r)||this}o()(t,e);var i=t.prototype;return i.componentDidMount=function(){this.sheet=new n({key:this.props.cache.key+"-global",nonce:this.props.cache.sheet.nonce,container:this.props.cache.sheet.container});var e=document.querySelector("style[data-emotion-"+this.props.cache.key+'="'+this.props.serialized.name+'"]');null!==e&&this.sheet.tags.push(e),this.props.cache.sheet.tags.length&&(this.sheet.before=this.props.cache.sheet.tags[0]),this.insertStyles()},i.componentDidUpdate=function(e){e.serialized.name!==this.props.serialized.name&&this.insertStyles()},i.insertStyles=function(){if(void 0!==this.props.serialized.next&&h(this.props.cache,this.props.serialized.next,!0),this.sheet.tags.length){var e=this.sheet.tags[this.sheet.tags.length-1].nextElementSibling;this.sheet.before=e,this.sheet.flush()}this.props.cache.insert("",this.props.serialized,this.sheet,!1)},i.componentWillUnmount=function(){this.sheet.flush()},i.render=function(){return null},t}(a.Component),U=function e(t){for(var i=t.length,r=0,o="";r<i;r++){var a=t[r];if(null!=a){var n=void 0;switch(typeof a){case"boolean":break;case"object":if(Array.isArray(a))n=e(a);else for(var s in n="",a)a[s]&&s&&(n&&(n+=" "),n+=s);break;default:n=a}n&&(o&&(o+=" "),o+=n)}}return o};function C(e,t,i){var r=[],o=c(e,r,i);return r.length<2?i:o+t(r)}D((function(e,t){return Object(a.createElement)(P.Consumer,null,(function(i){var r=function(){for(var e=arguments.length,i=new Array(e),r=0;r<e;r++)i[r]=arguments[r];var o=x(i,t.registered);return h(t,o,!1),t.key+"-"+o.name},o={css:r,cx:function(){for(var e=arguments.length,i=new Array(e),o=0;o<e;o++)i[o]=arguments[o];return C(t.registered,r,U(i))},theme:i},a=e.children(o);return!0,a}))}))},aIY4:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("sdIU"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},aMfu:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("hJ7n"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},aPcW:function(e,t,i){"use strict";t.a={files:{DeleteArg:{fields:[{description:"Path in the user's Dropbox to delete.",parameter:"path",type:{primitive:"String"}},{description:'Perform delete if given "rev" matches the existing file\'s latest "rev". This field does not support deleting a folder.',parameter:"parent_rev",type:{optional:{primitive:"String"}}}],stone_type:"struct"},DeleteBatchArg:{fields:[{parameter:"entries",type:{list:{datatype:"DeleteArg",namespace:"files"}}}],stone_type:"struct"},DeleteBatchLaunch:{description:"Result returned by :route:`delete_batch` that may either launch an asynchronous job or complete synchronously.",fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{parameter:"complete",type:{datatype:"DeleteBatchResult",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},DeleteBatchResult:{fields:[{description:"Each entry in :field:`DeleteBatchArg.entries` will appear at the same position inside :field:`DeleteBatchResult.entries`.",parameter:"entries",type:{list:{datatype:"DeleteBatchResultEntry",namespace:"files"}}}],stone_type:"struct"},DeleteBatchResultData:{fields:[{description:"Metadata of the deleted object.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}}],stone_type:"struct"},DeleteBatchResultEntry:{fields:[{parameter:"success",type:{datatype:"DeleteBatchResultData",namespace:"files"}},{parameter:"failure",type:{datatype:"DeleteError",namespace:"files"}}],stone_type:"union"},DeleteError:{fields:[{parameter:"path_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"path_write",type:{datatype:"WriteError",namespace:"files"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{description:"There are too many files in one request. Please retry with fewer files.",parameter:"too_many_files",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},aUKq:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("lUso"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},aijU:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("TImY"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},aqBa:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("zAWK"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},azLn:function(e,t,i){"use strict";t.a={files:{LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},sharing:{LinkAccessLevel:{fields:[{description:"Users who use the link can view and comment on the content.",parameter:"viewer",type:{primitive:"Void"}},{description:"Users who use the link can edit, view and comment on the content.",parameter:"editor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermissions:{fields:[{description:"Whether the caller can revoke the shared link.",parameter:"can_revoke",type:{primitive:"Boolean"}},{description:"The current visibility of the link after considering the shared links policies of the the team (in case the link's owner is part of a team) and the shared folder (in case the linked file is part of a shared folder). This field is shown only if the caller has access to this info (the link's owner always has access to this data). For some links, an effective_audience value is returned instead.",parameter:"resolved_visibility",type:{optional:{datatype:"ResolvedVisibility",namespace:"sharing"}}},{description:"The shared link's requested visibility. This can be overridden by the team and shared folder policies. The final visibility, after considering these policies, can be found in :field:`resolved_visibility`. This is shown only if the caller is the link's owner and resolved_visibility is returned instead of effective_audience.",parameter:"requested_visibility",type:{optional:{datatype:"RequestedVisibility",namespace:"sharing"}}},{description:"The failure reason for revoking the link. This field will only be present if the :field:`can_revoke` is :val:`false`.",parameter:"revoke_failure_reason",type:{optional:{datatype:"SharedLinkAccessFailureReason",namespace:"sharing"}}},{description:"The type of audience who can benefit from the access level specified by the `link_access_level` field.",parameter:"effective_audience",type:{optional:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The access level that the link will grant to its users. A link can grant additional rights to a user beyond their current access level. For example, if a user was invited as a viewer to a file, and then opens a link with `link_access_level` set to `editor`, then they will gain editor privileges. The `link_access_level` is a property of the link, and does not depend on who is calling this API. In particular, `link_access_level` does not take into account the API caller's current permissions to the content.",parameter:"link_access_level",type:{optional:{datatype:"LinkAccessLevel",namespace:"sharing"}}}],stone_type:"struct"},ListSharedLinksArg:{fields:[{description:"See :route:`list_shared_links` description.",parameter:"path",type:{optional:{primitive:"String"}}},{description:"The cursor returned by your last call to :route:`list_shared_links`.",parameter:"cursor",type:{optional:{primitive:"String"}}},{description:"See :route:`list_shared_links` description.",parameter:"direct_only",type:{optional:{primitive:"Boolean"}}}],stone_type:"struct"},ListSharedLinksError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{description:"Indicates that the cursor has been invalidated. Call :route:`list_shared_links` to obtain a new cursor.",parameter:"reset",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListSharedLinksResult:{fields:[{description:"Shared links applicable to the path argument.",parameter:"links",type:{list:{datatype:"SharedLinkMetadata",namespace:"sharing"}}},{description:"Is true if there are additional shared links that have not been returned yet. Pass the cursor into :route:`list_shared_links` to retrieve them.",parameter:"has_more",type:{primitive:"Boolean"}},{description:"Pass the cursor into :route:`list_shared_links` to obtain the additional links. Cursor is returned only if no path is given.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},RequestedVisibility:{description:"The access permission that can be requested by the caller for the shared link. Note that the final resolved visibility of the shared link takes into account other aspects, such as team and shared folder settings. Check the :type:`ResolvedVisibility` for more info on the possible resolved visibility values of shared links.",fields:[{description:"Anyone who has received the link can access it. No login required.",parameter:"public",type:{primitive:"Void"}},{description:"Only members of the same team can access the link. Login is required.",parameter:"team_only",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}}],stone_type:"union"},ResolvedVisibility:{description:"The actual access permissions values of shared links after taking into account user preferences and the team and shared folder settings. Check the :type:`RequestedVisibility` for more info on the possible visibility values that can be set by the shared link's owner.",fields:[{description:"Anyone who has received the link can access it. No login required.",parameter:"public",type:{primitive:"Void"}},{description:"Only members of the same team can access the link. Login is required.",parameter:"team_only",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Only members of the same team who have the link-specific password can access the link. Login is required.",parameter:"team_and_password",type:{primitive:"Void"}},{description:"Only members of the shared folder containing the linked file can access the link. Login is required.",parameter:"shared_folder_only",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLinkAccessFailureReason:{fields:[{description:"User is not logged in.",parameter:"login_required",type:{primitive:"Void"}},{description:"User's email is not verified.",parameter:"email_verify_required",type:{primitive:"Void"}},{description:"The link is password protected.",parameter:"password_required",type:{primitive:"Void"}},{description:"Access is allowed for team members only.",parameter:"team_only",type:{primitive:"Void"}},{description:"Access is allowed for the shared link's owner only.",parameter:"owner_only",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLinkMetadata:{description:"The metadata of a shared link.",fields:[{description:"URL of the shared link.",parameter:"url",type:{primitive:"String"}},{description:"The linked file name (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The link's access permissions.",parameter:"link_permissions",type:{datatype:"LinkPermissions",namespace:"sharing"}},{description:"A unique identifier for the linked file.",parameter:"id",type:{optional:{primitive:"String"}}},{description:"Expiration time, if set. By default the link won't expire.",parameter:"expires",type:{optional:{primitive:"Timestamp"}}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will only be present only if the linked file is in the authenticated user's  dropbox.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The team membership information of the link's owner.  This field will only be present  if the link's owner is a team member.",parameter:"team_member_info",type:{optional:{datatype:"TeamMemberInfo",namespace:"sharing"}}},{description:"The team information of the content's owner. This field will only be present if the content's owner is a team member and the content's owner team is different from the link's owner team.",parameter:"content_owner_team_info",type:{optional:{datatype:"Team",namespace:"users"}}}],stone_type:"struct",todo:!0},TeamMemberInfo:{description:"Information about a team member.",fields:[{description:"Information about the member's team.",parameter:"team_info",type:{datatype:"Team",namespace:"users"}},{description:"The display name of the user.",parameter:"display_name",type:{primitive:"String"}},{description:"ID of user as a member of a team. This field will only be present if the member is in the same team as current user.",parameter:"member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},b1Uc:function(e,t,i){"use strict";t.a={team:{ApiApp:{description:"Information on linked third party applications.",fields:[{description:"The application unique id.",parameter:"app_id",type:{primitive:"String"}},{description:"The application name.",parameter:"app_name",type:{primitive:"String"}},{description:"Whether the linked application uses a dedicated folder.",parameter:"is_app_folder",type:{primitive:"Boolean"}},{description:"The application publisher name.",parameter:"publisher",type:{optional:{primitive:"String"}}},{description:"The publisher's URL.",parameter:"publisher_url",type:{optional:{primitive:"String"}}},{description:"The time this application was linked.",parameter:"linked",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},ListMembersAppsArg:{description:"Arguments for :route:`linked_apps/list_members_linked_apps`.",fields:[{description:"At the first call to the :route:`linked_apps/list_members_linked_apps` the cursor shouldn't be passed. Then, if the result of the call includes a cursor, the following requests should include the received cursors in order to receive the next sub list of the team applications.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},ListMembersAppsError:{description:"Error returned by :route:`linked_apps/list_members_linked_apps`.",fields:[{description:"Indicates that the cursor has been invalidated. Call :route:`linked_apps/list_members_linked_apps` again with an empty cursor to obtain a new cursor.",parameter:"reset",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListMembersAppsResult:{description:"Information returned by :route:`linked_apps/list_members_linked_apps`.",fields:[{description:"The linked applications of each member of the team.",parameter:"apps",type:{list:{datatype:"MemberLinkedApps",namespace:"team"}}},{description:"If true, then there are more apps available. Pass the cursor to :route:`linked_apps/list_members_linked_apps` to retrieve the rest.",parameter:"has_more",type:{primitive:"Boolean"}},{description:"Pass the cursor into :route:`linked_apps/list_members_linked_apps` to receive the next sub list of team's applications.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberLinkedApps:{description:"Information on linked applications of a team member.",fields:[{description:"The member unique Id.",parameter:"team_member_id",type:{primitive:"String"}},{description:"List of third party applications linked by this team member.",parameter:"linked_api_apps",type:{list:{datatype:"ApiApp",namespace:"team"}}}],stone_type:"struct"}}}},b2OE:function(e,t,i){var r=i("LSEb")(i("s3UK"),"Set");e.exports=r},b9dK:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("cvVt"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},bE7W:function(e,t){var i=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return i.call(e)}catch(t){}try{return e+""}catch(t){}}return""}},bQGB:function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},files:{LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},MoveIntoVaultError:{fields:[{description:"Moving shared folder into Vault is not allowed.",parameter:"is_shared_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchError:{fields:[{parameter:"from_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"from_write",type:{datatype:"WriteError",namespace:"files"}},{parameter:"to",type:{datatype:"WriteError",namespace:"files"}},{description:"Shared folders can't be copied.",parameter:"cant_copy_shared_folder",type:{primitive:"Void"}},{description:"Your move operation would result in nested shared folders.  This is not allowed.",parameter:"cant_nest_shared_folder",type:{primitive:"Void"}},{description:"You cannot move a folder into itself.",parameter:"cant_move_folder_into_itself",type:{primitive:"Void"}},{description:"The operation would involve more than 10,000 files and folders.",parameter:"too_many_files",type:{primitive:"Void"}},{description:"There are duplicated/nested paths among :field:`RelocationArg.from_path` and :field:`RelocationArg.to_path`.",parameter:"duplicated_or_nested_paths",type:{primitive:"Void"}},{description:"Your move operation would result in an ownership transfer. You may reissue the request with the field :field:`RelocationArg.allow_ownership_transfer` to true.",parameter:"cant_transfer_ownership",type:{primitive:"Void"}},{description:"The current user does not have enough space to move or copy the files.",parameter:"insufficient_quota",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{description:"Can't move the shared folder to the given destination.",parameter:"cant_move_shared_folder",type:{primitive:"Void"}},{description:"Some content cannot be moved into Vault under certain circumstances, see detailed error.",parameter:"cant_move_into_vault",type:{datatype:"MoveIntoVaultError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationBatchJobStatus:{fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The copy or move batch job has finished.",parameter:"complete",type:{datatype:"RelocationBatchResult",namespace:"files"}},{description:"The copy or move batch job has failed with exception.",parameter:"failed",type:{datatype:"RelocationBatchError",namespace:"files"}}],stone_type:"union"},RelocationBatchResult:{fields:[{parameter:"entries",type:{list:{datatype:"RelocationBatchResultData",namespace:"files"}}}],stone_type:"struct"},RelocationBatchResultData:{fields:[{description:"Metadata of the relocated object.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},beLC:function(e,t,i){"use strict";t.a={sharing:{SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TransferFolderArg:{fields:[{description:"The ID for the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"A account or team member ID to transfer ownership to.",parameter:"to_dropbox_id",type:{primitive:"String"}}],stone_type:"struct"},TransferFolderError:{fields:[{parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{description:":field:`TransferFolderArg.to_dropbox_id` is invalid.",parameter:"invalid_dropbox_id",type:{primitive:"Void"}},{description:"The new designated owner is not currently a member of the shared folder.",parameter:"new_owner_not_a_member",type:{primitive:"Void"}},{description:"The new designated owner has not added the folder to their Dropbox.",parameter:"new_owner_unmounted",type:{primitive:"Void"}},{description:"The new designated owner's e-mail address is unverified.",parameter:"new_owner_email_unverified",type:{primitive:"Void"}},{description:"This action cannot be performed on a team shared folder.",parameter:"team_folder",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},bim0:function(e,t,i){var r=i("yoW1"),o=i("B4Jh"),a=i("yqAG");e.exports=function(e,t){return a(o(e,t,r),e+"")}},c27i:function(e,t,i){"use strict";t.a={sharing:{GetSharedLinksArg:{fields:[{description:"See :route:`get_shared_links` description.",parameter:"path",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GetSharedLinksError:{fields:[{parameter:"path",type:{optional:{primitive:"String"}}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GetSharedLinksResult:{fields:[{description:"Shared links applicable to the path argument.",parameter:"links",type:{list:{datatype:"LinkMetadata",namespace:"sharing"}}}],stone_type:"struct"},LinkMetadata:{description:"Metadata for a shared link. This can be either a :type:`PathLinkMetadata` or :type:`CollectionLinkMetadata`.",fields:[{description:"URL of the shared link.",parameter:"url",type:{primitive:"String"}},{description:"Who can access the link.",parameter:"visibility",type:{datatype:"Visibility",namespace:"sharing"}},{description:"Expiration time, if set. By default the link won't expire.",parameter:"expires",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},Visibility:{description:"Who can access a shared link. The most open visibility is :field:`public`. The default depends on many aspects, such as team and user preferences and shared folder settings.",fields:[{description:"Anyone who has received the link can access it. No login required.",parameter:"public",type:{primitive:"Void"}},{description:"Only members of the same team can access the link. Login is required.",parameter:"team_only",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Only members of the same team who have the link-specific password can access the link.",parameter:"team_and_password",type:{primitive:"Void"}},{description:"Only members of the shared folder containing the linked file can access the link. Login is required.",parameter:"shared_folder_only",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},c2OK:function(e,t,i){var r=i("fVd2"),o=i("BKxz"),a=i("yqAG"),n=i("KAl/");e.exports=function(e,t,i){var s=t+"";return a(e,o(s,n(r(s),i)))}},c4bn:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("T6We"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},c6iq:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("1+Sa"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},c8er:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("rs+a"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},cSJ8:function(e,t,i){"use strict";function r(e,t){return void 0===t&&(t=""),t?e===t?"/":e.startsWith(t+"/")?e.slice(t.length):e:e}i.d(t,"a",(function(){return r}))},cTHi:function(e,t,i){var r=i("zXe4");e.exports=function(e){if("string"==typeof e||r(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},cWYs:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{GroupAccessType:{description:"Role of a user in group.",fields:[{description:"User is a member of the group, but has no special permissions.",parameter:"member",type:{primitive:"Void"}},{description:"User can rename the group, and add/remove members.",parameter:"owner",type:{primitive:"Void"}}],stone_type:"union"},GroupFullInfo:{description:"Full description of a group.",fields:[{parameter:"group_name",type:{primitive:"String"}},{parameter:"group_id",type:{primitive:"String"}},{description:"Who is allowed to manage the group.",parameter:"group_management_type",type:{datatype:"GroupManagementType",namespace:"team_common"}},{description:"The group creation time as a UTC timestamp in milliseconds since the Unix epoch.",parameter:"created",type:{primitive:"UInt64"}},{description:"External ID of group. This is an arbitrary ID that an admin can attach to a group.",parameter:"group_external_id",type:{optional:{primitive:"String"}}},{description:"The number of members in the group.",parameter:"member_count",type:{optional:{primitive:"UInt32"}}},{description:"List of group members.",parameter:"members",type:{optional:{list:{datatype:"GroupMemberInfo",namespace:"team"}}}}],stone_type:"struct"},GroupMemberInfo:{description:"Profile of group member, and role in group.",fields:[{description:"Profile of group member.",parameter:"profile",type:{datatype:"MemberProfile",namespace:"team"}},{description:"The role that the user has in the group.",parameter:"access_type",type:{datatype:"GroupAccessType",namespace:"team"}}],stone_type:"struct"},GroupMembersChangeResult:{description:"Result returned by :route:`groups/members/add` and :route:`groups/members/remove`.",fields:[{description:"The group info after member change operation has been performed.",parameter:"group_info",type:{datatype:"GroupFullInfo",namespace:"team"}},{description:"For legacy purposes async_job_id will always return one space ' '. Formerly, it was an ID that was used to obtain the status of granting/revoking group-owned resources. It's no longer necessary because the async processing now happens automatically.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},GroupMembersRemoveArg:{fields:[{description:"Group from which users will be removed.",parameter:"group",type:{datatype:"GroupSelector",namespace:"team"}},{description:"List of users to be removed from the group.",parameter:"users",type:{list:{datatype:"UserSelectorArg",namespace:"team"}}},{description:"Whether to return the list of members in the group.  Note that the default value will cause all the group members  to be returned in the response. This may take a long time for large groups.",parameter:"return_members",type:{primitive:"Boolean"}}],stone_type:"struct"},GroupMembersRemoveError:{fields:[{description:"No matching group found. No groups match the specified group ID.",parameter:"group_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"This operation is not supported on system-managed groups.",parameter:"system_managed_group_disallowed",type:{primitive:"Void"}},{description:"At least one of the specified users is not a member of the group.",parameter:"member_not_in_group",type:{primitive:"Void"}},{description:"Group is not in this team. You cannot remove members from a group that is outside of your team.",parameter:"group_not_in_team",type:{primitive:"Void"}},{description:"These members are not part of your team.",parameter:"members_not_in_team",type:{list:{primitive:"String"}}},{description:"These users were not found in Dropbox.",parameter:"users_not_found",type:{list:{primitive:"String"}}}],stone_type:"open_union"},GroupSelector:{description:"Argument for selecting a single group, either by group_id or by external group ID.",fields:[{description:"Group ID.",parameter:"group_id",type:{primitive:"String"}},{description:"External ID of the group.",parameter:"group_external_id",type:{primitive:"String"}}],stone_type:"union"},MemberProfile:{description:"Basic member profile.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}},team_common:{GroupManagementType:{description:"The group type determines how a group is managed.",fields:[{description:"A group which is managed by selected users.",parameter:"user_managed",type:{primitive:"Void"}},{description:"A group which is managed by team admins only.",parameter:"company_managed",type:{primitive:"Void"}},{description:"A group which is managed automatically by Dropbox.",parameter:"system_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},"ceQ/":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("eO44"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},ckUF:function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},cm7J:function(e,t,i){var r=i("dIZa");e.exports=function(e,t){for(var i=e.length;i--;)if(r(e[i][0],t))return i;return-1}},co44:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("T3O9"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},cpHC:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("VLNq"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},cpOc:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("fRod"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},cud3:function(e,t){e.exports=function(e,t){for(var i=-1,r=e.length,o=0,a=[];++i<r;){var n=e[i];n!==t&&"__lodash_placeholder__"!==n||(e[i]="__lodash_placeholder__",a[o++]=i)}return a}},cvVt:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{AdminTier:{description:"Describes which team-related admin permissions a user has.",fields:[{description:"User is an administrator of the team - has all permissions.",parameter:"team_admin",type:{primitive:"Void"}},{description:"User can do most user provisioning, de-provisioning and management.",parameter:"user_management_admin",type:{primitive:"Void"}},{description:"User can do a limited set of common support tasks for existing users.",parameter:"support_admin",type:{primitive:"Void"}},{description:"User is not an admin of the team.",parameter:"member_only",type:{primitive:"Void"}}],stone_type:"union"},MembersDeleteProfilePhotoArg:{fields:[{description:"Identity of the user whose profile photo will be deleted.",parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}}],stone_type:"struct"},MembersDeleteProfilePhotoError:{fields:[{description:"No matching user found. The provided team_member_id, email, or external_id does not exist on this team.",parameter:"user_not_found",type:{primitive:"Void"}},{description:"The user is not a member of the team.",parameter:"user_not_in_team",type:{primitive:"Void"}},{description:"Modifying deleted users is not allowed.",parameter:"set_profile_disallowed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberInfo:{description:"Information about a team member.",fields:[{description:"Profile of a user as a member of a team.",parameter:"profile",type:{datatype:"TeamMemberProfile",namespace:"team"}},{description:"The user's role in the team.",parameter:"role",type:{datatype:"AdminTier",namespace:"team"}}],stone_type:"struct"},TeamMemberProfile:{description:"Profile of a user as a member of a team.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"List of group IDs of groups that the user belongs to.",parameter:"groups",type:{list:{primitive:"String"}}},{description:"The namespace id of the user's root folder.",parameter:"member_folder_id",type:{primitive:"String"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},czn3:function(e,t,i){"use strict";var r=i("vdEC"),o=i("63Ad");t.__esModule=!0,t.ScrollHandler=t.ScrollContext=void 0;var a=o(i("T1e2")),n=o(i("QKC2")),s=r(i("mXGw")),p=o(i("W0B4")),d=i("TRAi"),l=s.createContext(new d.SessionStorage);t.ScrollContext=l,l.displayName="GatsbyScrollContext";var m=function(e){function t(){for(var t,i=arguments.length,r=new Array(i),o=0;o<i;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this)._stateStorage=new d.SessionStorage,t.scrollListener=function(){var e=t.props.location.key;e&&t._stateStorage.save(t.props.location,e,window.scrollY)},t.windowScroll=function(e,i){t.shouldUpdateScroll(i,t.props)&&window.scrollTo(0,e)},t.scrollToHash=function(e,i){var r=document.getElementById(e.substring(1));r&&t.shouldUpdateScroll(i,t.props)&&r.scrollIntoView()},t.shouldUpdateScroll=function(e,i){var r=t.props.shouldUpdateScroll;return!r||r.call((0,a.default)(t),e,i)},t}(0,n.default)(t,e);var i=t.prototype;return i.componentDidMount=function(){var e;window.addEventListener("scroll",this.scrollListener);var t=this.props.location,i=t.key,r=t.hash;i&&(e=this._stateStorage.read(this.props.location,i)),e?this.windowScroll(e,void 0):r&&this.scrollToHash(decodeURI(r),void 0)},i.componentWillUnmount=function(){window.removeEventListener("scroll",this.scrollListener)},i.componentDidUpdate=function(e){var t,i=this.props.location,r=i.hash,o=i.key;o&&(t=this._stateStorage.read(this.props.location,o)),r&&0===t?this.scrollToHash(decodeURI(r),e):this.windowScroll(t,e)},i.render=function(){return s.createElement(l.Provider,{value:this._stateStorage},this.props.children)},t}(s.Component);t.ScrollHandler=m,m.propTypes={shouldUpdateScroll:p.default.func,children:p.default.element.isRequired,location:p.default.object.isRequired}},"d+2K":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("1d7n"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},d1lM:function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},d6Vr:function(e,t,i){var r=i("s3UK")["__core-js_shared__"];e.exports=r},dIZa:function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},dLFG:function(e,t,i){"use strict";t.a={sharing:{AccessInheritance:{description:"Information about the inheritance policy of a shared folder.",fields:[{description:"The shared folder inherits its members from the parent folder.",parameter:"inherit",type:{primitive:"Void"}},{description:"The shared folder does not inherit its members from the parent folder.",parameter:"no_inherit",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AclUpdatePolicy:{description:"Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.",fields:[{description:"Only the owner can update the ACL.",parameter:"owner",type:{primitive:"Void"}},{description:"Any editor can update the ACL. This may be further restricted to editors on the same team.",parameter:"editors",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AudienceExceptionContentInfo:{description:"Information about the content that has a link audience different than that of this folder.",fields:[{description:"The name of the content, which is either a file or a folder.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},AudienceExceptions:{description:"The total count and truncated list of information of content inside this folder that has a different audience than the link on this folder. This is only returned for folders.",fields:[{parameter:"count",type:{primitive:"UInt32"}},{description:"A truncated list of some of the content that is an exception. The length of this list could be smaller than the count since it is only a sample but will not be empty as long as count is not 0.",parameter:"exceptions",type:{list:{datatype:"AudienceExceptionContentInfo",namespace:"sharing"}}}],stone_type:"struct"},AudienceRestrictingSharedFolder:{description:"Information about the shared folder that prevents the link audience for this link from being more restrictive.",fields:[{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The name of the shared folder.",parameter:"name",type:{primitive:"String"}},{description:"The link audience of the shared folder.",parameter:"audience",type:{datatype:"LinkAudience",namespace:"sharing"}}],stone_type:"struct"},FolderAction:{description:"Actions that may be taken on shared folders.",fields:[{description:"Change folder options, such as who can be invited to join the folder.",parameter:"change_options",type:{primitive:"Void"}},{description:"Disable viewer information for this folder.",parameter:"disable_viewer_info",type:{primitive:"Void"}},{description:"Change or edit contents of the folder.",parameter:"edit_contents",type:{primitive:"Void"}},{description:"Enable viewer information on the folder.",parameter:"enable_viewer_info",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read and write permission.",parameter:"invite_editor",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission.",parameter:"invite_viewer",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission but no comment permissions.",parameter:"invite_viewer_no_comment",type:{primitive:"Void"}},{description:"Relinquish one's own membership in the folder.",parameter:"relinquish_membership",type:{primitive:"Void"}},{description:"Unmount the folder.",parameter:"unmount",type:{primitive:"Void"}},{description:"Stop sharing this folder.",parameter:"unshare",type:{primitive:"Void"}},{description:"Keep a copy of the contents upon leaving or being kicked from the folder.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Use create_link instead.",parameter:"share_link",type:{primitive:"Void"}},{description:"Create a shared link for folder.",parameter:"create_link",type:{primitive:"Void"}},{description:"Set whether the folder inherits permissions from its parent.",parameter:"set_access_inheritance",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FolderPermission:{description:"Whether the user is allowed to take the action on the shared folder.",fields:[{description:"The action that the user may wish to take on the folder.",parameter:"action",type:{datatype:"FolderAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed, or if no reason is available.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},FolderPolicy:{description:"A set of policies governing membership and privileges for a shared folder.",fields:[{description:"Who can add and remove members from this shared folder.",parameter:"acl_update_policy",type:{datatype:"AclUpdatePolicy",namespace:"sharing"}},{description:"Who links can be shared with.",parameter:"shared_link_policy",type:{datatype:"SharedLinkPolicy",namespace:"sharing"}},{description:"Who can be a member of this shared folder, as set on the folder itself. The effective policy may differ from this value if the team-wide policy is more restrictive. Present only if the folder is owned by a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can be a member of this shared folder, taking into account both the folder and the team-wide policy. This value may differ from that of member_policy if the team-wide policy is more restrictive than the folder policy. Present only if the folder is owned by a team.",parameter:"resolved_member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},InsufficientQuotaAmounts:{fields:[{description:"The amount of space needed to add the item (the size of the item).",parameter:"space_needed",type:{primitive:"UInt64"}},{description:"The amount of extra space needed to add the item.",parameter:"space_shortage",type:{primitive:"UInt64"}},{description:"The amount of space left in the user's Dropbox, less than space_needed.",parameter:"space_left",type:{primitive:"UInt64"}}],stone_type:"struct"},LinkAction:{description:"Actions that can be performed on a link.",fields:[{description:"Change the access level of the link.",parameter:"change_access_level",type:{primitive:"Void"}},{description:"Change the audience of the link.",parameter:"change_audience",type:{primitive:"Void"}},{description:"Remove the expiry date of the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Remove the password of the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Create or modify the expiry date of the link.",parameter:"set_expiry",type:{primitive:"Void"}},{description:"Create or modify the password of the link.",parameter:"set_password",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermission:{description:"Permissions for actions that can be performed on a link.",fields:[{parameter:"action",type:{datatype:"LinkAction",namespace:"sharing"}},{parameter:"allow",type:{primitive:"Boolean"}},{parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},MemberPolicy:{description:"Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.",fields:[{description:"Only a teammate can become a member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can become a member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MountFolderArg:{fields:[{description:"The ID of the shared folder to mount.",parameter:"shared_folder_id",type:{primitive:"String"}}],stone_type:"struct"},MountFolderError:{fields:[{parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{description:"Mounting would cause a shared folder to be inside another, which is disallowed.",parameter:"inside_shared_folder",type:{primitive:"Void"}},{description:"The current user does not have enough space to mount the shared folder.",parameter:"insufficient_quota",type:{datatype:"InsufficientQuotaAmounts",namespace:"sharing"}},{description:"The shared folder is already mounted.",parameter:"already_mounted",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"The shared folder is not mountable. One example where this can occur is when the shared folder belongs within a team folder in the user's Dropbox.",parameter:"not_mountable",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedContentLinkMetadata:{description:"Metadata of a shared link for a file or folder.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The URL of the link.",parameter:"url",type:{primitive:"String"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}},{description:"The content inside this folder with link audience different than this folder's. This is only returned when an endpoint that returns metadata for a single shared folder is called, e.g. /get_folder_metadata.",parameter:"audience_exceptions",type:{optional:{datatype:"AudienceExceptions",namespace:"sharing"}}}],stone_type:"struct"},SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderMetadata:{description:"The metadata which includes basic information about the shared folder.",fields:[{description:"The current user's access level for this shared folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Whether this folder is inside of a team folder.",parameter:"is_inside_team_folder",type:{primitive:"Boolean"}},{description:"Whether this folder is a :link:`team folder https://www.dropbox.com/en/help/986`.",parameter:"is_team_folder",type:{primitive:"Boolean"}},{description:"The name of the this shared folder.",parameter:"name",type:{primitive:"String"}},{description:"Policies governing this shared folder.",parameter:"policy",type:{datatype:"FolderPolicy",namespace:"sharing"}},{description:"URL for displaying a web preview of the shared folder.",parameter:"preview_url",type:{primitive:"String"}},{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"Timestamp indicating when the current user was invited to this shared folder.",parameter:"time_invited",type:{primitive:"Timestamp"}},{description:"The display names of the users that own the folder. If the folder is part of a team folder, the display names of the team admins are also included. Absent if the owner display names cannot be fetched.",parameter:"owner_display_names",type:{optional:{list:{primitive:"String"}}}},{description:"The team that owns the folder. This field is not present if the folder is not owned by a team.",parameter:"owner_team",type:{optional:{datatype:"Team",namespace:"users"}}},{description:"The ID of the parent shared folder. This field is present only if the folder is contained within another shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"The lower-cased full path of this shared folder. Absent for unmounted folders.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"Display name for the parent folder.",parameter:"parent_folder_name",type:{optional:{primitive:"String"}}},{description:"The metadata of the shared content link to this shared folder. Absent if there is no link on the folder. This is for an unreleased feature so it may not be returned yet.",parameter:"link_metadata",type:{optional:{datatype:"SharedContentLinkMetadata",namespace:"sharing"}}},{description:"Actions the current user may perform on the folder and its contents. The set of permissions corresponds to the FolderActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"FolderPermission",namespace:"sharing"}}}},{description:"Whether the folder inherits its members from its parent.",parameter:"access_inheritance",type:{datatype:"AccessInheritance",namespace:"sharing"}}],stone_type:"struct"},SharedLinkPolicy:{description:"Who can view shared links in this folder.",fields:[{description:"Links can be shared with anyone.",parameter:"anyone",type:{primitive:"Void"}},{description:"Links can be shared with anyone on the same team as the owner.",parameter:"team",type:{primitive:"Void"}},{description:"Links can only be shared among members of the shared folder.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ViewerInfoPolicy:{fields:[{description:"Viewer information is available on this file.",parameter:"enabled",type:{primitive:"Void"}},{description:"Viewer information is disabled on this file.",parameter:"disabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},dNKO:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("prnS"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},dYK0:function(e,t,i){e.exports=i("XHox")},dtdj:function(e,t,i){var r=i("d1lM"),o=i("BW49");e.exports=function(e,t){return null!=e&&o(e,t,r)}},"e+GP":function(e,t){function i(t){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?e.exports=i=function(e){return typeof e}:e.exports=i=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(t)}e.exports=i},e06f:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("V9LH"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},e1Ej:function(e,t,i){var r=i("RW/s");e.exports=function(){this.__data__=new r,this.size=0}},e46L:function(e,t){var i=Object.prototype.toString;e.exports=function(e){var t=typeof e;return"undefined"===t?"undefined":null===e?"null":!0===e||!1===e||e instanceof Boolean?"boolean":"string"===t||e instanceof String?"string":"number"===t||e instanceof Number?"number":"function"===t||e instanceof Function?void 0!==e.constructor.name&&"Generator"===e.constructor.name.slice(0,9)?"generatorfunction":"function":void 0!==Array.isArray&&Array.isArray(e)?"array":e instanceof RegExp?"regexp":e instanceof Date?"date":"[object RegExp]"===(t=i.call(e))?"regexp":"[object Date]"===t?"date":"[object Arguments]"===t?"arguments":"[object Error]"===t?"error":"[object Promise]"===t?"promise":function(e){return e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}(e)?"buffer":"[object Set]"===t?"set":"[object WeakSet]"===t?"weakset":"[object Map]"===t?"map":"[object WeakMap]"===t?"weakmap":"[object Symbol]"===t?"symbol":"[object Map Iterator]"===t?"mapiterator":"[object Set Iterator]"===t?"setiterator":"[object String Iterator]"===t?"stringiterator":"[object Array Iterator]"===t?"arrayiterator":"[object Int8Array]"===t?"int8array":"[object Uint8Array]"===t?"uint8array":"[object Uint8ClampedArray]"===t?"uint8clampedarray":"[object Int16Array]"===t?"int16array":"[object Uint16Array]"===t?"uint16array":"[object Int32Array]"===t?"int32array":"[object Uint32Array]"===t?"uint32array":"[object Float32Array]"===t?"float32array":"[object Float64Array]"===t?"float64array":"object"}},e4fr:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("tfRC"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},e766:function(e,t){e.exports=function(e,t){var i=-1,r=e.length;for(t||(t=Array(r));++i<r;)t[i]=e[i];return t}},eCyd:function(e,t,i){"use strict";t.a={team:{RevokeLinkedApiAppArg:{fields:[{description:"The application's unique id.",parameter:"app_id",type:{primitive:"String"}},{description:"The unique id of the member owning the device.",parameter:"team_member_id",type:{primitive:"String"}},{description:"This flag is not longer supported, the application dedicated folder (in case the application uses  one) will be kept.",parameter:"keep_app_folder",type:{primitive:"Boolean"}}],stone_type:"struct"},RevokeLinkedAppError:{description:"Error returned by :route:`linked_apps/revoke_linked_app`.",fields:[{description:"Application not found.",parameter:"app_not_found",type:{primitive:"Void"}},{description:"Member not found.",parameter:"member_not_found",type:{primitive:"Void"}},{description:"App folder removal is not supported.",parameter:"app_folder_removal_not_supported",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},eEf8:function(e,t,i){var r=i("yoW1"),o=i("EKeD"),a=o?function(e,t){return o.set(e,t),e}:r;e.exports=a},eO44:function(e,t,i){"use strict";t.a={file_properties:{LookUpPropertiesError:{fields:[{description:"No property group was found.",parameter:"property_group_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TemplateFilterBase:{fields:[{description:"Only templates with an ID in the supplied list will be returned (a subset of templates will be returned).",parameter:"filter_some",type:{list:{primitive:"String"}}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},files:{AlphaGetMetadataArg:{fields:[{description:"The path of a file or folder on Dropbox.",parameter:"path",type:{primitive:"String"}},{description:"If true, :field:`FileMetadata.media_info` is set for photo and video.",parameter:"include_media_info",type:{primitive:"Boolean"}},{description:"If true, :type:`DeletedMetadata` will be returned for deleted file or folder, otherwise :field:`LookupError.not_found` will be returned.",parameter:"include_deleted",type:{primitive:"Boolean"}},{description:"If true, the results will include a flag for each file indicating whether or not  that file has any explicit members.",parameter:"include_has_explicit_shared_members",type:{primitive:"Boolean"}},{description:"If set to a valid list of template IDs, :field:`FileMetadata.property_groups` is set if there exists property data associated with the file and each of the listed templates.",parameter:"include_property_groups",type:{optional:{datatype:"TemplateFilterBase",namespace:"file_properties"}}},{description:"If set to a valid list of template IDs, :field:`FileMetadata.property_groups` is set for files with custom properties.",parameter:"include_property_templates",type:{optional:{list:{primitive:"String"}}}}],stone_type:"struct"},AlphaGetMetadataError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{parameter:"properties_error",type:{datatype:"LookUpPropertiesError",namespace:"file_properties"}}],stone_type:"union"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0}}}},ecQY:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("XHVS"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},eciW:function(e,t,i){e.exports=i("eyzW")},edSL:function(e,t,i){var r=i("Exs5");e.exports=function(e,t,i){var o=null==e?void 0:r(e,t);return void 0===o?i:o}},eiPe:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("ymBw"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},emEt:function(e,t,i){"use strict";i.r(t),i.d(t,"PageResourceStatus",(function(){return V})),i.d(t,"BaseLoader",(function(){return D})),i.d(t,"ProdLoader",(function(){return E})),i.d(t,"setLoader",(function(){return L})),i.d(t,"publicLoader",(function(){return R}));var r=i("7L9N");function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,r=new Array(t);i<t;i++)r[i]=e[i];return r}function a(e){return function(e){if(Array.isArray(e))return o(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?o(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var n=function(e){if("undefined"==typeof document)return!1;var t=document.createElement("link");try{if(t.relList&&"function"==typeof t.relList.supports)return t.relList.supports(e)}catch(i){return!1}return!1}("prefetch")?function(e,t){return new Promise((function(i,r){if("undefined"!=typeof document){var o=document.createElement("link");o.setAttribute("rel","prefetch"),o.setAttribute("href",e),Object.keys(t).forEach((function(e){o.setAttribute(e,t[e])})),o.onload=i,o.onerror=r,(document.getElementsByTagName("head")[0]||document.getElementsByName("script")[0].parentNode).appendChild(o)}else r()}))}:function(e){return new Promise((function(t,i){var r=new XMLHttpRequest;r.open("GET",e,!0),r.onload=function(){200===r.status?t():i()},r.send(null)}))},s={},p=function(e,t){return new Promise((function(i){s[e]?i():n(e,t).then((function(){i(),s[e]=!0})).catch((function(){}))}))},d=i("5yr3"),l=i("ZkUl"),m=i("cSJ8"),c=function(e){return void 0===e?e:"/"===e?"/":"/"===e.charAt(e.length-1)?e.slice(0,-1):e};function h(e,t){var i;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(i=function(e,t){if(!e)return;if("string"==typeof e)return u(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);"Object"===i&&e.constructor&&(i=e.constructor.name);if("Map"===i||"Set"===i)return Array.from(e);if("Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return u(e,t)}(e))||t&&e&&"number"==typeof e.length){i&&(e=i);var r=0;return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(i=e[Symbol.iterator]()).next.bind(i)}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,r=new Array(t);i<t;i++)r[i]=e[i];return r}var f=new Map,y=[],v=function(e){var t=decodeURIComponent(e);return Object(m.a)(t,"").split("#")[0].split("?")[0]};function _(e){return e.startsWith("/")||e.startsWith("https://")||e.startsWith("http://")?e:new URL(e,window.location.href+(window.location.href.endsWith("/")?"":"/")).pathname}var g,b=function(e){for(var t,i=T(e),r=h(y);!(t=r()).done;){var o=t.value,a=o.matchPath,n=o.path;if(Object(l.match)(a,i))return c(n)}return null},w=function(e){var t=v(_(e));if(f.has(t))return f.get(t);var i=b(t);return i||(i=T(e)),f.set(t,i),i},T=function(e){var t=v(_(e));return"/index.html"===t&&(t="/"),t=c(t)},V={Error:"error",Success:"success"},k=function(e){return e&&e.default||e},S=function(e){var t;return"/page-data/"+("/"===e?"index":t=(t="/"===(t=e)[0]?t.slice(1):t).endsWith("/")?t.slice(0,-1):t)+"/page-data.json"},x=function(e,t){return void 0===t&&(t="GET"),new Promise((function(i,r){var o=new XMLHttpRequest;o.open(t,e,!0),o.onreadystatechange=function(){4==o.readyState&&i(o)},o.send(null)}))},A=function(e){var t=e.pagePath,i=e.retries,r=void 0===i?0:i,o=S(t);return x(o).then((function(i){var o=i.status,a=i.responseText;if(200===o)try{var n=JSON.parse(a);if(void 0===n.path)throw new Error("not a valid pageData response");return Object.assign(e,{status:V.Success,payload:n})}catch(s){}return 404===o||200===o?"/404.html"===t?Object.assign(e,{status:V.Error}):A(Object.assign(e,{pagePath:"/404.html",notFound:!0})):500===o?Object.assign(e,{status:V.Error}):r<3?A(Object.assign(e,{retries:r+1})):Object.assign(e,{status:V.Error})}))},P=function(e,t){void 0===t&&(t=null);var i={componentChunkName:e.componentChunkName,path:e.path,webpackCompilationHash:e.webpackCompilationHash,matchPath:e.matchPath};return{component:t,json:e.result,page:i}},D=function(){function e(e,t){this.pageDb=new Map,this.inFlightDb=new Map,this.pageDataDb=new Map,this.prefetchTriggered=new Set,this.prefetchCompleted=new Set,this.loadComponent=e,y=t}var t=e.prototype;return t.setApiRunner=function(e){this.apiRunner=e,this.prefetchDisabled=e("disableCorePrefetching").some((function(e){return e}))},t.loadPageDataJson=function(e){var t=this,i=w(e);return this.pageDataDb.has(i)?Promise.resolve(this.pageDataDb.get(i)):A({pagePath:i}).then((function(e){return t.pageDataDb.set(i,e),e}))},t.findMatchPath=function(e){return b(e)},t.loadPage=function(e){var t=this,i=w(e);if(this.pageDb.has(i)){var r=this.pageDb.get(i);return Promise.resolve(r.payload)}if(this.inFlightDb.has(i))return this.inFlightDb.get(i);var o=Promise.all([this.loadAppData(),this.loadPageDataJson(i)]).then((function(e){var r=e[1];if(r.status===V.Error)return{status:V.Error};var o=r.payload,a=o.componentChunkName;return t.loadComponent(a).then((function(a){var n,s={createdAt:new Date};return a?(s.status=V.Success,!0===r.notFound&&(s.notFound=!0),o=Object.assign(o,{webpackCompilationHash:e[0]?e[0].webpackCompilationHash:""}),n=P(o,a),s.payload=n,d.a.emit("onPostLoadPageResources",{page:n,pageResources:n})):s.status=V.Error,t.pageDb.set(i,s),n}))})).then((function(e){return t.inFlightDb.delete(i),e})).catch((function(e){throw t.inFlightDb.delete(i),e}));return this.inFlightDb.set(i,o),o},t.loadPageSync=function(e){var t=w(e);if(this.pageDb.has(t))return this.pageDb.get(t).payload},t.shouldPrefetch=function(e){return!!function(){if("connection"in navigator&&void 0!==navigator.connection){if((navigator.connection.effectiveType||"").includes("2g"))return!1;if(navigator.connection.saveData)return!1}return!0}()&&!this.pageDb.has(e)},t.prefetch=function(e){var t=this;if(!this.shouldPrefetch(e))return!1;if(this.prefetchTriggered.has(e)||(this.apiRunner("onPrefetchPathname",{pathname:e}),this.prefetchTriggered.add(e)),this.prefetchDisabled)return!1;var i=w(e);return this.doPrefetch(i).then((function(){t.prefetchCompleted.has(e)||(t.apiRunner("onPostPrefetchPathname",{pathname:e}),t.prefetchCompleted.add(e))})),!0},t.doPrefetch=function(e){throw new Error("doPrefetch not implemented")},t.hovering=function(e){this.loadPage(e)},t.getResourceURLsForPathname=function(e){var t=w(e),i=this.pageDataDb.get(t);if(i){var r=P(i.payload);return[].concat(a(I(r.page.componentChunkName)),[S(t)])}return null},t.isPageNotFound=function(e){var t=w(e),i=this.pageDb.get(t);return i&&!0===i.notFound},t.loadAppData=function(e){var t=this;return void 0===e&&(e=0),x("/page-data/app-data.json").then((function(i){var r,o=i.status,a=i.responseText;if(200!==o&&e<3)return t.loadAppData(e+1);if(200===o)try{var n=JSON.parse(a);if(void 0===n.webpackCompilationHash)throw new Error("not a valid app-data response");r=n}catch(s){}return r}))},e}(),I=function(e){return(window.___chunkMapping[e]||[]).map((function(e){return""+e}))},E=function(e){function t(t,i){return e.call(this,(function(e){return t.components[e]?t.components[e]().then(k).catch((function(){return null})):Promise.resolve()}),i)||this}Object(r.a)(t,e);var i=t.prototype;return i.doPrefetch=function(e){var t=this,i=S(e);return p(i,{crossOrigin:"anonymous",as:"fetch"}).then((function(){return t.loadPageDataJson(e)})).then((function(e){if(e.status!==V.Success)return Promise.resolve();var t=e.payload,i=t.componentChunkName,r=I(i);return Promise.all(r.map(p)).then((function(){return t}))}))},i.loadPageDataJson=function(t){return e.prototype.loadPageDataJson.call(this,t).then((function(e){return e.notFound?x(t,"HEAD").then((function(t){return 200===t.status?{status:V.Error}:e})):e}))},t}(D),L=function(e){g=e},R={getResourcesForPathname:function(e){return console.warn("Warning: getResourcesForPathname is deprecated. Use loadPage instead"),g.i.loadPage(e)},getResourcesForPathnameSync:function(e){return console.warn("Warning: getResourcesForPathnameSync is deprecated. Use loadPageSync instead"),g.i.loadPageSync(e)},enqueue:function(e){return g.prefetch(e)},getResourceURLsForPathname:function(e){return g.getResourceURLsForPathname(e)},loadPage:function(e){return g.loadPage(e)},loadPageSync:function(e){return g.loadPageSync(e)},prefetch:function(e){return g.prefetch(e)},isPageNotFound:function(e){return g.isPageNotFound(e)},hovering:function(e){return g.hovering(e)},loadAppData:function(){return g.loadAppData()}};t.default=R},ep92:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("myMw"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},evAt:function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},SaveUrlArg:{fields:[{description:"The path in Dropbox where the URL will be saved to.",parameter:"path",type:{primitive:"String"}},{description:"The URL to be saved.",parameter:"url",type:{primitive:"String"}}],stone_type:"struct"},SaveUrlError:{fields:[{parameter:"path",type:{datatype:"WriteError",namespace:"files"}},{description:"Failed downloading the given URL. The URL may be  password-protected and the password provided was incorrect,  or the link may be disabled.",parameter:"download_failed",type:{primitive:"Void"}},{description:"The given URL is invalid.",parameter:"invalid_url",type:{primitive:"Void"}},{description:"The file where the URL is saved to no longer exists.",parameter:"not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SaveUrlResult:{fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{description:"Metadata of the file where the URL is saved to.",parameter:"complete",type:{datatype:"FileMetadata",namespace:"files"}}],stone_type:"union"},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},ex8D:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("ScDg"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},exBb:function(e,t,i){var r=i("+dZb")("set",i("H034"));r.placeholder=i("IOY3"),e.exports=r},eyzW:function(e,t,i){var r=i("+dZb")("flow",i("nbiN"));r.placeholder=i("IOY3"),e.exports=r},"f/Xo":function(e,t){e.exports=function(e){return function(){return e}}},f6Co:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("oMB/"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},fRAL:function(e,t){e.exports=function(e,t,i){switch(i.length){case 0:return e.call(t);case 1:return e.call(t,i[0]);case 2:return e.call(t,i[0],i[1]);case 3:return e.call(t,i[0],i[1],i[2])}return e.apply(t,i)}},fRod:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{GroupAccessType:{description:"Role of a user in group.",fields:[{description:"User is a member of the group, but has no special permissions.",parameter:"member",type:{primitive:"Void"}},{description:"User can rename the group, and add/remove members.",parameter:"owner",type:{primitive:"Void"}}],stone_type:"union"},GroupFullInfo:{description:"Full description of a group.",fields:[{parameter:"group_name",type:{primitive:"String"}},{parameter:"group_id",type:{primitive:"String"}},{description:"Who is allowed to manage the group.",parameter:"group_management_type",type:{datatype:"GroupManagementType",namespace:"team_common"}},{description:"The group creation time as a UTC timestamp in milliseconds since the Unix epoch.",parameter:"created",type:{primitive:"UInt64"}},{description:"External ID of group. This is an arbitrary ID that an admin can attach to a group.",parameter:"group_external_id",type:{optional:{primitive:"String"}}},{description:"The number of members in the group.",parameter:"member_count",type:{optional:{primitive:"UInt32"}}},{description:"List of group members.",parameter:"members",type:{optional:{list:{datatype:"GroupMemberInfo",namespace:"team"}}}}],stone_type:"struct"},GroupMemberInfo:{description:"Profile of group member, and role in group.",fields:[{description:"Profile of group member.",parameter:"profile",type:{datatype:"MemberProfile",namespace:"team"}},{description:"The role that the user has in the group.",parameter:"access_type",type:{datatype:"GroupAccessType",namespace:"team"}}],stone_type:"struct"},GroupsGetInfoError:{fields:[{description:"The group is not on your team.",parameter:"group_not_on_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GroupsGetInfoItem:{fields:[{description:"An ID that was provided as a parameter to :route:`groups/get_info`, and did not match a corresponding group. The ID can be a group ID, or an external ID, depending on how the method was called.",parameter:"id_not_found",type:{primitive:"String"}},{description:"Info about a group.",parameter:"group_info",type:{datatype:"GroupFullInfo",namespace:"team"}}],stone_type:"union"},GroupsSelector:{description:"Argument for selecting a list of groups, either by group_ids, or external group IDs.",fields:[{description:"List of group IDs.",parameter:"group_ids",type:{list:{primitive:"String"}}},{description:"List of external IDs of groups.",parameter:"group_external_ids",type:{list:{primitive:"String"}}}],stone_type:"union"},MemberProfile:{description:"Basic member profile.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"}},team_common:{GroupManagementType:{description:"The group type determines how a group is managed.",fields:[{description:"A group which is managed by selected users.",parameter:"user_managed",type:{primitive:"Void"}},{description:"A group which is managed by team admins only.",parameter:"company_managed",type:{primitive:"Void"}},{description:"A group which is managed automatically by Dropbox.",parameter:"system_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},fS6M:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("qvKQ"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},fVd2:function(e,t){var i=/\{\n\/\* \[wrapped with (.+)\] \*/,r=/,? & /;e.exports=function(e){var t=e.match(i);return t?t[1].split(r):[]}},"fb/6":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("7D8o"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},fdVR:function(e,t,i){var r=i("NfLg");e.exports=function(e){return r(e)?void 0:e}},fdgO:function(e,t,i){"use strict";t.a={file_properties:{InvalidPropertyGroupError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{parameter:"path",type:{datatype:"LookupError",namespace:"file_properties"}},{description:"This folder cannot be tagged. Tagging folders is not supported for team-owned templates.",parameter:"unsupported_folder",type:{primitive:"Void"}},{description:"One or more of the supplied property field values is too large.",parameter:"property_field_too_large",type:{primitive:"Void"}},{description:"One or more of the supplied property fields does not conform to the template specifications.",parameter:"does_not_fit_template",type:{primitive:"Void"}},{description:"There are 2 or more property groups referring to the same templates in the input.",parameter:"duplicate_property_groups",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{parameter:"malformed_path",type:{primitive:"String"}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{CommitInfo:{fields:[{description:"Path in the user's Dropbox to save the file.",parameter:"path",type:{primitive:"String"}},{description:"Selects what to do if the file already exists.",parameter:"mode",type:{datatype:"WriteMode",namespace:"files"}},{description:"If there's a conflict, as determined by :field:`mode`, have the Dropbox server try to autorename the file to avoid conflict.",parameter:"autorename",type:{primitive:"Boolean"}},{description:"The value to store as the :field:`client_modified` timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified.",parameter:"client_modified",type:{optional:{primitive:"Timestamp"}}},{description:"Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If :val:`true`, this tells the clients that this modification shouldn't result in a user notification.",parameter:"mute",type:{primitive:"Boolean"}},{description:"List of custom properties to add to file.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:'Be more strict about how each :type:`WriteMode` detects conflict. For example, always return a conflict error when :field:`mode` = :field:`WriteMode.update` and the given "rev" doesn\'t match the existing file\'s "rev", even if the existing file has been deleted.',parameter:"strict_conflict",type:{primitive:"Boolean"}}],stone_type:"struct"},Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"},UploadSessionCursor:{fields:[{description:"The upload session ID (returned by :route:`upload_session/start`).",parameter:"session_id",type:{primitive:"String"}},{description:"The amount of data that has been uploaded so far. We use this to make sure upload data isn't lost or duplicated in the event of a network error.",parameter:"offset",type:{primitive:"UInt64"}}],stone_type:"struct"},UploadSessionFinishArg:{fields:[{description:"Contains the upload session ID and the offset.",parameter:"cursor",type:{datatype:"UploadSessionCursor",namespace:"files"}},{description:"Contains the path and other optional modifiers for the commit.",parameter:"commit",type:{datatype:"CommitInfo",namespace:"files"}}],stone_type:"struct"},UploadSessionFinishBatchArg:{fields:[{description:"Commit information for each file in the batch.",parameter:"entries",type:{list:{datatype:"UploadSessionFinishArg",namespace:"files"}}}],stone_type:"struct"},UploadSessionFinishBatchLaunch:{description:"Result returned by :route:`upload_session/finish_batch` that may either launch an asynchronous job or complete synchronously.",fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{parameter:"complete",type:{datatype:"UploadSessionFinishBatchResult",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UploadSessionFinishBatchResult:{fields:[{description:"Each entry in :field:`UploadSessionFinishBatchArg.entries` will appear at the same position inside :field:`UploadSessionFinishBatchResult.entries`.",parameter:"entries",type:{list:{datatype:"UploadSessionFinishBatchResultEntry",namespace:"files"}}}],stone_type:"struct"},UploadSessionFinishBatchResultEntry:{fields:[{parameter:"success",type:{datatype:"FileMetadata",namespace:"files"}},{parameter:"failure",type:{datatype:"UploadSessionFinishError",namespace:"files"}}],stone_type:"union"},UploadSessionFinishError:{fields:[{description:"The session arguments are incorrect; the value explains the reason.",parameter:"lookup_failed",type:{datatype:"UploadSessionLookupError",namespace:"files"}},{description:"Unable to save the uploaded contents to a file. Data has already been appended to the upload session. Please retry with empty data body and updated offset.",parameter:"path",type:{datatype:"WriteError",namespace:"files"}},{description:"The supplied property group is invalid. The file has uploaded without property groups.",parameter:"properties_error",type:{datatype:"InvalidPropertyGroupError",namespace:"file_properties"}},{description:"The batch request commits files into too many different shared folders. Please limit your batch request to files contained in a single shared folder.",parameter:"too_many_shared_folder_targets",type:{primitive:"Void"}},{description:"There are too many write operations happening in the user's Dropbox. You should retry uploading this file.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UploadSessionLookupError:{fields:[{description:"The upload session ID was not found or has expired. Upload sessions are valid for 48 hours.",parameter:"not_found",type:{primitive:"Void"}},{description:"The specified offset was incorrect. See the value for the correct offset. This error may occur when a previous request was received and processed successfully but the client did not receive the response, e.g. due to a network error.",parameter:"incorrect_offset",type:{datatype:"UploadSessionOffsetError",namespace:"files"}},{description:"You are attempting to append data to an upload session that has already been closed (i.e. committed).",parameter:"closed",type:{primitive:"Void"}},{description:"The session must be closed before calling upload_session/finish_batch.",parameter:"not_closed",type:{primitive:"Void"}},{description:"You can not append to the upload session because the size of a file should not reach the max file size limit (i.e. 350GB).",parameter:"too_large",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UploadSessionOffsetError:{fields:[{description:"The offset up to which data has been collected.",parameter:"correct_offset",type:{primitive:"UInt64"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteMode:{description:"Your intent when writing a file to some path. This is used to determine what constitutes a conflict and what the autorename strategy is.\nIn some situations, the conflict behavior is identical: (a) If the target path doesn't refer to anything, the file is always written; no conflict. (b) If the target path refers to a folder, it's always a conflict. (c) If the target path refers to a file with identical contents, nothing gets written; no conflict.\nThe conflict checking differs in the case where there's a file at the target path with contents different from the contents you're trying to write.",fields:[{description:'Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, "document.txt" might become "document (2).txt".',parameter:"add",type:{primitive:"Void"}},{description:"Always overwrite the existing file. The autorename strategy is the same as it is for :field:`add`.",parameter:"overwrite",type:{primitive:"Void"}},{description:'Overwrite if the given "rev" matches the existing file\'s "rev". The autorename strategy is to append the string "conflicted copy" to the file name. For example, "document.txt" might become "document (conflicted copy).txt" or "document (Panda\'s conflicted copy).txt".',parameter:"update",type:{primitive:"String"}}],stone_type:"union"}}}},"ffA+":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("W8I1"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},fjdK:function(e,t,i){var r=i("jcrF"),o=i("X3Hh"),a=i("iZmY"),n=i("PqlX"),s=i("T9Ud"),p=i("wXp5"),d=Object.prototype.hasOwnProperty;function l(e){if(s(e)&&!n(e)&&!(e instanceof r)){if(e instanceof o)return e;if(d.call(e,"__wrapped__"))return p(e)}return new o(e)}l.prototype=a.prototype,l.prototype.constructor=l,e.exports=l},fxeQ:function(e,t,i){var r=i("LSEb")(i("s3UK"),"WeakMap");e.exports=r},g2Th:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("dLFG"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},g6ei:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("jK4P"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"gB+X":function(e,t,i){"use strict";t.a={files:{LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},MoveIntoVaultError:{fields:[{description:"Moving shared folder into Vault is not allowed.",parameter:"is_shared_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationArg:{fields:[{description:"Path in the user's Dropbox to be copied or moved.",parameter:"from_path",type:{primitive:"String"}},{description:"Path in the user's Dropbox that is the destination.",parameter:"to_path",type:{primitive:"String"}},{description:"If true, :route:`copy` will copy contents in shared folder, otherwise :field:`RelocationError.cant_copy_shared_folder` will be returned if :field:`from_path` contains shared folder. This field is always true for :route:`move`.",parameter:"allow_shared_folder",type:{primitive:"Boolean"}},{description:"If there's a conflict, have the Dropbox server try to autorename the file to avoid the conflict.",parameter:"autorename",type:{primitive:"Boolean"}},{description:"Allow moves by owner even if it would result in an ownership transfer for the content being moved. This does not apply to copies.",parameter:"allow_ownership_transfer",type:{primitive:"Boolean"}}],stone_type:"struct"},RelocationError:{fields:[{parameter:"from_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"from_write",type:{datatype:"WriteError",namespace:"files"}},{parameter:"to",type:{datatype:"WriteError",namespace:"files"}},{description:"Shared folders can't be copied.",parameter:"cant_copy_shared_folder",type:{primitive:"Void"}},{description:"Your move operation would result in nested shared folders.  This is not allowed.",parameter:"cant_nest_shared_folder",type:{primitive:"Void"}},{description:"You cannot move a folder into itself.",parameter:"cant_move_folder_into_itself",type:{primitive:"Void"}},{description:"The operation would involve more than 10,000 files and folders.",parameter:"too_many_files",type:{primitive:"Void"}},{description:"There are duplicated/nested paths among :field:`RelocationArg.from_path` and :field:`RelocationArg.to_path`.",parameter:"duplicated_or_nested_paths",type:{primitive:"Void"}},{description:"Your move operation would result in an ownership transfer. You may reissue the request with the field :field:`RelocationArg.allow_ownership_transfer` to true.",parameter:"cant_transfer_ownership",type:{primitive:"Void"}},{description:"The current user does not have enough space to move or copy the files.",parameter:"insufficient_quota",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{description:"Can't move the shared folder to the given destination.",parameter:"cant_move_shared_folder",type:{primitive:"Void"}},{description:"Some content cannot be moved into Vault under certain circumstances, see detailed error.",parameter:"cant_move_into_vault",type:{datatype:"MoveIntoVaultError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RelocationResult:{fields:[{description:"Metadata of the relocated object.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},gKNW:function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},gOBv:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Fgie"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},gUEo:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("OBqb"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},gVT7:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("j9q9"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},gkJB:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("pVAj"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},gwRl:function(e,t){e.exports=function(e,t){for(var i=-1,r=t.length,o=e.length;++i<r;)e[o+i]=t[i];return e}},h0av:function(e,t,i){var r=i("6iN7"),o=i("Lalj"),a=i("SyCk");e.exports=function(e){return a(e)?r(e):o(e)}},h1Mq:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("beLC"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},hH31:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("bQGB"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},hJ7n:function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},ListRevisionsArg:{fields:[{description:"The path to the file you want to see the revisions of.",parameter:"path",type:{primitive:"String"}},{description:"Determines the behavior of the API in listing the revisions for a given file path or id.",parameter:"mode",type:{datatype:"ListRevisionsMode",namespace:"files"}},{description:"The maximum number of revision entries returned.",parameter:"limit",type:{primitive:"UInt64"}}],stone_type:"struct"},ListRevisionsError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListRevisionsMode:{fields:[{description:"Returns revisions with the same file path as identified by the latest file entry at the given file path or id.",parameter:"path",type:{primitive:"Void"}},{description:"Returns revisions with the same file id as identified by the latest file entry at the given file path or id.",parameter:"id",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListRevisionsResult:{fields:[{description:"If the file identified by the latest revision in the response is either deleted or moved.",parameter:"is_deleted",type:{primitive:"Boolean"}},{description:"The revisions for the file. Only revisions that are not deleted will show up here.",parameter:"entries",type:{list:{datatype:"FileMetadata",namespace:"files"}}},{description:"The time of deletion if the file was deleted.",parameter:"server_deleted",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"}}}},hRIO:function(e,t){e.exports={plugins:[]}},hfno:function(e,t,i){var r=i("s3UK");e.exports=function(){return r.Date.now()}},hgXp:function(e,t){e.exports={cap:!1,curry:!1,fixed:!1,immutable:!1,rearg:!1}},hh6e:function(e,t,i){"use strict";t.a={team:{ResendSecondaryEmailResult:{description:"Result of trying to resend verification email to a secondary email address. 'success' is the only value indicating that a verification email was successfully sent. The other values explain the type of error that occurred, and include the email for which the error occured.",fields:[{description:"A verification email was successfully sent to the secondary email address.",parameter:"success",type:{primitive:"String"}},{description:"This secondary email address is not pending for the user.",parameter:"not_pending",type:{primitive:"String"}},{description:"Too many emails are being sent to this email address. Please try again later.",parameter:"rate_limited",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ResendVerificationEmailArg:{fields:[{description:"List of users and secondary emails to resend verification emails to.",parameter:"emails_to_resend",type:{list:{datatype:"UserSecondaryEmailsArg",namespace:"team"}}}],stone_type:"struct"},ResendVerificationEmailResult:{description:"List of users and resend results.",fields:[{parameter:"results",type:{list:{datatype:"UserResendResult",namespace:"team"}}}],stone_type:"struct"},UserResendEmailsResult:{fields:[{parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"results",type:{list:{datatype:"ResendSecondaryEmailResult",namespace:"team"}}}],stone_type:"struct"},UserResendResult:{description:"Result of trying to resend verification emails to a user. 'success' is the only value indicating that a user was successfully retrieved for sending verification emails. The other values explain the type of error that occurred, and include the user for which the error occured.",fields:[{description:"Describes a user and the results for each attempt to resend verification emails.",parameter:"success",type:{datatype:"UserResendEmailsResult",namespace:"team"}},{description:"Specified user is not a valid target for resending verification emails.",parameter:"invalid_user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserSecondaryEmailsArg:{description:"User and a list of secondary emails.",fields:[{parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"secondary_emails",type:{list:{primitive:"String"}}}],stone_type:"struct"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},hngW:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Nh9T"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},hzhP:function(e,t,i){"use strict";t.a={async:{LaunchEmptyResult:{description:"Result returned by methods that may either launch an asynchronous job or complete synchronously. Upon synchronous completion of the job, no additional information is returned.",fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{description:"The job finished synchronously and successfully.",parameter:"complete",type:{primitive:"Void"}}],stone_type:"union"}},team:{MembersDataTransferArg:{fields:[{description:"Identity of user to remove/suspend/have their files moved.",parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{description:"Files from the deleted member account will be transferred to this user.",parameter:"transfer_dest_id",type:{datatype:"UserSelectorArg",namespace:"team"}},{description:"Errors during the transfer process will be sent via email to this user.",parameter:"transfer_admin_id",type:{datatype:"UserSelectorArg",namespace:"team"}}],stone_type:"struct"},MembersTransferFormerMembersFilesError:{fields:[{description:"No matching user found. The provided team_member_id, email, or external_id does not exist on this team.",parameter:"user_not_found",type:{primitive:"Void"}},{description:"The user is not a member of the team.",parameter:"user_not_in_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"Expected removed user and transfer_dest user to be different.",parameter:"removed_and_transfer_dest_should_differ",type:{primitive:"Void"}},{description:"Expected removed user and transfer_admin user to be different.",parameter:"removed_and_transfer_admin_should_differ",type:{primitive:"Void"}},{description:"No matching user found for the argument transfer_dest_id.",parameter:"transfer_dest_user_not_found",type:{primitive:"Void"}},{description:"The provided transfer_dest_id does not exist on this team.",parameter:"transfer_dest_user_not_in_team",type:{primitive:"Void"}},{description:"The provided transfer_admin_id does not exist on this team.",parameter:"transfer_admin_user_not_in_team",type:{primitive:"Void"}},{description:"No matching user found for the argument transfer_admin_id.",parameter:"transfer_admin_user_not_found",type:{primitive:"Void"}},{description:"The transfer_admin_id argument must be provided when file transfer is requested.",parameter:"unspecified_transfer_admin_id",type:{primitive:"Void"}},{description:"Specified transfer_admin user is not a team admin.",parameter:"transfer_admin_is_not_admin",type:{primitive:"Void"}},{description:"The recipient user's email is not verified.",parameter:"recipient_not_verified",type:{primitive:"Void"}},{description:"The user's data is being transferred. Please wait some time before retrying.",parameter:"user_data_is_being_transferred",type:{primitive:"Void"}},{description:"No matching removed user found for the argument user.",parameter:"user_not_removed",type:{primitive:"Void"}},{description:"User files aren't transferable anymore.",parameter:"user_data_cannot_be_transferred",type:{primitive:"Void"}},{description:"User's data has already been transferred to another user.",parameter:"user_data_already_transferred",type:{primitive:"Void"}}],stone_type:"open_union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},"i/JN":function(e,t,i){var r=i("GE03"),o=i("l3+0"),a=i("BAZ7"),n=i("+165"),s=i("pZIW"),p=i("OF9M");e.exports=function(e,t,i){var d=-1,l=o,m=e.length,c=!0,h=[],u=h;if(i)c=!1,l=a;else if(m>=200){var f=t?null:s(e);if(f)return p(f);c=!1,l=n,u=new r}else u=t?[]:h;e:for(;++d<m;){var y=e[d],v=t?t(y):y;if(y=i||0!==y?y:0,c&&v==v){for(var _=u.length;_--;)if(u[_]===v)continue e;t&&u.push(v),h.push(y)}else l(u,v,i)||(u!==h&&u.push(v),h.push(y))}return h}},i0JV:function(e,t,i){var r=i("FEiO"),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return r?void 0!==t[e]:o.call(t,e)}},i3Pe:function(e,t,i){var r=i("2xEH"),o=i("Qwyb"),a=i("cud3"),n=Math.min;e.exports=function(e,t){var i=e[1],s=t[1],p=i|s,d=p<131,l=128==s&&8==i||128==s&&256==i&&e[7].length<=t[8]||384==s&&t[7].length<=t[8]&&8==i;if(!d&&!l)return e;1&s&&(e[2]=t[2],p|=1&i?0:4);var m=t[3];if(m){var c=e[3];e[3]=c?r(c,m,t[4]):m,e[4]=c?a(e[3],"__lodash_placeholder__"):t[4]}return(m=t[5])&&(c=e[5],e[5]=c?o(c,m,t[6]):m,e[6]=c?a(e[5],"__lodash_placeholder__"):t[6]),(m=t[7])&&(e[7]=m),128&s&&(e[8]=null==e[8]?t[8]:n(e[8],t[8])),null==e[9]&&(e[9]=t[9]),e[0]=t[0],e[1]=p,e}},iDBp:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Egtg"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},iHmU:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("we8o"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},iMLE:function(e,t){e.exports=function(e){return function(t){return null==e?void 0:e[t]}}},iOq2:function(e,t){e.exports=function(){this.__data__=[],this.size=0}},iPAj:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("vmoe"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},iSGk:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("ClrY"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},iTBc:function(e,t,i){"use strict";t.a={account:{PhotoSourceArg:{fields:[{description:"Image data in base64-encoded bytes.",parameter:"base64_data",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SetProfilePhotoError:{fields:[{description:"File cannot be set as profile photo.",parameter:"file_type_error",type:{primitive:"Void"}},{description:"File cannot exceed 10 MB.",parameter:"file_size_error",type:{primitive:"Void"}},{description:"Image must be larger than 128 x 128.",parameter:"dimension_error",type:{primitive:"Void"}},{description:"Image could not be thumbnailed.",parameter:"thumbnail_error",type:{primitive:"Void"}},{description:"Temporary infrastructure failure, please retry.",parameter:"transient_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{AdminTier:{description:"Describes which team-related admin permissions a user has.",fields:[{description:"User is an administrator of the team - has all permissions.",parameter:"team_admin",type:{primitive:"Void"}},{description:"User can do most user provisioning, de-provisioning and management.",parameter:"user_management_admin",type:{primitive:"Void"}},{description:"User can do a limited set of common support tasks for existing users.",parameter:"support_admin",type:{primitive:"Void"}},{description:"User is not an admin of the team.",parameter:"member_only",type:{primitive:"Void"}}],stone_type:"union"},MembersSetProfilePhotoArg:{fields:[{description:"Identity of the user whose profile photo will be set.",parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{description:"Image to set as the member's new profile photo.",parameter:"photo",type:{datatype:"PhotoSourceArg",namespace:"account"}}],stone_type:"struct"},MembersSetProfilePhotoError:{fields:[{description:"No matching user found. The provided team_member_id, email, or external_id does not exist on this team.",parameter:"user_not_found",type:{primitive:"Void"}},{description:"The user is not a member of the team.",parameter:"user_not_in_team",type:{primitive:"Void"}},{description:"Modifying deleted users is not allowed.",parameter:"set_profile_disallowed",type:{primitive:"Void"}},{parameter:"photo_error",type:{datatype:"SetProfilePhotoError",namespace:"account"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberInfo:{description:"Information about a team member.",fields:[{description:"Profile of a user as a member of a team.",parameter:"profile",type:{datatype:"TeamMemberProfile",namespace:"team"}},{description:"The user's role in the team.",parameter:"role",type:{datatype:"AdminTier",namespace:"team"}}],stone_type:"struct"},TeamMemberProfile:{description:"Profile of a user as a member of a team.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"List of group IDs of groups that the user belongs to.",parameter:"groups",type:{list:{primitive:"String"}}},{description:"The namespace id of the user's root folder.",parameter:"member_folder_id",type:{primitive:"String"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},iXK7:function(e,t,i){var r=i("naAV"),o=i("5+lF"),a=i("7qnD"),n=i("G9gt"),s=i("vvBr");e.exports=function(e,t,i){var p=e.constructor;switch(t){case"[object ArrayBuffer]":return r(e);case"[object Boolean]":case"[object Date]":return new p(+e);case"[object DataView]":return o(e,i);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return s(e,i);case"[object Map]":return new p;case"[object Number]":case"[object String]":return new p(e);case"[object RegExp]":return a(e);case"[object Set]":return new p;case"[object Symbol]":return n(e)}}},iZmY:function(e,t){e.exports=function(){}},ii79:function(e,t,i){var r=i("NmMy"),o=i("e766"),a=i("PqlX"),n=i("zXe4"),s=i("ULAX"),p=i("cTHi"),d=i("zYYD");e.exports=function(e){return a(e)?r(e,p):n(e)?[e]:o(s(d(e)))}},iiyG:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("1Vew"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},j0HF:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("wqhB"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},j0i9:function(e,t,i){"use strict";t.a={sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FileMemberActionError:{fields:[{description:"Specified member was not found.",parameter:"invalid_member",type:{primitive:"Void"}},{description:"User does not have permission to perform this action on this member.",parameter:"no_permission",type:{primitive:"Void"}},{description:"Specified file was invalid or user does not have access.",parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{description:"The action cannot be completed because the target member does not have explicit access to the file. The return value is the access that the member has to the file from a parent folder.",parameter:"no_explicit_access",type:{datatype:"MemberAccessLevelResult",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberAccessLevelResult:{description:"Contains information about a member's access level to content after an operation.",fields:[{description:"The member still has this level of access to the content through a parent folder.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"A localized string with additional information about why the user has this access level to the content.",parameter:"warning",type:{optional:{primitive:"String"}}},{description:"The parent folders that a member has access to. The field is present if the user has access to the first parent folder where the member gains access.",parameter:"access_details",type:{optional:{list:{datatype:"ParentFolderAccessInfo",namespace:"sharing"}}}}],stone_type:"struct"},MemberAction:{description:"Actions that may be taken on members of a shared folder.",fields:[{description:"Allow the member to keep a copy of the folder when removing.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Make the member an editor of the folder.",parameter:"make_editor",type:{primitive:"Void"}},{description:"Make the member an owner of the folder.",parameter:"make_owner",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder.",parameter:"make_viewer",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder without commenting permissions.",parameter:"make_viewer_no_comment",type:{primitive:"Void"}},{description:"Remove the member from the folder.",parameter:"remove",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberPermission:{description:"Whether the user is allowed to take the action on the associated member.",fields:[{description:"The action that the user may wish to take on the member.",parameter:"action",type:{datatype:"MemberAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},MemberSelector:{description:"Includes different ways to identify a member of a shared folder.",fields:[{description:"Dropbox account, team member, or group ID of member.",parameter:"dropbox_id",type:{primitive:"String"}},{description:"E-mail address of member.",parameter:"email",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ParentFolderAccessInfo:{description:"Contains information about a parent folder that a member has access to.",fields:[{description:"Display name for the folder.",parameter:"folder_name",type:{primitive:"String"}},{description:"The identifier of the parent shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The user's permissions for the parent shared folder.",parameter:"permissions",type:{list:{datatype:"MemberPermission",namespace:"sharing"}}},{description:"The full path to the parent shared folder relative to the acting user's root.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingFileAccessError:{description:"User could not access this file.",fields:[{description:"Current user does not have sufficient privileges to perform the desired action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"File specified was not found.",parameter:"invalid_file",type:{primitive:"Void"}},{description:"A folder can't be shared this way. Use folder sharing or a shared link instead.",parameter:"is_folder",type:{primitive:"Void"}},{description:"A file inside a public folder can't be shared this way. Use a public link instead.",parameter:"inside_public_folder",type:{primitive:"Void"}},{description:"A Mac OS X package can't be shared this way. Use a shared link instead.",parameter:"inside_osx_package",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UpdateFileMemberArgs:{description:"Arguments for :route:`update_file_member`.",fields:[{description:"File for which we are changing a member's access.",parameter:"file",type:{primitive:"String"}},{description:"The member whose access we are changing.",parameter:"member",type:{datatype:"MemberSelector",namespace:"sharing"}},{description:"The new access level for the member.",parameter:"access_level",type:{datatype:"AccessLevel",namespace:"sharing"}}],stone_type:"struct"}}}},j6ZD:function(e,t,i){var r=i("9aUh"),o=i("zXe4"),a=/^\s+|\s+$/g,n=/^[-+]0x[0-9a-f]+$/i,s=/^0b[01]+$/i,p=/^0o[0-7]+$/i,d=parseInt;e.exports=function(e){if("number"==typeof e)return e;if(o(e))return NaN;if(r(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=r(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(a,"");var i=s.test(e);return i||p.test(e)?d(e.slice(2),i?2:8):n.test(e)?NaN:+e}},j9q9:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{GroupAccessType:{description:"Role of a user in group.",fields:[{description:"User is a member of the group, but has no special permissions.",parameter:"member",type:{primitive:"Void"}},{description:"User can rename the group, and add/remove members.",parameter:"owner",type:{primitive:"Void"}}],stone_type:"union"},GroupFullInfo:{description:"Full description of a group.",fields:[{parameter:"group_name",type:{primitive:"String"}},{parameter:"group_id",type:{primitive:"String"}},{description:"Who is allowed to manage the group.",parameter:"group_management_type",type:{datatype:"GroupManagementType",namespace:"team_common"}},{description:"The group creation time as a UTC timestamp in milliseconds since the Unix epoch.",parameter:"created",type:{primitive:"UInt64"}},{description:"External ID of group. This is an arbitrary ID that an admin can attach to a group.",parameter:"group_external_id",type:{optional:{primitive:"String"}}},{description:"The number of members in the group.",parameter:"member_count",type:{optional:{primitive:"UInt32"}}},{description:"List of group members.",parameter:"members",type:{optional:{list:{datatype:"GroupMemberInfo",namespace:"team"}}}}],stone_type:"struct"},GroupMemberInfo:{description:"Profile of group member, and role in group.",fields:[{description:"Profile of group member.",parameter:"profile",type:{datatype:"MemberProfile",namespace:"team"}},{description:"The role that the user has in the group.",parameter:"access_type",type:{datatype:"GroupAccessType",namespace:"team"}}],stone_type:"struct"},GroupMemberSetAccessTypeError:{fields:[{description:"No matching group found. No groups match the specified group ID.",parameter:"group_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"This operation is not supported on system-managed groups.",parameter:"system_managed_group_disallowed",type:{primitive:"Void"}},{description:"The specified user is not a member of this group.",parameter:"member_not_in_group",type:{primitive:"Void"}},{description:"A company managed group cannot be managed by a user.",parameter:"user_cannot_be_manager_of_company_managed_group",type:{primitive:"Void"}}],stone_type:"open_union"},GroupMembersSetAccessTypeArg:{fields:[{description:"Specify a group.",parameter:"group",type:{datatype:"GroupSelector",namespace:"team"}},{description:"Identity of a user that is a member of :field:`group`.",parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{description:"New group access type the user will have.",parameter:"access_type",type:{datatype:"GroupAccessType",namespace:"team"}},{description:"Whether to return the list of members in the group.  Note that the default value will cause all the group members  to be returned in the response. This may take a long time for large groups.",parameter:"return_members",type:{primitive:"Boolean"}}],stone_type:"struct"},GroupSelector:{description:"Argument for selecting a single group, either by group_id or by external group ID.",fields:[{description:"Group ID.",parameter:"group_id",type:{primitive:"String"}},{description:"External ID of the group.",parameter:"group_external_id",type:{primitive:"String"}}],stone_type:"union"},GroupsGetInfoItem:{fields:[{description:"An ID that was provided as a parameter to :route:`groups/get_info`, and did not match a corresponding group. The ID can be a group ID, or an external ID, depending on how the method was called.",parameter:"id_not_found",type:{primitive:"String"}},{description:"Info about a group.",parameter:"group_info",type:{datatype:"GroupFullInfo",namespace:"team"}}],stone_type:"union"},MemberProfile:{description:"Basic member profile.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}},team_common:{GroupManagementType:{description:"The group type determines how a group is managed.",fields:[{description:"A group which is managed by selected users.",parameter:"user_managed",type:{primitive:"Void"}},{description:"A group which is managed by team admins only.",parameter:"company_managed",type:{primitive:"Void"}},{description:"A group which is managed automatically by Dropbox.",parameter:"system_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},jJDV:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("F61Y"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},jK4P:function(e,t,i){"use strict";t.a={files:{HighlightSpan:{fields:[{description:"String to be determined whether it should be highlighted or not.",parameter:"highlight_str",type:{primitive:"String"}},{description:"The string should be highlighted or not.",parameter:"is_highlighted",type:{primitive:"Boolean"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},MetadataV2:{description:"Metadata for a file, folder or other resource types.",fields:[{parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SearchError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{parameter:"invalid_argument",type:{optional:{primitive:"String"}}},{description:"Something went wrong, please try again.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SearchMatchV2:{fields:[{description:"The metadata for the matched file or folder.",parameter:"metadata",type:{datatype:"MetadataV2",namespace:"files"}},{description:"The list of HighlightSpan determines which parts of the file title should be highlighted.",parameter:"highlight_spans",type:{optional:{list:{datatype:"HighlightSpan",namespace:"files"}}}}],stone_type:"struct"},SearchV2ContinueArg:{fields:[{description:"The cursor returned by your last call to :route:`search:2`. Used to fetch the next page of results.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},SearchV2Result:{fields:[{description:"A list (possibly empty) of matches for the query.",parameter:"matches",type:{list:{datatype:"SearchMatchV2",namespace:"files"}}},{description:"Used for paging. If true, indicates there is another page of results available that can be fetched by calling :route:`search/continue:2` with the cursor.",parameter:"has_more",type:{primitive:"Boolean"}},{description:"Pass the cursor into :route:`search/continue:2` to fetch the next page of results.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"}}}},jL4t:function(e,t){var i=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||i)}},jVva:function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GetTemporaryLinkArg:{fields:[{description:"The path to the file you want a temporary link to.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},GetTemporaryLinkError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{description:"The user's email address needs to be verified to use this functionality.",parameter:"email_not_verified",type:{primitive:"Void"}},{description:"Cannot get temporary link to this file type; use :route:`export` instead.",parameter:"unsupported_file",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GetTemporaryLinkResult:{fields:[{description:"Metadata of the file.",parameter:"metadata",type:{datatype:"FileMetadata",namespace:"files"}},{description:"The temporary link which can be used to stream content the file.",parameter:"link",type:{primitive:"String"}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"}}}},jcrF:function(e,t,i){var r=i("QDPn"),o=i("iZmY");function a(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}a.prototype=r(o.prototype),a.prototype.constructor=a,e.exports=a},jf2V:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("wDX8"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},jgFi:function(e,t,i){"use strict";t.a={sharing:{GetSharedLinkFileError:{fields:[{description:"The shared link wasn't found.",parameter:"shared_link_not_found",type:{primitive:"Void"}},{description:"The caller is not allowed to access this shared link.",parameter:"shared_link_access_denied",type:{primitive:"Void"}},{description:"This type of link is not supported; use :route:`files.export` instead.",parameter:"unsupported_link_type",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"Directories cannot be retrieved by this endpoint.",parameter:"shared_link_is_directory",type:{primitive:"Void"}}],stone_type:"open_union"},GetSharedLinkMetadataArg:{fields:[{description:"URL of the shared link.",parameter:"url",type:{primitive:"String"}},{description:"If the shared link is to a folder, this parameter can be used to retrieve the metadata for a specific file or sub-folder in this folder. A relative path should be used.",parameter:"path",type:{optional:{primitive:"String"}}},{description:"If the shared link has a password, this parameter can be used.",parameter:"link_password",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAccessLevel:{fields:[{description:"Users who use the link can view and comment on the content.",parameter:"viewer",type:{primitive:"Void"}},{description:"Users who use the link can edit, view and comment on the content.",parameter:"editor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermissions:{fields:[{description:"Whether the caller can revoke the shared link.",parameter:"can_revoke",type:{primitive:"Boolean"}},{description:"The current visibility of the link after considering the shared links policies of the the team (in case the link's owner is part of a team) and the shared folder (in case the linked file is part of a shared folder). This field is shown only if the caller has access to this info (the link's owner always has access to this data). For some links, an effective_audience value is returned instead.",parameter:"resolved_visibility",type:{optional:{datatype:"ResolvedVisibility",namespace:"sharing"}}},{description:"The shared link's requested visibility. This can be overridden by the team and shared folder policies. The final visibility, after considering these policies, can be found in :field:`resolved_visibility`. This is shown only if the caller is the link's owner and resolved_visibility is returned instead of effective_audience.",parameter:"requested_visibility",type:{optional:{datatype:"RequestedVisibility",namespace:"sharing"}}},{description:"The failure reason for revoking the link. This field will only be present if the :field:`can_revoke` is :val:`false`.",parameter:"revoke_failure_reason",type:{optional:{datatype:"SharedLinkAccessFailureReason",namespace:"sharing"}}},{description:"The type of audience who can benefit from the access level specified by the `link_access_level` field.",parameter:"effective_audience",type:{optional:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The access level that the link will grant to its users. A link can grant additional rights to a user beyond their current access level. For example, if a user was invited as a viewer to a file, and then opens a link with `link_access_level` set to `editor`, then they will gain editor privileges. The `link_access_level` is a property of the link, and does not depend on who is calling this API. In particular, `link_access_level` does not take into account the API caller's current permissions to the content.",parameter:"link_access_level",type:{optional:{datatype:"LinkAccessLevel",namespace:"sharing"}}}],stone_type:"struct"},RequestedVisibility:{description:"The access permission that can be requested by the caller for the shared link. Note that the final resolved visibility of the shared link takes into account other aspects, such as team and shared folder settings. Check the :type:`ResolvedVisibility` for more info on the possible resolved visibility values of shared links.",fields:[{description:"Anyone who has received the link can access it. No login required.",parameter:"public",type:{primitive:"Void"}},{description:"Only members of the same team can access the link. Login is required.",parameter:"team_only",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}}],stone_type:"union"},ResolvedVisibility:{description:"The actual access permissions values of shared links after taking into account user preferences and the team and shared folder settings. Check the :type:`RequestedVisibility` for more info on the possible visibility values that can be set by the shared link's owner.",fields:[{description:"Anyone who has received the link can access it. No login required.",parameter:"public",type:{primitive:"Void"}},{description:"Only members of the same team can access the link. Login is required.",parameter:"team_only",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Only members of the same team who have the link-specific password can access the link. Login is required.",parameter:"team_and_password",type:{primitive:"Void"}},{description:"Only members of the shared folder containing the linked file can access the link. Login is required.",parameter:"shared_folder_only",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLinkAccessFailureReason:{fields:[{description:"User is not logged in.",parameter:"login_required",type:{primitive:"Void"}},{description:"User's email is not verified.",parameter:"email_verify_required",type:{primitive:"Void"}},{description:"The link is password protected.",parameter:"password_required",type:{primitive:"Void"}},{description:"Access is allowed for team members only.",parameter:"team_only",type:{primitive:"Void"}},{description:"Access is allowed for the shared link's owner only.",parameter:"owner_only",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLinkMetadata:{description:"The metadata of a shared link.",fields:[{description:"URL of the shared link.",parameter:"url",type:{primitive:"String"}},{description:"The linked file name (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The link's access permissions.",parameter:"link_permissions",type:{datatype:"LinkPermissions",namespace:"sharing"}},{description:"A unique identifier for the linked file.",parameter:"id",type:{optional:{primitive:"String"}}},{description:"Expiration time, if set. By default the link won't expire.",parameter:"expires",type:{optional:{primitive:"Timestamp"}}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will only be present only if the linked file is in the authenticated user's  dropbox.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The team membership information of the link's owner.  This field will only be present  if the link's owner is a team member.",parameter:"team_member_info",type:{optional:{datatype:"TeamMemberInfo",namespace:"sharing"}}},{description:"The team information of the content's owner. This field will only be present if the content's owner is a team member and the content's owner team is different from the link's owner team.",parameter:"content_owner_team_info",type:{optional:{datatype:"Team",namespace:"users"}}}],stone_type:"struct",todo:!0},TeamMemberInfo:{description:"Information about a team member.",fields:[{description:"Information about the member's team.",parameter:"team_info",type:{datatype:"Team",namespace:"users"}},{description:"The display name of the user.",parameter:"display_name",type:{primitive:"String"}},{description:"ID of user as a member of a team. This field will only be present if the member is in the same team as current user.",parameter:"member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},jgJv:function(e,t,i){var r=i("s3UK").Symbol;e.exports=r},ji6j:function(e,t,i){var r=i("2AbI"),o=Object.prototype.hasOwnProperty;e.exports=function(e,t,i,a,n,s){var p=1&i,d=r(e),l=d.length;if(l!=r(t).length&&!p)return!1;for(var m=l;m--;){var c=d[m];if(!(p?c in t:o.call(t,c)))return!1}var h=s.get(e);if(h&&s.get(t))return h==t;var u=!0;s.set(e,t),s.set(t,e);for(var f=p;++m<l;){var y=e[c=d[m]],v=t[c];if(a)var _=p?a(v,y,c,t,e,s):a(y,v,c,e,t,s);if(!(void 0===_?y===v||n(y,v,i,a,s):_)){u=!1;break}f||(f="constructor"==c)}if(u&&!f){var g=e.constructor,b=t.constructor;g==b||!("constructor"in e)||!("constructor"in t)||"function"==typeof g&&g instanceof g&&"function"==typeof b&&b instanceof b||(u=!1)}return s.delete(e),s.delete(t),u}},jo0q:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("5sbH"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},jupw:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("YjYz"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},jvgW:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{GroupAccessType:{description:"Role of a user in group.",fields:[{description:"User is a member of the group, but has no special permissions.",parameter:"member",type:{primitive:"Void"}},{description:"User can rename the group, and add/remove members.",parameter:"owner",type:{primitive:"Void"}}],stone_type:"union"},GroupFullInfo:{description:"Full description of a group.",fields:[{parameter:"group_name",type:{primitive:"String"}},{parameter:"group_id",type:{primitive:"String"}},{description:"Who is allowed to manage the group.",parameter:"group_management_type",type:{datatype:"GroupManagementType",namespace:"team_common"}},{description:"The group creation time as a UTC timestamp in milliseconds since the Unix epoch.",parameter:"created",type:{primitive:"UInt64"}},{description:"External ID of group. This is an arbitrary ID that an admin can attach to a group.",parameter:"group_external_id",type:{optional:{primitive:"String"}}},{description:"The number of members in the group.",parameter:"member_count",type:{optional:{primitive:"UInt32"}}},{description:"List of group members.",parameter:"members",type:{optional:{list:{datatype:"GroupMemberInfo",namespace:"team"}}}}],stone_type:"struct"},GroupMemberInfo:{description:"Profile of group member, and role in group.",fields:[{description:"Profile of group member.",parameter:"profile",type:{datatype:"MemberProfile",namespace:"team"}},{description:"The role that the user has in the group.",parameter:"access_type",type:{datatype:"GroupAccessType",namespace:"team"}}],stone_type:"struct"},GroupSelector:{description:"Argument for selecting a single group, either by group_id or by external group ID.",fields:[{description:"Group ID.",parameter:"group_id",type:{primitive:"String"}},{description:"External ID of the group.",parameter:"group_external_id",type:{primitive:"String"}}],stone_type:"union"},GroupUpdateArgs:{fields:[{description:"Specify a group.",parameter:"group",type:{datatype:"GroupSelector",namespace:"team"}},{description:"Whether to return the list of members in the group.  Note that the default value will cause all the group members  to be returned in the response. This may take a long time for large groups.",parameter:"return_members",type:{primitive:"Boolean"}},{description:"Optional argument. Set group name to this if provided.",parameter:"new_group_name",type:{optional:{primitive:"String"}}},{description:"Optional argument. New group external ID. If the argument is None, the group's external_id won't be updated. If the argument is empty string, the group's external id will be cleared.",parameter:"new_group_external_id",type:{optional:{primitive:"String"}}},{description:"Set new group management type, if provided.",parameter:"new_group_management_type",type:{optional:{datatype:"GroupManagementType",namespace:"team_common"}}}],stone_type:"struct"},GroupUpdateError:{fields:[{description:"No matching group found. No groups match the specified group ID.",parameter:"group_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"This operation is not supported on system-managed groups.",parameter:"system_managed_group_disallowed",type:{primitive:"Void"}},{description:"The requested group name is already being used by another group.",parameter:"group_name_already_used",type:{primitive:"Void"}},{description:"Group name is empty or has invalid characters.",parameter:"group_name_invalid",type:{primitive:"Void"}},{description:"The requested external ID is already being used by another group.",parameter:"external_id_already_in_use",type:{primitive:"Void"}}],stone_type:"open_union"},MemberProfile:{description:"Basic member profile.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"}},team_common:{GroupManagementType:{description:"The group type determines how a group is managed.",fields:[{description:"A group which is managed by selected users.",parameter:"user_managed",type:{primitive:"Void"}},{description:"A group which is managed by team admins only.",parameter:"company_managed",type:{primitive:"Void"}},{description:"A group which is managed automatically by Dropbox.",parameter:"system_managed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},jzUB:function(e,t,i){"use strict";t.a={auth:{TokenFromOAuth1Arg:{fields:[{description:"The supplied OAuth 1.0 access token.",parameter:"oauth1_token",type:{primitive:"String"}},{description:"The token secret associated with the supplied access token.",parameter:"oauth1_token_secret",type:{primitive:"String"}}],stone_type:"struct"},TokenFromOAuth1Error:{fields:[{description:"Part or all of the OAuth 1.0 access token info is invalid.",parameter:"invalid_oauth1_token_info",type:{primitive:"Void"}},{description:"The authorized app does not match the app associated with the supplied access token.",parameter:"app_id_mismatch",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TokenFromOAuth1Result:{fields:[{description:"The OAuth 2.0 token generated from the supplied OAuth 1.0 token.",parameter:"oauth2_token",type:{primitive:"String"}}],stone_type:"struct"}}}},k7xs:function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{CreateFolderArg:{fields:[{description:"Path in the user's Dropbox to create.",parameter:"path",type:{primitive:"String"}},{description:"If there's a conflict, have the Dropbox server try to autorename the folder to avoid the conflict.",parameter:"autorename",type:{primitive:"Boolean"}}],stone_type:"struct"},CreateFolderError:{fields:[{parameter:"path",type:{datatype:"WriteError",namespace:"files"}}],stone_type:"union"},FolderMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the folder.",parameter:"id",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Please use :field:`sharing_info` instead.",parameter:"shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Set if the folder is contained in a shared folder or is a shared folder mount point.",parameter:"sharing_info",type:{optional:{datatype:"FolderSharingInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified. Note that only properties associated with user-owned templates, not team-owned templates, can be attached to folders.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}}],stone_type:"struct",todo:!0},FolderSharingInfo:{description:"Sharing info for a folder which is contained in a shared folder or is a shared folder mount point.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"Set if the folder is contained by a shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"If this folder is a shared folder mount point, the ID of the shared folder mounted at this location.",parameter:"shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Specifies that the folder can only be traversed and the user can only see a limited subset of the contents of this folder because they don't have read access to this folder. They do, however, have access to some sub folder.",parameter:"traverse_only",type:{primitive:"Boolean"}},{description:"Specifies that the folder cannot be accessed by the user.",parameter:"no_access",type:{primitive:"Boolean"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},kCQp:function(e,t,i){var r=i("RW/s"),o=i("0KRy"),a=i("xkFB");e.exports=function(e,t){var i=this.__data__;if(i instanceof r){var n=i.__data__;if(!o||n.length<199)return n.push([e,t]),this.size=++i.size,this;i=this.__data__=new a(n)}return i.set(e,t),this.size=i.size,this}},kPK8:function(e,t,i){"use strict";t.a={team:{TeamGetInfoResult:{fields:[{description:"The name of the team.",parameter:"name",type:{primitive:"String"}},{description:"The ID of the team.",parameter:"team_id",type:{primitive:"String"}},{description:"The number of licenses available to the team.",parameter:"num_licensed_users",type:{primitive:"UInt32"}},{description:"The number of accounts that have been invited or are already active members of the team.",parameter:"num_provisioned_users",type:{primitive:"UInt32"}},{parameter:"policies",type:{datatype:"TeamMemberPolicies",namespace:"team_policies"}}],stone_type:"struct"}},team_policies:{EmmState:{fields:[{description:"Emm token is disabled.",parameter:"disabled",type:{primitive:"Void"}},{description:"Emm token is optional.",parameter:"optional",type:{primitive:"Void"}},{description:"Emm token is required.",parameter:"required",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},OfficeAddInPolicy:{fields:[{description:"Office Add-In is disabled.",parameter:"disabled",type:{primitive:"Void"}},{description:"Office Add-In is enabled.",parameter:"enabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderJoinPolicy:{description:"Policy governing which shared folders a team member can join.",fields:[{description:"Team members can only join folders shared by teammates.",parameter:"from_team_only",type:{primitive:"Void"}},{description:"Team members can join any shared folder, including those shared by users outside the team.",parameter:"from_anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderMemberPolicy:{description:"Policy governing who can be a member of a folder shared by a team member.",fields:[{description:"Only a teammate can be a member of a folder shared by a team member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can be a member of a folder shared by a team member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLinkCreatePolicy:{description:"Policy governing the visibility of shared links. This policy can apply to newly created shared links, or all shared links.",fields:[{description:"By default, anyone can access newly created shared links. No login will be required to access the shared links unless overridden.",parameter:"default_public",type:{primitive:"Void"}},{description:"By default, only members of the same team can access newly created shared links. Login will be required to access the shared links unless overridden.",parameter:"default_team_only",type:{primitive:"Void"}},{description:"Only members of the same team can access all shared links. Login will be required to access all shared links.",parameter:"team_only",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamMemberPolicies:{description:"Policies governing team members.",fields:[{description:"Policies governing sharing.",parameter:"sharing",type:{datatype:"TeamSharingPolicies",namespace:"team_policies"}},{description:"This describes the Enterprise Mobility Management (EMM) state for this team. This information can be used to understand if an organization is integrating with a third-party EMM vendor to further manage and apply restrictions upon the team's Dropbox usage on mobile devices. This is a new feature and in the future we'll be adding more new fields and additional documentation.",parameter:"emm_state",type:{datatype:"EmmState",namespace:"team_policies"}},{description:"The admin policy around the Dropbox Office Add-In for this team.",parameter:"office_addin",type:{datatype:"OfficeAddInPolicy",namespace:"team_policies"}}],stone_type:"struct"},TeamSharingPolicies:{description:"Policies governing sharing within and outside of the team.",fields:[{description:"Who can join folders shared by team members.",parameter:"shared_folder_member_policy",type:{datatype:"SharedFolderMemberPolicy",namespace:"team_policies"}},{description:"Which shared folders team members can join.",parameter:"shared_folder_join_policy",type:{datatype:"SharedFolderJoinPolicy",namespace:"team_policies"}},{description:"Who can view shared links owned by team members.",parameter:"shared_link_create_policy",type:{datatype:"SharedLinkCreatePolicy",namespace:"team_policies"}}],stone_type:"struct"}}}},kXPx:function(e,t,i){var r=i("COrk"),o=i("edSL"),a=i("dtdj"),n=i("BwbT"),s=i("2EQx"),p=i("a7YA"),d=i("cTHi");e.exports=function(e,t){return n(e)&&s(t)?p(d(e),t):function(i){var n=o(i,e);return void 0===n&&n===t?a(i,e):r(t,n,3)}}},knvM:function(e,t,i){var r=i("+dZb")("unionBy",i("qkBe"));r.placeholder=i("IOY3"),e.exports=r},kpGT:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("QyrG"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},kuUs:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("GDd6"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},l2Jq:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("whiK"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"l3+0":function(e,t,i){var r=i("ofiy");e.exports=function(e,t){return!!(null==e?0:e.length)&&r(e,t,0)>-1}},l7Do:function(e,t,i){var r=i("WRuO"),o=i("SN9N"),a=i("EN0E"),n=i("ONOI"),s=i("9aUh"),p=i("Vujp"),d=i("Bq5F");e.exports=function e(t,i,l,m,c){t!==i&&a(i,(function(a,p){if(c||(c=new r),s(a))n(t,i,p,l,e,m,c);else{var h=m?m(d(t,p),a,p+"",t,i,c):void 0;void 0===h&&(h=a),o(t,p,h)}}),p)}},lCHq:function(e,t,i){"use strict";t.a={team:{LegalHoldPolicy:{fields:[{description:"The legal hold id.",parameter:"id",type:{primitive:"String"}},{description:"Policy name.",parameter:"name",type:{primitive:"String"}},{description:"Team members IDs and number of permanetly deleted members under hold.",parameter:"members",type:{datatype:"MembersInfo",namespace:"team"}},{description:"The current state of the hold.",parameter:"status",type:{datatype:"LegalHoldStatus",namespace:"team"}},{description:"Start date of the legal hold policy.",parameter:"start_date",type:{primitive:"Timestamp"}},{description:"A description of the legal hold policy.",parameter:"description",type:{optional:{primitive:"String"}}},{description:"The time at which the legal hold was activated.",parameter:"activation_time",type:{optional:{primitive:"Timestamp"}}},{description:"End date of the legal hold policy.",parameter:"end_date",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},LegalHoldStatus:{fields:[{description:"The legal hold policy is active.",parameter:"active",type:{primitive:"Void"}},{description:"The legal hold policy was released.",parameter:"released",type:{primitive:"Void"}},{description:"The legal hold policy is activating.",parameter:"activating",type:{primitive:"Void"}},{description:"The legal hold policy is updating.",parameter:"updating",type:{primitive:"Void"}},{description:"The legal hold policy is exporting.",parameter:"exporting",type:{primitive:"Void"}},{description:"The legal hold policy is releasing.",parameter:"releasing",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LegalHoldsPolicyUpdateArg:{fields:[{description:"The legal hold Id.",parameter:"id",type:{primitive:"String"}},{description:"Policy new name.",parameter:"name",type:{optional:{primitive:"String"}}},{description:"Policy new description.",parameter:"description",type:{optional:{primitive:"String"}}},{description:"List of team member IDs to apply the policy on.",parameter:"members",type:{optional:{list:{primitive:"String"}}}}],stone_type:"struct"},LegalHoldsPolicyUpdateError:{fields:[{description:"There has been an unknown legal hold error.",parameter:"unknown_legal_hold_error",type:{primitive:"Void"}},{description:"You don't have permissions to perform this action.",parameter:"insufficient_permissions",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"Trying to release an inactive legal hold.",parameter:"inactive_legal_hold",type:{primitive:"Void"}},{description:"Legal hold is currently performing another operation.",parameter:"legal_hold_performing_another_operation",type:{primitive:"Void"}},{description:"Some members in the members list are not valid to be placed under legal hold.",parameter:"invalid_members",type:{primitive:"Void"}},{description:"You cannot add more than 5 users in a legal hold.",parameter:"number_of_users_on_hold_is_greater_than_hold_limitation",type:{primitive:"Void"}},{description:"The users list must have at least one user.",parameter:"empty_members_list",type:{primitive:"Void"}},{description:"The name provided is already in use by another legal hold.",parameter:"name_must_be_unique",type:{primitive:"Void"}},{description:"Legal hold policy does not exist for :field:`LegalHoldsPolicyUpdateArg.id`.",parameter:"legal_hold_policy_not_found",type:{primitive:"Void"}}],stone_type:"open_union"},MembersInfo:{fields:[{description:"Team member IDs of the users under this hold.",parameter:"team_member_ids",type:{list:{primitive:"String"}}},{description:"The number of permanently deleted users that were under this hold.",parameter:"permanently_deleted_users",type:{primitive:"UInt64"}}],stone_type:"struct"}}}},lDTu:function(e,t,i){"use strict";t.a={team:{ActiveWebSession:{description:"Information on active web sessions.",fields:[{description:"The session id.",parameter:"session_id",type:{primitive:"String"}},{description:"Information on the hosting device.",parameter:"user_agent",type:{primitive:"String"}},{description:"Information on the hosting operating system.",parameter:"os",type:{primitive:"String"}},{description:"Information on the browser used for this web session.",parameter:"browser",type:{primitive:"String"}},{description:"The IP address of the last activity from this session.",parameter:"ip_address",type:{optional:{primitive:"String"}}},{description:"The country from which the last activity from this session was made.",parameter:"country",type:{optional:{primitive:"String"}}},{description:"The time this session was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}},{description:"The time of the last activity from this session.",parameter:"updated",type:{optional:{primitive:"Timestamp"}}},{description:"The time this session expires.",parameter:"expires",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},DesktopClientSession:{description:"Information about linked Dropbox desktop client sessions.",fields:[{description:"The session id.",parameter:"session_id",type:{primitive:"String"}},{description:"Name of the hosting desktop.",parameter:"host_name",type:{primitive:"String"}},{description:"The Dropbox desktop client type.",parameter:"client_type",type:{datatype:"DesktopPlatform",namespace:"team"}},{description:"The Dropbox client version.",parameter:"client_version",type:{primitive:"String"}},{description:"Information on the hosting platform.",parameter:"platform",type:{primitive:"String"}},{description:"Whether it's possible to delete all of the account files upon unlinking.",parameter:"is_delete_on_unlink_supported",type:{primitive:"Boolean"}},{description:"The IP address of the last activity from this session.",parameter:"ip_address",type:{optional:{primitive:"String"}}},{description:"The country from which the last activity from this session was made.",parameter:"country",type:{optional:{primitive:"String"}}},{description:"The time this session was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}},{description:"The time of the last activity from this session.",parameter:"updated",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},DesktopPlatform:{fields:[{description:"Official Windows Dropbox desktop client.",parameter:"windows",type:{primitive:"Void"}},{description:"Official Mac Dropbox desktop client.",parameter:"mac",type:{primitive:"Void"}},{description:"Official Linux Dropbox desktop client.",parameter:"linux",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListTeamDevicesArg:{fields:[{description:"At the first call to the :route:`devices/list_team_devices` the cursor shouldn't be passed. Then, if the result of the call includes a cursor, the following requests should include the received cursors in order to receive the next sub list of team devices.",parameter:"cursor",type:{optional:{primitive:"String"}}},{description:"Whether to list web sessions of the team members.",parameter:"include_web_sessions",type:{primitive:"Boolean"}},{description:"Whether to list desktop clients of the team members.",parameter:"include_desktop_clients",type:{primitive:"Boolean"}},{description:"Whether to list mobile clients of the team members.",parameter:"include_mobile_clients",type:{primitive:"Boolean"}}],stone_type:"struct"},ListTeamDevicesError:{fields:[{description:"Indicates that the cursor has been invalidated. Call :route:`devices/list_team_devices` again with an empty cursor to obtain a new cursor.",parameter:"reset",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListTeamDevicesResult:{fields:[{description:"The devices of each member of the team.",parameter:"devices",type:{list:{datatype:"MemberDevices",namespace:"team"}}},{description:"If true, then there are more devices available. Pass the cursor to :route:`devices/list_team_devices` to retrieve the rest.",parameter:"has_more",type:{primitive:"Boolean"}},{description:"Pass the cursor into :route:`devices/list_team_devices` to receive the next sub list of team's devices.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberDevices:{description:"Information on devices of a team's member.",fields:[{description:"The member unique Id.",parameter:"team_member_id",type:{primitive:"String"}},{description:"List of web sessions made by this team member.",parameter:"web_sessions",type:{optional:{list:{datatype:"ActiveWebSession",namespace:"team"}}}},{description:"List of desktop clients by this team member.",parameter:"desktop_clients",type:{optional:{list:{datatype:"DesktopClientSession",namespace:"team"}}}},{description:"List of mobile clients by this team member.",parameter:"mobile_clients",type:{optional:{list:{datatype:"MobileClientSession",namespace:"team"}}}}],stone_type:"struct"},MobileClientPlatform:{fields:[{description:"Official Dropbox iPhone client.",parameter:"iphone",type:{primitive:"Void"}},{description:"Official Dropbox iPad client.",parameter:"ipad",type:{primitive:"Void"}},{description:"Official Dropbox Android client.",parameter:"android",type:{primitive:"Void"}},{description:"Official Dropbox Windows phone client.",parameter:"windows_phone",type:{primitive:"Void"}},{description:"Official Dropbox Blackberry client.",parameter:"blackberry",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MobileClientSession:{description:"Information about linked Dropbox mobile client sessions.",fields:[{description:"The session id.",parameter:"session_id",type:{primitive:"String"}},{description:"The device name.",parameter:"device_name",type:{primitive:"String"}},{description:"The mobile application type.",parameter:"client_type",type:{datatype:"MobileClientPlatform",namespace:"team"}},{description:"The IP address of the last activity from this session.",parameter:"ip_address",type:{optional:{primitive:"String"}}},{description:"The country from which the last activity from this session was made.",parameter:"country",type:{optional:{primitive:"String"}}},{description:"The time this session was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}},{description:"The time of the last activity from this session.",parameter:"updated",type:{optional:{primitive:"Timestamp"}}},{description:"The dropbox client version.",parameter:"client_version",type:{optional:{primitive:"String"}}},{description:"The hosting OS version.",parameter:"os_version",type:{optional:{primitive:"String"}}},{description:"last carrier used by the device.",parameter:"last_carrier",type:{optional:{primitive:"String"}}}],stone_type:"struct"}}}},lHM0:function(e,t,i){"use strict";t.a={team:{LegalHoldHeldRevisionMetadata:{fields:[{description:"The held revision filename.",parameter:"new_filename",type:{primitive:"String"}},{description:"The id of the held revision.",parameter:"original_revision_id",type:{primitive:"String"}},{description:"The original path of the held revision.",parameter:"original_file_path",type:{primitive:"String"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"The member id of the revision's author.",parameter:"author_member_id",type:{primitive:"String"}},{description:"The member status of the revision's author.",parameter:"author_member_status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"The email address of the held revision author.",parameter:"author_email",type:{primitive:"String"}},{description:"The type of the held revision's file.",parameter:"file_type",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{primitive:"String"}}],stone_type:"struct"},LegalHoldsListHeldRevisionResult:{fields:[{description:"List of file entries that under the hold.",parameter:"entries",type:{list:{datatype:"LegalHoldHeldRevisionMetadata",namespace:"team"}}},{description:"True if there are more file entries that haven't been returned. You can retrieve them with a call to /legal_holds/list_held_revisions_continue.",parameter:"has_more",type:{primitive:"Boolean"}},{description:"The cursor idicates where to continue reading file metadata entries for the next API call. When there are no more entries, the cursor will return none.\nPass the cursor into /2/team/legal_holds/list_held_revisions/continue.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LegalHoldsListHeldRevisionsArg:{fields:[{description:"The legal hold Id.",parameter:"id",type:{primitive:"String"}}],stone_type:"struct"},LegalHoldsListHeldRevisionsError:{fields:[{description:"There has been an unknown legal hold error.",parameter:"unknown_legal_hold_error",type:{primitive:"Void"}},{description:"You don't have permissions to perform this action.",parameter:"insufficient_permissions",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"Temporary infrastructure failure, please retry.",parameter:"transient_error",type:{primitive:"Void"}},{description:"The legal hold is not holding any revisions yet.",parameter:"legal_hold_still_empty",type:{primitive:"Void"}},{description:"Trying to list revisions for an inactive legal hold.",parameter:"inactive_legal_hold",type:{primitive:"Void"}}],stone_type:"open_union"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"}}}},lHWt:function(e,t,i){"use strict";t.a={files:{FileLock:{fields:[{description:"The lock description.",parameter:"content",type:{datatype:"FileLockContent",namespace:"files"}}],stone_type:"struct"},FileLockContent:{fields:[{description:"Empty type to indicate no lock.",parameter:"unlocked",type:{primitive:"Void"}},{description:"A lock held by a single user.",parameter:"single_user",type:{datatype:"SingleUserLock",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LockConflictError:{fields:[{description:"The lock that caused the conflict.",parameter:"lock",type:{datatype:"FileLock",namespace:"files"}}],stone_type:"struct"},LockFileArg:{fields:[{description:"Path in the user's Dropbox to a file.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},LockFileBatchArg:{fields:[{description:"List of 'entries'. Each 'entry' contains a path of the file which will be locked or queried. Duplicate path arguments in the batch are considered only once.",parameter:"entries",type:{list:{datatype:"LockFileArg",namespace:"files"}}}],stone_type:"struct"},LockFileBatchResult:{fields:[{description:"Each Entry in the 'entries' will have '.tag' with the operation status (e.g. success), the metadata for the file and the lock state after the operation.",parameter:"entries",type:{list:{datatype:"LockFileResultEntry",namespace:"files"}}}],stone_type:"struct"},LockFileError:{fields:[{description:"Could not find the specified resource.",parameter:"path_lookup",type:{datatype:"LookupError",namespace:"files"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{description:"There are too many files in one request. Please retry with fewer files.",parameter:"too_many_files",type:{primitive:"Void"}},{description:"The user does not have permissions to change the lock state or access the file.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"Item is a type that cannot be locked.",parameter:"cannot_be_locked",type:{primitive:"Void"}},{description:"Requested file is not currently shared.",parameter:"file_not_shared",type:{primitive:"Void"}},{description:"The user action conflicts with an existing lock on the file.",parameter:"lock_conflict",type:{datatype:"LockConflictError",namespace:"files"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LockFileResult:{fields:[{description:"Metadata of the file.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}},{description:"The file lock state after the operation.",parameter:"lock",type:{datatype:"FileLock",namespace:"files"}}],stone_type:"struct"},LockFileResultEntry:{fields:[{parameter:"success",type:{datatype:"LockFileResult",namespace:"files"}},{parameter:"failure",type:{datatype:"LockFileError",namespace:"files"}}],stone_type:"union"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},SingleUserLock:{fields:[{description:"The time the lock was created.",parameter:"created",type:{primitive:"Timestamp"}},{description:"The account ID of the lock holder if known.",parameter:"lock_holder_account_id",type:{primitive:"String"}},{description:"The id of the team of the account holder if it exists.",parameter:"lock_holder_team_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"}}}},lLPU:function(e,t,i){var r=i("f/Xo"),o=i("YaJL"),a=i("yoW1"),n=o?function(e,t){return o(e,"toString",{configurable:!0,enumerable:!1,value:r(t),writable:!0})}:a;e.exports=n},lUso:function(e,t,i){"use strict";t.a={team:{CustomQuotaError:{description:"Error returned when getting member custom quota.",fields:[{description:"A maximum of 1000 users can be set for a single call.",parameter:"too_many_users",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},CustomQuotaUsersArg:{fields:[{description:"List of users.",parameter:"users",type:{list:{datatype:"UserSelectorArg",namespace:"team"}}}],stone_type:"struct"},RemoveCustomQuotaResult:{description:"User result for setting member custom quota.",fields:[{description:"Successfully removed user.",parameter:"success",type:{datatype:"UserSelectorArg",namespace:"team"}},{description:"Invalid user (not in team).",parameter:"invalid_user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},lYsT:function(e,t,i){var r=i("UgeB"),o=i("T9Ud"),a=Object.prototype,n=a.hasOwnProperty,s=a.propertyIsEnumerable,p=r(function(){return arguments}())?r:function(e){return o(e)&&n.call(e,"callee")&&!s.call(e,"callee")};e.exports=p},lgYy:function(e,t,i){var r=i("9aUh"),o=i("jL4t"),a=i("6758"),n=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return a(e);var t=o(e),i=[];for(var s in e)("constructor"!=s||!t&&n.call(e,s))&&i.push(s);return i}},lktd:function(e,t,i){"use strict";t.a={team:{NamespaceMetadata:{description:"Properties of a namespace.",fields:[{description:"The name of this namespace.",parameter:"name",type:{primitive:"String"}},{description:"The ID of this namespace.",parameter:"namespace_id",type:{primitive:"String"}},{description:"The type of this namespace.",parameter:"namespace_type",type:{datatype:"NamespaceType",namespace:"team"}},{description:"If this is a team member or app folder, the ID of the owning team member. Otherwise, this field is not present.",parameter:"team_member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"},NamespaceType:{fields:[{description:"App sandbox folder.",parameter:"app_folder",type:{primitive:"Void"}},{description:"Shared folder.",parameter:"shared_folder",type:{primitive:"Void"}},{description:"Top-level team-owned folder.",parameter:"team_folder",type:{primitive:"Void"}},{description:"Team member's home folder.",parameter:"team_member_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamNamespacesListArg:{fields:[{description:"Specifying a value here has no effect.",parameter:"limit",type:{primitive:"UInt32"}}],stone_type:"struct"},TeamNamespacesListError:{fields:[{description:"Argument passed in is invalid.",parameter:"invalid_arg",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamNamespacesListResult:{description:"Result for :route:`namespaces/list`.",fields:[{description:"List of all namespaces the team can access.",parameter:"namespaces",type:{list:{datatype:"NamespaceMetadata",namespace:"team"}}},{description:"Pass the cursor into :route:`namespaces/list/continue` to obtain additional namespaces. Note that duplicate namespaces may be returned.",parameter:"cursor",type:{primitive:"String"}},{description:"Is true if there are additional namespaces that have not been returned yet.",parameter:"has_more",type:{primitive:"Boolean"}}],stone_type:"struct"}}}},louk:function(e,t,i){"use strict";t.a={async:{LaunchEmptyResult:{description:"Result returned by methods that may either launch an asynchronous job or complete synchronously. Upon synchronous completion of the job, no additional information is returned.",fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{description:"The job finished synchronously and successfully.",parameter:"complete",type:{primitive:"Void"}}],stone_type:"union"}},team:{GroupDeleteError:{fields:[{description:"No matching group found. No groups match the specified group ID.",parameter:"group_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"This operation is not supported on system-managed groups.",parameter:"system_managed_group_disallowed",type:{primitive:"Void"}},{description:"This group has already been deleted.",parameter:"group_already_deleted",type:{primitive:"Void"}}],stone_type:"open_union"},GroupSelector:{description:"Argument for selecting a single group, either by group_id or by external group ID.",fields:[{description:"Group ID.",parameter:"group_id",type:{primitive:"String"}},{description:"External ID of the group.",parameter:"group_external_id",type:{primitive:"String"}}],stone_type:"union"}}}},lw3w:function(e,t,i){var r;e.exports=(r=i("rzlk"))&&r.default||r},"lwp/":function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollEmptyResult:{description:"Result returned by methods that poll for the status of an asynchronous job. Upon completion of the job, no additional information is returned.",fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The asynchronous job has completed successfully.",parameter:"complete",type:{primitive:"Void"}}],stone_type:"union"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"m/eG":function(e,t,i){"use strict";t.a={sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ChangeFileMemberAccessArgs:{description:"Arguments for :route:`change_file_member_access`.",fields:[{description:"File for which we are changing a member's access.",parameter:"file",type:{primitive:"String"}},{description:"The member whose access we are changing.",parameter:"member",type:{datatype:"MemberSelector",namespace:"sharing"}},{description:"The new access level for the member.",parameter:"access_level",type:{datatype:"AccessLevel",namespace:"sharing"}}],stone_type:"struct"},FileMemberActionError:{fields:[{description:"Specified member was not found.",parameter:"invalid_member",type:{primitive:"Void"}},{description:"User does not have permission to perform this action on this member.",parameter:"no_permission",type:{primitive:"Void"}},{description:"Specified file was invalid or user does not have access.",parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{description:"The action cannot be completed because the target member does not have explicit access to the file. The return value is the access that the member has to the file from a parent folder.",parameter:"no_explicit_access",type:{datatype:"MemberAccessLevelResult",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FileMemberActionIndividualResult:{fields:[{description:"Member was successfully removed from this file. If AccessLevel is given, the member still has access via a parent shared folder.",parameter:"success",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"User was not able to perform this action.",parameter:"member_error",type:{datatype:"FileMemberActionError",namespace:"sharing"}}],stone_type:"union"},FileMemberActionResult:{description:"Per-member result for :route:`add_file_member` or :route:`change_file_member_access`.",fields:[{description:"One of specified input members.",parameter:"member",type:{datatype:"MemberSelector",namespace:"sharing"}},{description:"The outcome of the action on this member.",parameter:"result",type:{datatype:"FileMemberActionIndividualResult",namespace:"sharing"}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberAccessLevelResult:{description:"Contains information about a member's access level to content after an operation.",fields:[{description:"The member still has this level of access to the content through a parent folder.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"A localized string with additional information about why the user has this access level to the content.",parameter:"warning",type:{optional:{primitive:"String"}}},{description:"The parent folders that a member has access to. The field is present if the user has access to the first parent folder where the member gains access.",parameter:"access_details",type:{optional:{list:{datatype:"ParentFolderAccessInfo",namespace:"sharing"}}}}],stone_type:"struct"},MemberAction:{description:"Actions that may be taken on members of a shared folder.",fields:[{description:"Allow the member to keep a copy of the folder when removing.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Make the member an editor of the folder.",parameter:"make_editor",type:{primitive:"Void"}},{description:"Make the member an owner of the folder.",parameter:"make_owner",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder.",parameter:"make_viewer",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder without commenting permissions.",parameter:"make_viewer_no_comment",type:{primitive:"Void"}},{description:"Remove the member from the folder.",parameter:"remove",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberPermission:{description:"Whether the user is allowed to take the action on the associated member.",fields:[{description:"The action that the user may wish to take on the member.",parameter:"action",type:{datatype:"MemberAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},MemberSelector:{description:"Includes different ways to identify a member of a shared folder.",fields:[{description:"Dropbox account, team member, or group ID of member.",parameter:"dropbox_id",type:{primitive:"String"}},{description:"E-mail address of member.",parameter:"email",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ParentFolderAccessInfo:{description:"Contains information about a parent folder that a member has access to.",fields:[{description:"Display name for the folder.",parameter:"folder_name",type:{primitive:"String"}},{description:"The identifier of the parent shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The user's permissions for the parent shared folder.",parameter:"permissions",type:{list:{datatype:"MemberPermission",namespace:"sharing"}}},{description:"The full path to the parent shared folder relative to the acting user's root.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingFileAccessError:{description:"User could not access this file.",fields:[{description:"Current user does not have sufficient privileges to perform the desired action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"File specified was not found.",parameter:"invalid_file",type:{primitive:"Void"}},{description:"A folder can't be shared this way. Use folder sharing or a shared link instead.",parameter:"is_folder",type:{primitive:"Void"}},{description:"A file inside a public folder can't be shared this way. Use a public link instead.",parameter:"inside_public_folder",type:{primitive:"Void"}},{description:"A Mac OS X package can't be shared this way. Use a shared link instead.",parameter:"inside_osx_package",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},m3DY:function(e,t,i){"use strict";t.a={team:{LegalHoldHeldRevisionMetadata:{fields:[{description:"The held revision filename.",parameter:"new_filename",type:{primitive:"String"}},{description:"The id of the held revision.",parameter:"original_revision_id",type:{primitive:"String"}},{description:"The original path of the held revision.",parameter:"original_file_path",type:{primitive:"String"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"The member id of the revision's author.",parameter:"author_member_id",type:{primitive:"String"}},{description:"The member status of the revision's author.",parameter:"author_member_status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"The email address of the held revision author.",parameter:"author_email",type:{primitive:"String"}},{description:"The type of the held revision's file.",parameter:"file_type",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{primitive:"String"}}],stone_type:"struct"},LegalHoldsListHeldRevisionResult:{fields:[{description:"List of file entries that under the hold.",parameter:"entries",type:{list:{datatype:"LegalHoldHeldRevisionMetadata",namespace:"team"}}},{description:"True if there are more file entries that haven't been returned. You can retrieve them with a call to /legal_holds/list_held_revisions_continue.",parameter:"has_more",type:{primitive:"Boolean"}},{description:"The cursor idicates where to continue reading file metadata entries for the next API call. When there are no more entries, the cursor will return none.\nPass the cursor into /2/team/legal_holds/list_held_revisions/continue.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LegalHoldsListHeldRevisionsContinueArg:{fields:[{description:"The legal hold Id.",parameter:"id",type:{primitive:"String"}},{description:"The cursor idicates where to continue reading file metadata entries for the next API call. When there are no more entries, the cursor will return none.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LegalHoldsListHeldRevisionsError:{fields:[{description:"There has been an unknown legal hold error.",parameter:"unknown_legal_hold_error",type:{primitive:"Void"}},{description:"You don't have permissions to perform this action.",parameter:"insufficient_permissions",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"Temporary infrastructure failure, please retry.",parameter:"transient_error",type:{primitive:"Void"}},{description:"The legal hold is not holding any revisions yet.",parameter:"legal_hold_still_empty",type:{primitive:"Void"}},{description:"Trying to list revisions for an inactive legal hold.",parameter:"inactive_legal_hold",type:{primitive:"Void"}}],stone_type:"open_union"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"}}}},m3cY:function(e,t,i){var r=i("PAOY"),o=i("zYYD"),a=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,n=RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]","g");e.exports=function(e){return(e=o(e))&&e.replace(a,r).replace(n,"")}},m5HO:function(e,t){t.aliasToReal={each:"forEach",eachRight:"forEachRight",entries:"toPairs",entriesIn:"toPairsIn",extend:"assignIn",extendAll:"assignInAll",extendAllWith:"assignInAllWith",extendWith:"assignInWith",first:"head",conforms:"conformsTo",matches:"isMatch",property:"get",__:"placeholder",F:"stubFalse",T:"stubTrue",all:"every",allPass:"overEvery",always:"constant",any:"some",anyPass:"overSome",apply:"spread",assoc:"set",assocPath:"set",complement:"negate",compose:"flowRight",contains:"includes",dissoc:"unset",dissocPath:"unset",dropLast:"dropRight",dropLastWhile:"dropRightWhile",equals:"isEqual",identical:"eq",indexBy:"keyBy",init:"initial",invertObj:"invert",juxt:"over",omitAll:"omit",nAry:"ary",path:"get",pathEq:"matchesProperty",pathOr:"getOr",paths:"at",pickAll:"pick",pipe:"flow",pluck:"map",prop:"get",propEq:"matchesProperty",propOr:"getOr",props:"at",symmetricDifference:"xor",symmetricDifferenceBy:"xorBy",symmetricDifferenceWith:"xorWith",takeLast:"takeRight",takeLastWhile:"takeRightWhile",unapply:"rest",unnest:"flatten",useWith:"overArgs",where:"conformsTo",whereEq:"isMatch",zipObj:"zipObject"},t.aryMethod={1:["assignAll","assignInAll","attempt","castArray","ceil","create","curry","curryRight","defaultsAll","defaultsDeepAll","floor","flow","flowRight","fromPairs","invert","iteratee","memoize","method","mergeAll","methodOf","mixin","nthArg","over","overEvery","overSome","rest","reverse","round","runInContext","spread","template","trim","trimEnd","trimStart","uniqueId","words","zipAll"],2:["add","after","ary","assign","assignAllWith","assignIn","assignInAllWith","at","before","bind","bindAll","bindKey","chunk","cloneDeepWith","cloneWith","concat","conformsTo","countBy","curryN","curryRightN","debounce","defaults","defaultsDeep","defaultTo","delay","difference","divide","drop","dropRight","dropRightWhile","dropWhile","endsWith","eq","every","filter","find","findIndex","findKey","findLast","findLastIndex","findLastKey","flatMap","flatMapDeep","flattenDepth","forEach","forEachRight","forIn","forInRight","forOwn","forOwnRight","get","groupBy","gt","gte","has","hasIn","includes","indexOf","intersection","invertBy","invoke","invokeMap","isEqual","isMatch","join","keyBy","lastIndexOf","lt","lte","map","mapKeys","mapValues","matchesProperty","maxBy","meanBy","merge","mergeAllWith","minBy","multiply","nth","omit","omitBy","overArgs","pad","padEnd","padStart","parseInt","partial","partialRight","partition","pick","pickBy","propertyOf","pull","pullAll","pullAt","random","range","rangeRight","rearg","reject","remove","repeat","restFrom","result","sampleSize","some","sortBy","sortedIndex","sortedIndexOf","sortedLastIndex","sortedLastIndexOf","sortedUniqBy","split","spreadFrom","startsWith","subtract","sumBy","take","takeRight","takeRightWhile","takeWhile","tap","throttle","thru","times","trimChars","trimCharsEnd","trimCharsStart","truncate","union","uniqBy","uniqWith","unset","unzipWith","without","wrap","xor","zip","zipObject","zipObjectDeep"],3:["assignInWith","assignWith","clamp","differenceBy","differenceWith","findFrom","findIndexFrom","findLastFrom","findLastIndexFrom","getOr","includesFrom","indexOfFrom","inRange","intersectionBy","intersectionWith","invokeArgs","invokeArgsMap","isEqualWith","isMatchWith","flatMapDepth","lastIndexOfFrom","mergeWith","orderBy","padChars","padCharsEnd","padCharsStart","pullAllBy","pullAllWith","rangeStep","rangeStepRight","reduce","reduceRight","replace","set","slice","sortedIndexBy","sortedLastIndexBy","transform","unionBy","unionWith","update","xorBy","xorWith","zipWith"],4:["fill","setWith","updateWith"]},t.aryRearg={2:[1,0],3:[2,0,1],4:[3,2,0,1]},t.iterateeAry={dropRightWhile:1,dropWhile:1,every:1,filter:1,find:1,findFrom:1,findIndex:1,findIndexFrom:1,findKey:1,findLast:1,findLastFrom:1,findLastIndex:1,findLastIndexFrom:1,findLastKey:1,flatMap:1,flatMapDeep:1,flatMapDepth:1,forEach:1,forEachRight:1,forIn:1,forInRight:1,forOwn:1,forOwnRight:1,map:1,mapKeys:1,mapValues:1,partition:1,reduce:2,reduceRight:2,reject:1,remove:1,some:1,takeRightWhile:1,takeWhile:1,times:1,transform:2},t.iterateeRearg={mapKeys:[1],reduceRight:[1,0]},t.methodRearg={assignInAllWith:[1,0],assignInWith:[1,2,0],assignAllWith:[1,0],assignWith:[1,2,0],differenceBy:[1,2,0],differenceWith:[1,2,0],getOr:[2,1,0],intersectionBy:[1,2,0],intersectionWith:[1,2,0],isEqualWith:[1,2,0],isMatchWith:[2,1,0],mergeAllWith:[1,0],mergeWith:[1,2,0],padChars:[2,1,0],padCharsEnd:[2,1,0],padCharsStart:[2,1,0],pullAllBy:[2,1,0],pullAllWith:[2,1,0],rangeStep:[1,2,0],rangeStepRight:[1,2,0],setWith:[3,1,2,0],sortedIndexBy:[2,1,0],sortedLastIndexBy:[2,1,0],unionBy:[1,2,0],unionWith:[1,2,0],updateWith:[3,1,2,0],xorBy:[1,2,0],xorWith:[1,2,0],zipWith:[1,2,0]},t.methodSpread={assignAll:{start:0},assignAllWith:{start:0},assignInAll:{start:0},assignInAllWith:{start:0},defaultsAll:{start:0},defaultsDeepAll:{start:0},invokeArgs:{start:2},invokeArgsMap:{start:2},mergeAll:{start:0},mergeAllWith:{start:0},partial:{start:1},partialRight:{start:1},without:{start:1},zipAll:{start:0}},t.mutate={array:{fill:!0,pull:!0,pullAll:!0,pullAllBy:!0,pullAllWith:!0,pullAt:!0,remove:!0,reverse:!0},object:{assign:!0,assignAll:!0,assignAllWith:!0,assignIn:!0,assignInAll:!0,assignInAllWith:!0,assignInWith:!0,assignWith:!0,defaults:!0,defaultsAll:!0,defaultsDeep:!0,defaultsDeepAll:!0,merge:!0,mergeAll:!0,mergeAllWith:!0,mergeWith:!0},set:{set:!0,setWith:!0,unset:!0,update:!0,updateWith:!0}},t.realToAlias=function(){var e=Object.prototype.hasOwnProperty,i=t.aliasToReal,r={};for(var o in i){var a=i[o];e.call(r,a)?r[a].push(o):r[a]=[o]}return r}(),t.remap={assignAll:"assign",assignAllWith:"assignWith",assignInAll:"assignIn",assignInAllWith:"assignInWith",curryN:"curry",curryRightN:"curryRight",defaultsAll:"defaults",defaultsDeepAll:"defaultsDeep",findFrom:"find",findIndexFrom:"findIndex",findLastFrom:"findLast",findLastIndexFrom:"findLastIndex",getOr:"get",includesFrom:"includes",indexOfFrom:"indexOf",invokeArgs:"invoke",invokeArgsMap:"invokeMap",lastIndexOfFrom:"lastIndexOf",mergeAll:"merge",mergeAllWith:"mergeWith",padChars:"pad",padCharsEnd:"padEnd",padCharsStart:"padStart",propertyOf:"get",rangeStep:"range",rangeStepRight:"rangeRight",restFrom:"rest",spreadFrom:"spread",trimChars:"trim",trimCharsEnd:"trimEnd",trimCharsStart:"trimStart",zipAll:"zip"},t.skipFixed={castArray:!0,flow:!0,flowRight:!0,iteratee:!0,mixin:!0,rearg:!0,runInContext:!0},t.skipRearg={add:!0,assign:!0,assignIn:!0,bind:!0,bindKey:!0,concat:!0,difference:!0,divide:!0,eq:!0,gt:!0,gte:!0,isEqual:!0,lt:!0,lte:!0,matchesProperty:!0,merge:!0,multiply:!0,overArgs:!0,partial:!0,partialRight:!0,propertyOf:!0,random:!0,range:!0,rangeRight:!0,subtract:!0,zip:!0,zipObject:!0,zipObjectDeep:!0}},m92C:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("xUui"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},mEVR:function(e,t,i){"use strict";i.r(t);i("oKgo")},mH3y:function(e,t){e.exports=function(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}},mK0O:function(e,t,i){"use strict";function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}i.d(t,"a",(function(){return r}))},mgND:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{AdminTier:{description:"Describes which team-related admin permissions a user has.",fields:[{description:"User is an administrator of the team - has all permissions.",parameter:"team_admin",type:{primitive:"Void"}},{description:"User can do most user provisioning, de-provisioning and management.",parameter:"user_management_admin",type:{primitive:"Void"}},{description:"User can do a limited set of common support tasks for existing users.",parameter:"support_admin",type:{primitive:"Void"}},{description:"User is not an admin of the team.",parameter:"member_only",type:{primitive:"Void"}}],stone_type:"union"},MemberAddArg:{fields:[{parameter:"member_email",type:{primitive:"String"}},{description:"Member's first name.",parameter:"member_given_name",type:{optional:{primitive:"String"}}},{description:"Member's last name.",parameter:"member_surname",type:{optional:{primitive:"String"}}},{description:"External ID for member.",parameter:"member_external_id",type:{optional:{primitive:"String"}}},{description:"Persistent ID for member. This field is only available to teams using persistent ID SAML configuration.",parameter:"member_persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether to send a welcome email to the member. If send_welcome_email is false, no email invitation will be sent to the user. This may be useful for apps using single sign-on (SSO) flows for onboarding that want to handle announcements themselves.",parameter:"send_welcome_email",type:{primitive:"Boolean"}},{parameter:"role",type:{datatype:"AdminTier",namespace:"team"}},{description:"Whether a user is directory restricted.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}}],stone_type:"struct"},MemberAddResult:{description:"Describes the result of attempting to add a single user to the team. 'success' is the only value indicating that a user was indeed added to the team - the other values explain the type of failure that occurred, and include the email of the user for which the operation has failed.",fields:[{description:"Describes a user that was successfully added to the team.",parameter:"success",type:{datatype:"TeamMemberInfo",namespace:"team"}},{description:"Team is already full. The organization has no available licenses.",parameter:"team_license_limit",type:{primitive:"String"}},{description:"Team is already full. The free team member limit has been reached.",parameter:"free_team_member_limit_reached",type:{primitive:"String"}},{description:"User is already on this team. The provided email address is associated with a user who is already a member of (including in recoverable state) or invited to the team.",parameter:"user_already_on_team",type:{primitive:"String"}},{description:"User is already on another team. The provided email address is associated with a user that is already a member or invited to another team.",parameter:"user_on_another_team",type:{primitive:"String"}},{description:"User is already paired.",parameter:"user_already_paired",type:{primitive:"String"}},{description:"User migration has failed.",parameter:"user_migration_failed",type:{primitive:"String"}},{description:"A user with the given external member ID already exists on the team (including in recoverable state).",parameter:"duplicate_external_member_id",type:{primitive:"String"}},{description:"A user with the given persistent ID already exists on the team (including in recoverable state).",parameter:"duplicate_member_persistent_id",type:{primitive:"String"}},{description:"Persistent ID is only available to teams with persistent ID SAML configuration. Please contact Dropbox for more information.",parameter:"persistent_id_disabled",type:{primitive:"String"}},{description:"User creation has failed.",parameter:"user_creation_failed",type:{primitive:"String"}}],stone_type:"union"},MembersAddArg:{fields:[{description:"Details of new members to be added to the team.",parameter:"new_members",type:{list:{datatype:"MemberAddArg",namespace:"team"}}},{description:"Whether to force the add to happen asynchronously.",parameter:"force_async",type:{primitive:"Boolean"}}],stone_type:"struct"},MembersAddLaunch:{fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{parameter:"complete",type:{list:{datatype:"MemberAddResult",namespace:"team"}}}],stone_type:"union"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberInfo:{description:"Information about a team member.",fields:[{description:"Profile of a user as a member of a team.",parameter:"profile",type:{datatype:"TeamMemberProfile",namespace:"team"}},{description:"The user's role in the team.",parameter:"role",type:{datatype:"AdminTier",namespace:"team"}}],stone_type:"struct"},TeamMemberProfile:{description:"Profile of a user as a member of a team.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"List of group IDs of groups that the user belongs to.",parameter:"groups",type:{list:{primitive:"String"}}},{description:"The namespace id of the user's root folder.",parameter:"member_folder_id",type:{primitive:"String"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},mmOD:function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},MinimalFileLinkMetadata:{fields:[{description:"URL of the shared link.",parameter:"url",type:{primitive:"String"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"Unique identifier for the linked file.",parameter:"id",type:{optional:{primitive:"String"}}},{description:"Full path in the user's Dropbox. This always starts with a slash. This field will only be present only if the linked file is in the authenticated user's Dropbox.",parameter:"path",type:{optional:{primitive:"String"}}}],stone_type:"struct"},PathOrLink:{fields:[{parameter:"path",type:{primitive:"String"}},{parameter:"link",type:{datatype:"SharedLinkFileInfo",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PreviewResult:{fields:[{description:"Metadata corresponding to the file received as an argument. Will be populated if the endpoint is called with a path (ReadPath).",parameter:"file_metadata",type:{optional:{datatype:"FileMetadata",namespace:"files"}}},{description:"Minimal metadata corresponding to the file received as an argument. Will be populated if the endpoint is called using a shared link (SharedLinkFileInfo).",parameter:"link_metadata",type:{optional:{datatype:"MinimalFileLinkMetadata",namespace:"files"}}}],stone_type:"struct"},SharedLinkFileInfo:{fields:[{description:"The shared link corresponding to either a file or shared link to a folder. If it is for a folder shared link, we use the path param to determine for which file in the folder the view is for.",parameter:"url",type:{primitive:"String"}},{description:"The path corresponding to a file in a shared link to a folder. Required for shared links to folders.",parameter:"path",type:{optional:{primitive:"String"}}},{description:"Password for the shared link. Required for password-protected shared links to files  unless it can be read from a cookie.",parameter:"password",type:{optional:{primitive:"String"}}}],stone_type:"struct"},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"},ThumbnailFormat:{fields:[{parameter:"jpeg",type:{primitive:"Void"}},{parameter:"png",type:{primitive:"Void"}}],stone_type:"union"},ThumbnailMode:{fields:[{description:"Scale down the image to fit within the given size.",parameter:"strict",type:{primitive:"Void"}},{description:"Scale down the image to fit within the given size or its transpose.",parameter:"bestfit",type:{primitive:"Void"}},{description:"Scale down the image to completely cover the given size or its transpose.",parameter:"fitone_bestfit",type:{primitive:"Void"}}],stone_type:"union"},ThumbnailSize:{fields:[{description:"32 by 32 px.",parameter:"w32h32",type:{primitive:"Void"}},{description:"64 by 64 px.",parameter:"w64h64",type:{primitive:"Void"}},{description:"128 by 128 px.",parameter:"w128h128",type:{primitive:"Void"}},{description:"256 by 256 px.",parameter:"w256h256",type:{primitive:"Void"}},{description:"480 by 320 px.",parameter:"w480h320",type:{primitive:"Void"}},{description:"640 by 480 px.",parameter:"w640h480",type:{primitive:"Void"}},{description:"960 by 640 px.",parameter:"w960h640",type:{primitive:"Void"}},{description:"1024 by 768 px.",parameter:"w1024h768",type:{primitive:"Void"}},{description:"2048 by 1536 px.",parameter:"w2048h1536",type:{primitive:"Void"}}],stone_type:"union"},ThumbnailV2Arg:{fields:[{description:"Information specifying which file to preview. This could be a path to a file, a shared link pointing to a file, or a shared link pointing to a folder, with a relative path.",parameter:"resource",type:{datatype:"PathOrLink",namespace:"files"}},{description:"The format for the thumbnail image, jpeg (default) or png. For  images that are photos, jpeg should be preferred, while png is  better for screenshots and digital arts.",parameter:"format",type:{datatype:"ThumbnailFormat",namespace:"files"}},{description:"The size for the thumbnail image.",parameter:"size",type:{datatype:"ThumbnailSize",namespace:"files"}},{description:"How to resize and crop the image to achieve the desired size.",parameter:"mode",type:{datatype:"ThumbnailMode",namespace:"files"}}],stone_type:"struct"},ThumbnailV2Error:{fields:[{description:"An error occurred when downloading metadata for the image.",parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{description:"The file extension doesn't allow conversion to a thumbnail.",parameter:"unsupported_extension",type:{primitive:"Void"}},{description:"The image cannot be converted to a thumbnail.",parameter:"unsupported_image",type:{primitive:"Void"}},{description:"An error occurred during thumbnail conversion.",parameter:"conversion_error",type:{primitive:"Void"}},{description:"Access to this shared link is forbidden.",parameter:"access_denied",type:{primitive:"Void"}},{description:"The shared link does not exist.",parameter:"not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},mwLw:function(e,t,i){var r=i("+dZb")("get",i("edSL"));r.placeholder=i("IOY3"),e.exports=r},myMw:function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"},ThumbnailArg:{fields:[{description:"The path to the image file you want to thumbnail.",parameter:"path",type:{primitive:"String"}},{description:"The format for the thumbnail image, jpeg (default) or png. For  images that are photos, jpeg should be preferred, while png is  better for screenshots and digital arts.",parameter:"format",type:{datatype:"ThumbnailFormat",namespace:"files"}},{description:"The size for the thumbnail image.",parameter:"size",type:{datatype:"ThumbnailSize",namespace:"files"}},{description:"How to resize and crop the image to achieve the desired size.",parameter:"mode",type:{datatype:"ThumbnailMode",namespace:"files"}}],stone_type:"struct"},ThumbnailError:{fields:[{description:"An error occurs when downloading metadata for the image.",parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{description:"The file extension doesn't allow conversion to a thumbnail.",parameter:"unsupported_extension",type:{primitive:"Void"}},{description:"The image cannot be converted to a thumbnail.",parameter:"unsupported_image",type:{primitive:"Void"}},{description:"An error occurs during thumbnail conversion.",parameter:"conversion_error",type:{primitive:"Void"}}],stone_type:"union"},ThumbnailFormat:{fields:[{parameter:"jpeg",type:{primitive:"Void"}},{parameter:"png",type:{primitive:"Void"}}],stone_type:"union"},ThumbnailMode:{fields:[{description:"Scale down the image to fit within the given size.",parameter:"strict",type:{primitive:"Void"}},{description:"Scale down the image to fit within the given size or its transpose.",parameter:"bestfit",type:{primitive:"Void"}},{description:"Scale down the image to completely cover the given size or its transpose.",parameter:"fitone_bestfit",type:{primitive:"Void"}}],stone_type:"union"},ThumbnailSize:{fields:[{description:"32 by 32 px.",parameter:"w32h32",type:{primitive:"Void"}},{description:"64 by 64 px.",parameter:"w64h64",type:{primitive:"Void"}},{description:"128 by 128 px.",parameter:"w128h128",type:{primitive:"Void"}},{description:"256 by 256 px.",parameter:"w256h256",type:{primitive:"Void"}},{description:"480 by 320 px.",parameter:"w480h320",type:{primitive:"Void"}},{description:"640 by 480 px.",parameter:"w640h480",type:{primitive:"Void"}},{description:"960 by 640 px.",parameter:"w960h640",type:{primitive:"Void"}},{description:"1024 by 768 px.",parameter:"w1024h768",type:{primitive:"Void"}},{description:"2048 by 1536 px.",parameter:"w2048h1536",type:{primitive:"Void"}}],stone_type:"union"}}}},n59X:function(e,t,i){},n7Nx:function(e,t,i){var r=i("Sq4h"),o=i("s3UK");e.exports=function(e,t,i){var a=1&t,n=r(e);return function t(){var r=this&&this!==o&&this instanceof t?n:e;return r.apply(a?i:this,arguments)}}},nB8Q:function(e,t,i){"use strict";t.a={sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AddFolderMemberArg:{fields:[{description:"The ID for the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The intended list of members to add.  Added members will receive invites to join the shared folder.",parameter:"members",type:{list:{datatype:"AddMember",namespace:"sharing"}}},{description:"Whether added members should be notified via email and device notifications of their invite.",parameter:"quiet",type:{primitive:"Boolean"}},{description:"Optional message to display to added members in their invitation.",parameter:"custom_message",type:{optional:{primitive:"String"}}}],stone_type:"struct"},AddFolderMemberError:{fields:[{description:"Unable to access shared folder.",parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{description:"The current user's e-mail address is unverified.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The current user has been banned.",parameter:"banned_member",type:{primitive:"Void"}},{description:":field:`AddFolderMemberArg.members` contains a bad invitation recipient.",parameter:"bad_member",type:{datatype:"AddMemberSelectorError",namespace:"sharing"}},{description:"Your team policy does not allow sharing outside of the team.",parameter:"cant_share_outside_team",type:{primitive:"Void"}},{description:"The value is the member limit that was reached.",parameter:"too_many_members",type:{primitive:"UInt64"}},{description:"The value is the pending invite limit that was reached.",parameter:"too_many_pending_invites",type:{primitive:"UInt64"}},{description:"The current user has hit the limit of invites they can send per day. Try again in 24 hours.",parameter:"rate_limit",type:{primitive:"Void"}},{description:"The current user is trying to share with too many people at once.",parameter:"too_many_invitees",type:{primitive:"Void"}},{description:"The current user's account doesn't support this action. An example of this is when adding a read-only member. This action can only be performed by users that have upgraded to a Pro or Business plan.",parameter:"insufficient_plan",type:{primitive:"Void"}},{description:"This action cannot be performed on a team shared folder.",parameter:"team_folder",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"Invalid shared folder error will be returned as an access_error.",parameter:"invalid_shared_folder",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AddMember:{description:"The member and type of access the member should have when added to a shared folder.",fields:[{description:"The member to add to the shared folder.",parameter:"member",type:{datatype:"MemberSelector",namespace:"sharing"}},{description:"The access level to grant :field:`member` to the shared folder.  :field:`AccessLevel.owner` is disallowed.",parameter:"access_level",type:{datatype:"AccessLevel",namespace:"sharing"}}],stone_type:"struct"},AddMemberSelectorError:{fields:[{description:"Automatically created groups can only be added to team folders.",parameter:"automatic_group",type:{primitive:"Void"}},{description:"The value is the ID that could not be identified.",parameter:"invalid_dropbox_id",type:{primitive:"String"}},{description:"The value is the e-email address that is malformed.",parameter:"invalid_email",type:{primitive:"String"}},{description:"The value is the ID of the Dropbox user with an unverified e-mail address.  Invite unverified users by e-mail address instead of by their Dropbox ID.",parameter:"unverified_dropbox_id",type:{primitive:"String"}},{description:"At least one of the specified groups in :field:`AddFolderMemberArg.members` is deleted.",parameter:"group_deleted",type:{primitive:"Void"}},{description:"Sharing to a group that is not on the current user's team.",parameter:"group_not_on_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberSelector:{description:"Includes different ways to identify a member of a shared folder.",fields:[{description:"Dropbox account, team member, or group ID of member.",parameter:"dropbox_id",type:{primitive:"String"}},{description:"E-mail address of member.",parameter:"email",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},"nF9+":function(e,t,i){"use strict";t.a={file_properties:{ListTemplateResult:{fields:[{description:"List of identifiers for templates added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_ids",type:{list:{primitive:"String"}}}],stone_type:"struct"},TemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},nI61:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("1pq6"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},nJ9S:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("UGOH"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},nJhi:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("fdgO"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},naAV:function(e,t,i){var r=i("KjZ+");e.exports=function(e){var t=new e.constructor(e.byteLength);return new r(t).set(new r(e)),t}},naDv:function(e,t,i){"use strict";t.a={async:{LaunchResultBase:{description:"Result returned by methods that launch an asynchronous job.\nA method who may either launch an asynchronous job, or complete the request synchronously, can use this union by extending it, and adding a 'complete' field with the type of the synchronous response.\nSee :type:`LaunchEmptyResult` for an example.",fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"union"}},sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberAccessLevelResult:{description:"Contains information about a member's access level to content after an operation.",fields:[{description:"The member still has this level of access to the content through a parent folder.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"A localized string with additional information about why the user has this access level to the content.",parameter:"warning",type:{optional:{primitive:"String"}}},{description:"The parent folders that a member has access to. The field is present if the user has access to the first parent folder where the member gains access.",parameter:"access_details",type:{optional:{list:{datatype:"ParentFolderAccessInfo",namespace:"sharing"}}}}],stone_type:"struct"},MemberAction:{description:"Actions that may be taken on members of a shared folder.",fields:[{description:"Allow the member to keep a copy of the folder when removing.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Make the member an editor of the folder.",parameter:"make_editor",type:{primitive:"Void"}},{description:"Make the member an owner of the folder.",parameter:"make_owner",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder.",parameter:"make_viewer",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder without commenting permissions.",parameter:"make_viewer_no_comment",type:{primitive:"Void"}},{description:"Remove the member from the folder.",parameter:"remove",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberPermission:{description:"Whether the user is allowed to take the action on the associated member.",fields:[{description:"The action that the user may wish to take on the member.",parameter:"action",type:{datatype:"MemberAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},MemberSelector:{description:"Includes different ways to identify a member of a shared folder.",fields:[{description:"Dropbox account, team member, or group ID of member.",parameter:"dropbox_id",type:{primitive:"String"}},{description:"E-mail address of member.",parameter:"email",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ParentFolderAccessInfo:{description:"Contains information about a parent folder that a member has access to.",fields:[{description:"Display name for the folder.",parameter:"folder_name",type:{primitive:"String"}},{description:"The identifier of the parent shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The user's permissions for the parent shared folder.",parameter:"permissions",type:{list:{datatype:"MemberPermission",namespace:"sharing"}}},{description:"The full path to the parent shared folder relative to the acting user's root.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RemoveFolderMemberArg:{fields:[{description:"The ID for the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The member to remove from the folder.",parameter:"member",type:{datatype:"MemberSelector",namespace:"sharing"}},{description:"If true, the removed user will keep their copy of the folder after it's unshared, assuming it was mounted. Otherwise, it will be removed from their Dropbox. Also, this must be set to false when kicking a group.",parameter:"leave_a_copy",type:{primitive:"Boolean"}}],stone_type:"struct"},RemoveFolderMemberError:{fields:[{parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{parameter:"member_error",type:{datatype:"SharedFolderMemberError",namespace:"sharing"}},{description:"The target user is the owner of the shared folder. You can't remove this user until ownership has been transferred to another member.",parameter:"folder_owner",type:{primitive:"Void"}},{description:"The target user has access to the shared folder via a group.",parameter:"group_access",type:{primitive:"Void"}},{description:"This action cannot be performed on a team shared folder.",parameter:"team_folder",type:{primitive:"Void"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"This shared folder has too many files for leaving a copy. You can still remove this user without leaving a copy.",parameter:"too_many_files",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderMemberError:{fields:[{description:"The target dropbox_id is invalid.",parameter:"invalid_dropbox_id",type:{primitive:"Void"}},{description:"The target dropbox_id is not a member of the shared folder.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"The target member only has inherited access to the shared folder.",parameter:"no_explicit_access",type:{datatype:"MemberAccessLevelResult",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},nbMa:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("1Rff"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},nbiN:function(e,t,i){var r=i("H+3J")();e.exports=r},ndoW:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("L0iU"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},nqlD:function(e,t,i){var r=i("mXGw").createContext;e.exports=r,e.exports.default=r},nqmN:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("ouwC"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},nxZd:function(e,t,i){var r=i("SyCk"),o=i("T9Ud");e.exports=function(e){return o(e)&&r(e)}},nxsi:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("XMYa"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},nyCn:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("2DHn"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},o2xN:function(e){e.exports=JSON.parse("[]")},o4P4:function(e,t,i){"use strict";t.a={team:{ExcludedUsersUpdateArg:{description:"Argument of excluded users update operation. Should include a list of users to add/remove (according to endpoint), Maximum size of the list is 1000 users.",fields:[{description:"List of users to be added/removed.",parameter:"users",type:{optional:{list:{datatype:"UserSelectorArg",namespace:"team"}}}}],stone_type:"struct"},ExcludedUsersUpdateError:{description:"Excluded users update error.",fields:[{description:"At least one of the users is not part of your team.",parameter:"users_not_in_team",type:{primitive:"Void"}},{description:"A maximum of 1000 users for each of addition/removal can be supplied.",parameter:"too_many_users",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ExcludedUsersUpdateResult:{description:"Excluded users update result.",fields:[{description:"Update status.",parameter:"status",type:{datatype:"ExcludedUsersUpdateStatus",namespace:"team"}}],stone_type:"struct"},ExcludedUsersUpdateStatus:{description:"Excluded users update operation status.",fields:[{description:"Update successful.",parameter:"success",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},o7nK:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("aPcW"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},oK5c:function(e,t,i){"use strict";t.a={file_properties:{AddTemplateArg:{fields:[{description:"Display name for the template. Template names can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description for the template. Template descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Definitions of the property fields associated with this template. There can be up to 32 properties in a single template.",parameter:"fields",type:{list:{datatype:"PropertyFieldTemplate",namespace:"file_properties"}}}],stone_type:"struct"},AddTemplateResult:{fields:[{description:"An identifier for template added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}}],stone_type:"struct"},ModifyTemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"A property field key with that name already exists in the template.",parameter:"conflicting_property_names",type:{primitive:"Void"}},{description:"There are too many properties in the changed template. The maximum number of properties per template is 32.",parameter:"too_many_properties",type:{primitive:"Void"}},{description:"There are too many templates for the team.",parameter:"too_many_templates",type:{primitive:"Void"}},{description:"The template name, description or one or more of the property field keys is too large.",parameter:"template_attribute_too_large",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyFieldTemplate:{description:"Defines how a single property field may be structured. Used exclusively by :type:`PropertyGroupTemplate`.",fields:[{description:"Key of the property field being described. Property field keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description of the property field. Property field descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Data type of the value of this property field. This type will be enforced upon property creation and modifications.",parameter:"type",type:{datatype:"PropertyType",namespace:"file_properties"}}],stone_type:"struct"},PropertyType:{description:"Data type of the given property field added.",fields:[{description:"The associated property field will be of type string. Unicode is supported.",parameter:"string",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},oKgo:function(e,t,i){},"oMB/":function(e,t,i){"use strict";t.a={files:{ContentSyncSetting:{fields:[{description:"Id of the item this setting is applied to.",parameter:"id",type:{primitive:"String"}},{description:"Setting for this item.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}}],stone_type:"struct"},SyncSetting:{fields:[{description:"On first sync to members' computers, the specified folder will follow its parent folder's setting or otherwise follow default sync behavior.",parameter:"default",type:{primitive:"Void"}},{description:"On first sync to members' computers, the specified folder will be set to not sync with selective sync.",parameter:"not_synced",type:{primitive:"Void"}},{description:"The specified folder's not_synced setting is inactive due to its location or other configuration changes. It will follow its parent folder's setting.",parameter:"not_synced_inactive",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},team:{TeamFolderAccessError:{fields:[{description:"The team folder ID is invalid.",parameter:"invalid_team_folder_id",type:{primitive:"Void"}},{description:"The authenticated app does not have permission to manage that team folder.",parameter:"no_access",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderInvalidStatusError:{fields:[{description:"The folder is active and the operation did not succeed.",parameter:"active",type:{primitive:"Void"}},{description:"The folder is archived and the operation did not succeed.",parameter:"archived",type:{primitive:"Void"}},{description:"The folder is being archived and the operation did not succeed.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderMetadata:{description:"Properties of a team folder.",fields:[{description:"The ID of the team folder.",parameter:"team_folder_id",type:{primitive:"String"}},{description:"The name of the team folder.",parameter:"name",type:{primitive:"String"}},{description:"The status of the team folder.",parameter:"status",type:{datatype:"TeamFolderStatus",namespace:"team"}},{description:"True if this team folder is a shared team root.",parameter:"is_team_shared_dropbox",type:{primitive:"Boolean"}},{description:"The sync setting applied to this team folder.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}},{description:"Sync settings applied to contents of this team folder.",parameter:"content_sync_settings",type:{list:{datatype:"ContentSyncSetting",namespace:"files"}}}],stone_type:"struct"},TeamFolderRenameArg:{fields:[{description:"The ID of the team folder.",parameter:"team_folder_id",type:{primitive:"String"}},{description:"New team folder name.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},TeamFolderRenameError:{fields:[{parameter:"access_error",type:{datatype:"TeamFolderAccessError",namespace:"team"}},{parameter:"status_error",type:{datatype:"TeamFolderInvalidStatusError",namespace:"team"}},{parameter:"team_shared_dropbox_error",type:{datatype:"TeamFolderTeamSharedDropboxError",namespace:"team"}},{parameter:"other",type:{primitive:"Void"}},{description:"The provided folder name cannot be used.",parameter:"invalid_folder_name",type:{primitive:"Void"}},{description:"There is already a team folder with the same name.",parameter:"folder_name_already_used",type:{primitive:"Void"}},{description:"The provided name cannot be used because it is reserved.",parameter:"folder_name_reserved",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderStatus:{fields:[{description:"The team folder and sub-folders are available to all members.",parameter:"active",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archived",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderTeamSharedDropboxError:{fields:[{description:"This action is not allowed for a shared team root.",parameter:"disallowed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},oagz:function(e,t){e.exports=function(e,t,i){for(var r=i-1,o=e.length;++r<o;)if(e[r]===t)return r;return-1}},ofiy:function(e,t,i){var r=i("aCmY"),o=i("VbZR"),a=i("oagz");e.exports=function(e,t,i){return t==t?a(e,t,i):r(e,o,i)}},ogc7:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Vsi7"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},ogqp:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("YGe5"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},ohHe:function(e,t,i){var r=i("GI0s"),o=i("T9Ud"),a=i("NfLg");e.exports=function(e){if(!o(e))return!1;var t=r(e);return"[object Error]"==t||"[object DOMException]"==t||"string"==typeof e.message&&"string"==typeof e.name&&!a(e)}},ol9n:function(e,t,i){"use strict";t.a={team:{ExcludedUsersUpdateArg:{description:"Argument of excluded users update operation. Should include a list of users to add/remove (according to endpoint), Maximum size of the list is 1000 users.",fields:[{description:"List of users to be added/removed.",parameter:"users",type:{optional:{list:{datatype:"UserSelectorArg",namespace:"team"}}}}],stone_type:"struct"},ExcludedUsersUpdateError:{description:"Excluded users update error.",fields:[{description:"At least one of the users is not part of your team.",parameter:"users_not_in_team",type:{primitive:"Void"}},{description:"A maximum of 1000 users for each of addition/removal can be supplied.",parameter:"too_many_users",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ExcludedUsersUpdateResult:{description:"Excluded users update result.",fields:[{description:"Update status.",parameter:"status",type:{datatype:"ExcludedUsersUpdateStatus",namespace:"team"}}],stone_type:"struct"},ExcludedUsersUpdateStatus:{description:"Excluded users update operation status.",fields:[{description:"Update successful.",parameter:"success",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},ouwC:function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},files:{ContentSyncSetting:{fields:[{description:"Id of the item this setting is applied to.",parameter:"id",type:{primitive:"String"}},{description:"Setting for this item.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}}],stone_type:"struct"},SyncSetting:{fields:[{description:"On first sync to members' computers, the specified folder will follow its parent folder's setting or otherwise follow default sync behavior.",parameter:"default",type:{primitive:"Void"}},{description:"On first sync to members' computers, the specified folder will be set to not sync with selective sync.",parameter:"not_synced",type:{primitive:"Void"}},{description:"The specified folder's not_synced setting is inactive due to its location or other configuration changes. It will follow its parent folder's setting.",parameter:"not_synced_inactive",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},team:{TeamFolderAccessError:{fields:[{description:"The team folder ID is invalid.",parameter:"invalid_team_folder_id",type:{primitive:"Void"}},{description:"The authenticated app does not have permission to manage that team folder.",parameter:"no_access",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderArchiveError:{description:"",fields:[{parameter:"access_error",type:{datatype:"TeamFolderAccessError",namespace:"team"}},{parameter:"status_error",type:{datatype:"TeamFolderInvalidStatusError",namespace:"team"}},{parameter:"team_shared_dropbox_error",type:{datatype:"TeamFolderTeamSharedDropboxError",namespace:"team"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderArchiveJobStatus:{fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The archive job has finished. The value is the metadata for the resulting team folder.",parameter:"complete",type:{datatype:"TeamFolderMetadata",namespace:"team"}},{description:"Error occurred while performing an asynchronous job from :route:`team_folder/archive`.",parameter:"failed",type:{datatype:"TeamFolderArchiveError",namespace:"team"}}],stone_type:"union"},TeamFolderInvalidStatusError:{fields:[{description:"The folder is active and the operation did not succeed.",parameter:"active",type:{primitive:"Void"}},{description:"The folder is archived and the operation did not succeed.",parameter:"archived",type:{primitive:"Void"}},{description:"The folder is being archived and the operation did not succeed.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderMetadata:{description:"Properties of a team folder.",fields:[{description:"The ID of the team folder.",parameter:"team_folder_id",type:{primitive:"String"}},{description:"The name of the team folder.",parameter:"name",type:{primitive:"String"}},{description:"The status of the team folder.",parameter:"status",type:{datatype:"TeamFolderStatus",namespace:"team"}},{description:"True if this team folder is a shared team root.",parameter:"is_team_shared_dropbox",type:{primitive:"Boolean"}},{description:"The sync setting applied to this team folder.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}},{description:"Sync settings applied to contents of this team folder.",parameter:"content_sync_settings",type:{list:{datatype:"ContentSyncSetting",namespace:"files"}}}],stone_type:"struct"},TeamFolderStatus:{fields:[{description:"The team folder and sub-folders are available to all members.",parameter:"active",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archived",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderTeamSharedDropboxError:{fields:[{description:"This action is not allowed for a shared team root.",parameter:"disallowed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},oz0i:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("BSFn"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},p446:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("DOBe"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},p7Fa:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("6dxN"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},pCDC:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("4lWb"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},pCs0:function(e,t){var i=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;e.exports=function(e){return e.match(i)||[]}},pCvA:function(e,t){var i;i=function(){return this}();try{i=i||new Function("return this")()}catch(r){"object"==typeof window&&(i=window)}e.exports=i},pDng:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("mgND"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},pEwU:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberProfile:{description:"Profile of a user as a member of a team.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"List of group IDs of groups that the user belongs to.",parameter:"groups",type:{list:{primitive:"String"}}},{description:"The namespace id of the user's root folder.",parameter:"member_folder_id",type:{primitive:"String"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"},TokenGetAuthenticatedAdminError:{description:"Error returned by :route:`token/get_authenticated_admin`.",fields:[{description:"The current token is not associated with a team admin, because mappings were not recorded when the token was created. Consider re-authorizing a new access token to record its authenticating admin.",parameter:"mapping_not_found",type:{primitive:"Void"}},{description:"Either the team admin that authorized this token is no longer an active member of the team or no longer a team admin.",parameter:"admin_not_active",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TokenGetAuthenticatedAdminResult:{description:"Results for :route:`token/get_authenticated_admin`.",fields:[{description:"The admin who authorized the token.",parameter:"admin_profile",type:{datatype:"TeamMemberProfile",namespace:"team"}}],stone_type:"struct"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},pGDa:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("+0YS"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},pVAj:function(e,t,i){"use strict";t.a={file_properties:{ListTemplateResult:{fields:[{description:"List of identifiers for templates added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_ids",type:{list:{primitive:"String"}}}],stone_type:"struct"},TemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},pZIW:function(e,t,i){var r=i("b2OE"),o=i("7IP4"),a=i("OF9M"),n=r&&1/a(new r([,-0]))[1]==1/0?function(e){return new r(e)}:o;e.exports=n},paKX:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("wjXe"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},pjzL:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("1BSY"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},prnS:function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GetThumbnailBatchArg:{description:"Arguments for :route:`get_thumbnail_batch`.",fields:[{description:"List of files to get thumbnails.",parameter:"entries",type:{list:{datatype:"ThumbnailArg",namespace:"files"}}}],stone_type:"struct"},GetThumbnailBatchError:{fields:[{description:"The operation involves more than 25 files.",parameter:"too_many_files",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GetThumbnailBatchResult:{fields:[{description:"List of files and their thumbnails.",parameter:"entries",type:{list:{datatype:"GetThumbnailBatchResultEntry",namespace:"files"}}}],stone_type:"struct"},GetThumbnailBatchResultData:{fields:[{parameter:"metadata",type:{datatype:"FileMetadata",namespace:"files"}},{description:"A string containing the base64-encoded thumbnail data for this file.",parameter:"thumbnail",type:{primitive:"String"}}],stone_type:"struct"},GetThumbnailBatchResultEntry:{fields:[{parameter:"success",type:{datatype:"GetThumbnailBatchResultData",namespace:"files"}},{description:"The result for this file if it was an error.",parameter:"failure",type:{datatype:"ThumbnailError",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"},ThumbnailArg:{fields:[{description:"The path to the image file you want to thumbnail.",parameter:"path",type:{primitive:"String"}},{description:"The format for the thumbnail image, jpeg (default) or png. For  images that are photos, jpeg should be preferred, while png is  better for screenshots and digital arts.",parameter:"format",type:{datatype:"ThumbnailFormat",namespace:"files"}},{description:"The size for the thumbnail image.",parameter:"size",type:{datatype:"ThumbnailSize",namespace:"files"}},{description:"How to resize and crop the image to achieve the desired size.",parameter:"mode",type:{datatype:"ThumbnailMode",namespace:"files"}}],stone_type:"struct"},ThumbnailError:{fields:[{description:"An error occurs when downloading metadata for the image.",parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{description:"The file extension doesn't allow conversion to a thumbnail.",parameter:"unsupported_extension",type:{primitive:"Void"}},{description:"The image cannot be converted to a thumbnail.",parameter:"unsupported_image",type:{primitive:"Void"}},{description:"An error occurs during thumbnail conversion.",parameter:"conversion_error",type:{primitive:"Void"}}],stone_type:"union"},ThumbnailFormat:{fields:[{parameter:"jpeg",type:{primitive:"Void"}},{parameter:"png",type:{primitive:"Void"}}],stone_type:"union"},ThumbnailMode:{fields:[{description:"Scale down the image to fit within the given size.",parameter:"strict",type:{primitive:"Void"}},{description:"Scale down the image to fit within the given size or its transpose.",parameter:"bestfit",type:{primitive:"Void"}},{description:"Scale down the image to completely cover the given size or its transpose.",parameter:"fitone_bestfit",type:{primitive:"Void"}}],stone_type:"union"},ThumbnailSize:{fields:[{description:"32 by 32 px.",parameter:"w32h32",type:{primitive:"Void"}},{description:"64 by 64 px.",parameter:"w64h64",type:{primitive:"Void"}},{description:"128 by 128 px.",parameter:"w128h128",type:{primitive:"Void"}},{description:"256 by 256 px.",parameter:"w256h256",type:{primitive:"Void"}},{description:"480 by 320 px.",parameter:"w480h320",type:{primitive:"Void"}},{description:"640 by 480 px.",parameter:"w640h480",type:{primitive:"Void"}},{description:"960 by 640 px.",parameter:"w960h640",type:{primitive:"Void"}},{description:"1024 by 768 px.",parameter:"w1024h768",type:{primitive:"Void"}},{description:"2048 by 1536 px.",parameter:"w2048h1536",type:{primitive:"Void"}}],stone_type:"union"}}}},"q+I6":function(e,t){var i=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var r=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==r||"symbol"!=r&&i.test(e))&&e>-1&&e%1==0&&e<t}},"q+OR":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("S1/a"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},qAaG:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Kb9k"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},qGBT:function(e,t,i){"use strict";t.a={team:{MembersUnsuspendArg:{description:"Exactly one of team_member_id, email, or external_id must be provided to identify the user account.",fields:[{description:"Identity of user to unsuspend.",parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}}],stone_type:"struct"},MembersUnsuspendError:{fields:[{description:"No matching user found. The provided team_member_id, email, or external_id does not exist on this team.",parameter:"user_not_found",type:{primitive:"Void"}},{description:"The user is not a member of the team.",parameter:"user_not_in_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"The user is unsuspended, so it cannot be unsuspended again.",parameter:"unsuspend_non_suspended_member",type:{primitive:"Void"}},{description:"Team is full. The organization has no available licenses.",parameter:"team_license_limit",type:{primitive:"Void"}}],stone_type:"open_union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},qOUx:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("9axb"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},qOfy:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("GCnR"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},qg2j:function(e,t,i){var r=i("Dh2Y"),o=i("JIgs"),a=i("tDyL");e.exports=function(e,t){var i={};return t=a(t,3),o(e,(function(e,o,a){r(i,o,t(e,o,a))})),i}},qkBe:function(e,t,i){var r=i("IqJI"),o=i("tDyL"),a=i("bim0"),n=i("i/JN"),s=i("nxZd"),p=i("mH3y"),d=a((function(e){var t=p(e);return s(t)&&(t=void 0),n(r(e,1,s,!0),o(t,2))}));e.exports=d},qvKQ:function(e,t,i){"use strict";t.a={cloud_docs:{Content:{fields:[{parameter:"purpose",type:{datatype:"ContentPurpose",namespace:"cloud_docs"}},{description:"The key returned from an upload_additional_content response.",parameter:"content_key",type:{primitive:"String"}}],stone_type:"struct"},ContentPurpose:{fields:[{parameter:"search",type:{primitive:"Void"}},{parameter:"preview",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UpdateContentArg:{fields:[{parameter:"file_id",type:{primitive:"String"}},{description:"A list of auth_tokens, one for each editor who made changes to the document since the last call to update_content.",parameter:"actor_tokens",type:{list:{primitive:"String"}}},{description:"Currently, this will always be empty until we implement upload_additional_content.",parameter:"additional_contents",type:{optional:{list:{datatype:"Content",namespace:"cloud_docs"}}}}],stone_type:"struct"},UpdateContentError:{fields:[{description:"The Cloud Doc ID is invalid.",parameter:"invalid_doc_id",type:{primitive:"Void"}},{description:"A Cloud Doc could not be found for the given ID.",parameter:"not_found",type:{primitive:"Void"}},{description:"Permission denied for the Cloud Doc with the given ID.",parameter:"permission_denied",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"Upload payload exceeds maximum allowed size of 150MB.",parameter:"upload_size_too_large",type:{primitive:"Void"}},{description:"A lock on the document identified by path_or_id is held by another editor.",parameter:"conflict",type:{primitive:"Void"}},{description:"A lock is not held on the document identified by path_or_id. Acquire lock before uploading content for the document.",parameter:"unlocked",type:{primitive:"Void"}}],stone_type:"open_union"},UpdateContentResult:{fields:[{description:"Version of the document stored in Dropbox.",parameter:"version",type:{primitive:"String"}}],stone_type:"struct"}}}},r9jV:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("5Q6c"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},rAe6:function(e,t,i){"use strict";t.a={file_properties:{AddTemplateArg:{fields:[{description:"Display name for the template. Template names can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description for the template. Template descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Definitions of the property fields associated with this template. There can be up to 32 properties in a single template.",parameter:"fields",type:{list:{datatype:"PropertyFieldTemplate",namespace:"file_properties"}}}],stone_type:"struct"},AddTemplateResult:{fields:[{description:"An identifier for template added by  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}}],stone_type:"struct"},ModifyTemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"A property field key with that name already exists in the template.",parameter:"conflicting_property_names",type:{primitive:"Void"}},{description:"There are too many properties in the changed template. The maximum number of properties per template is 32.",parameter:"too_many_properties",type:{primitive:"Void"}},{description:"There are too many templates for the team.",parameter:"too_many_templates",type:{primitive:"Void"}},{description:"The template name, description or one or more of the property field keys is too large.",parameter:"template_attribute_too_large",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyFieldTemplate:{description:"Defines how a single property field may be structured. Used exclusively by :type:`PropertyGroupTemplate`.",fields:[{description:"Key of the property field being described. Property field keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description of the property field. Property field descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Data type of the value of this property field. This type will be enforced upon property creation and modifications.",parameter:"type",type:{datatype:"PropertyType",namespace:"file_properties"}}],stone_type:"struct"},PropertyType:{description:"Data type of the given property field added.",fields:[{description:"The associated property field will be of type string. Unicode is supported.",parameter:"string",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},rAxJ:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("s4en"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},rDv2:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("KHFi"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},rDze:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("78S0"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},rE0G:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("c27i"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},rV0Y:function(e,t,i){var r=i("LSEb")(i("s3UK"),"Promise");e.exports=r},rkZl:function(e,t,i){"use strict";t.a={files:{DeleteArg:{fields:[{description:"Path in the user's Dropbox to delete.",parameter:"path",type:{primitive:"String"}},{description:'Perform delete if given "rev" matches the existing file\'s latest "rev". This field does not support deleting a folder.',parameter:"parent_rev",type:{optional:{primitive:"String"}}}],stone_type:"struct"},DeleteError:{fields:[{parameter:"path_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"path_write",type:{datatype:"WriteError",namespace:"files"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{description:"There are too many files in one request. Please retry with fewer files.",parameter:"too_many_files",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},rmlw:function(e,t,i){"use strict";t.a={sharing:{SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UnmountFolderArg:{fields:[{description:"The ID for the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}}],stone_type:"struct"},UnmountFolderError:{fields:[{parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"The shared folder can't be unmounted. One example where this can occur is when the shared folder's parent folder is also a shared folder that resides in the current user's Dropbox.",parameter:"not_unmountable",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},rrk0:function(e,t){e.exports=function(e){var t=-1,i=Array(e.size);return e.forEach((function(e,r){i[++t]=[r,e]})),i}},"rs+a":function(e,t,i){"use strict";t.a={team:{CustomQuotaError:{description:"Error returned when getting member custom quota.",fields:[{description:"A maximum of 1000 users can be set for a single call.",parameter:"too_many_users",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},CustomQuotaResult:{description:"User custom quota.",fields:[{description:"User's custom quota.",parameter:"success",type:{datatype:"UserCustomQuotaResult",namespace:"team"}},{description:"Invalid user (not in team).",parameter:"invalid_user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},CustomQuotaUsersArg:{fields:[{description:"List of users.",parameter:"users",type:{list:{datatype:"UserSelectorArg",namespace:"team"}}}],stone_type:"struct"},UserCustomQuotaResult:{description:"User and their custom quota in GB (1 TB = 1024 GB).  No quota returns if the user has no custom quota set.",fields:[{parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"quota_gb",type:{optional:{primitive:"UInt32"}}}],stone_type:"struct"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},rsUP:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("9cwD"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},rzlk:function(e,t,i){"use strict";i.r(t);var r=i("mK0O"),o=i("mXGw"),a=i.n(o),n=i("IOVJ");function s(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}t.default=function(e){var t=e.location,i=e.pageResources;return i?a.a.createElement(n.a,function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?s(Object(i),!0).forEach((function(t){Object(r.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({location:t,pageResources:i},i.json)):null}},"s+zF":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("5Bmw"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},s3UK:function(e,t,i){var r=i("FfeU"),o="object"==typeof self&&self&&self.Object===Object&&self,a=r||o||Function("return this")();e.exports=a},s3t7:function(e,t,i){var r=i("VNQV"),o=i("0KRy"),a=i("rV0Y"),n=i("b2OE"),s=i("fxeQ"),p=i("GI0s"),d=i("bE7W"),l=d(r),m=d(o),c=d(a),h=d(n),u=d(s),f=p;(r&&"[object DataView]"!=f(new r(new ArrayBuffer(1)))||o&&"[object Map]"!=f(new o)||a&&"[object Promise]"!=f(a.resolve())||n&&"[object Set]"!=f(new n)||s&&"[object WeakMap]"!=f(new s))&&(f=function(e){var t=p(e),i="[object Object]"==t?e.constructor:void 0,r=i?d(i):"";if(r)switch(r){case l:return"[object DataView]";case m:return"[object Map]";case c:return"[object Promise]";case h:return"[object Set]";case u:return"[object WeakMap]"}return t}),e.exports=f},s4en:function(e,t,i){"use strict";t.a={files:{DeleteArg:{fields:[{description:"Path in the user's Dropbox to delete.",parameter:"path",type:{primitive:"String"}},{description:'Perform delete if given "rev" matches the existing file\'s latest "rev". This field does not support deleting a folder.',parameter:"parent_rev",type:{optional:{primitive:"String"}}}],stone_type:"struct"},DeleteError:{fields:[{parameter:"path_lookup",type:{datatype:"LookupError",namespace:"files"}},{parameter:"path_write",type:{datatype:"WriteError",namespace:"files"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{description:"There are too many files in one request. Please retry with fewer files.",parameter:"too_many_files",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},DeleteResult:{fields:[{description:"Metadata of the deleted object.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},s8DQ:function(e,t,i){"use strict";t.a={async:{LaunchEmptyResult:{description:"Result returned by methods that may either launch an asynchronous job or complete synchronously. Upon synchronous completion of the job, no additional information is returned.",fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{description:"The job finished synchronously and successfully.",parameter:"complete",type:{primitive:"Void"}}],stone_type:"union"}},team:{MembersRemoveArg:{fields:[{description:"Identity of user to remove/suspend/have their files moved.",parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{description:"If provided, controls if the user's data will be deleted on their linked devices.",parameter:"wipe_data",type:{primitive:"Boolean"}},{description:"If provided, files from the deleted member account will be transferred to this user.",parameter:"transfer_dest_id",type:{optional:{datatype:"UserSelectorArg",namespace:"team"}}},{description:"If provided, errors during the transfer process will be sent via email to this user. If the transfer_dest_id argument was provided, then this argument must be provided as well.",parameter:"transfer_admin_id",type:{optional:{datatype:"UserSelectorArg",namespace:"team"}}},{description:"Downgrade the member to a Basic account. The user will retain the email address associated with their Dropbox  account and data in their account that is not restricted to team members. In order to keep the account the argument :field:`wipe_data` should be set to :val:`false`.",parameter:"keep_account",type:{primitive:"Boolean"}},{description:"If provided, allows removed users to keep access to Dropbox folders (not Dropbox Paper folders) already explicitly shared with them (not via a group) when they are downgraded to a Basic account. Users will not retain access to folders that do not allow external sharing. In order to keep the sharing relationships, the arguments :field:`wipe_data` should be set to :val:`false` and :field:`keep_account` should be set to :val:`true`.",parameter:"retain_team_shares",type:{primitive:"Boolean"}}],stone_type:"struct"},MembersRemoveError:{fields:[{description:"No matching user found. The provided team_member_id, email, or external_id does not exist on this team.",parameter:"user_not_found",type:{primitive:"Void"}},{description:"The user is not a member of the team.",parameter:"user_not_in_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"Expected removed user and transfer_dest user to be different.",parameter:"removed_and_transfer_dest_should_differ",type:{primitive:"Void"}},{description:"Expected removed user and transfer_admin user to be different.",parameter:"removed_and_transfer_admin_should_differ",type:{primitive:"Void"}},{description:"No matching user found for the argument transfer_dest_id.",parameter:"transfer_dest_user_not_found",type:{primitive:"Void"}},{description:"The provided transfer_dest_id does not exist on this team.",parameter:"transfer_dest_user_not_in_team",type:{primitive:"Void"}},{description:"The provided transfer_admin_id does not exist on this team.",parameter:"transfer_admin_user_not_in_team",type:{primitive:"Void"}},{description:"No matching user found for the argument transfer_admin_id.",parameter:"transfer_admin_user_not_found",type:{primitive:"Void"}},{description:"The transfer_admin_id argument must be provided when file transfer is requested.",parameter:"unspecified_transfer_admin_id",type:{primitive:"Void"}},{description:"Specified transfer_admin user is not a team admin.",parameter:"transfer_admin_is_not_admin",type:{primitive:"Void"}},{description:"The recipient user's email is not verified.",parameter:"recipient_not_verified",type:{primitive:"Void"}},{description:"The user is the last admin of the team, so it cannot be removed from it.",parameter:"remove_last_admin",type:{primitive:"Void"}},{description:"Cannot keep account and transfer the data to another user at the same time.",parameter:"cannot_keep_account_and_transfer",type:{primitive:"Void"}},{description:"Cannot keep account and delete the data at the same time. To keep the account the argument wipe_data should be set to :val:`false`.",parameter:"cannot_keep_account_and_delete_data",type:{primitive:"Void"}},{description:"The email address of the user is too long to be disabled.",parameter:"email_address_too_long_to_be_disabled",type:{primitive:"Void"}},{description:"Cannot keep account of an invited user.",parameter:"cannot_keep_invited_user_account",type:{primitive:"Void"}},{description:"Cannot retain team shares when the user's data is marked for deletion on their linked devices. The argument wipe_data should be set to :val:`false`.",parameter:"cannot_retain_shares_when_data_wiped",type:{primitive:"Void"}},{description:"The user's account must be kept in order to retain team shares. The argument keep_account should be set to :val:`true`.",parameter:"cannot_retain_shares_when_no_account_kept",type:{primitive:"Void"}},{description:"Externally sharing files, folders, and links must be enabled in team settings in order to retain team shares for the user.",parameter:"cannot_retain_shares_when_team_external_sharing_off",type:{primitive:"Void"}},{description:"Only a team admin, can convert this account to a Basic account.",parameter:"cannot_keep_account",type:{primitive:"Void"}},{description:"This user content is currently being held. To convert this member's account to a Basic account, you'll first need to remove them from the hold.",parameter:"cannot_keep_account_under_legal_hold",type:{primitive:"Void"}},{description:"To convert this member to a Basic account, they'll first need to sign in to Dropbox and agree to the terms of service.",parameter:"cannot_keep_account_required_to_sign_tos",type:{primitive:"Void"}}],stone_type:"open_union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},sDwo:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("vF0A"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},sEby:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("2XF/"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},sWZd:function(e,t,i){var r=i("PqlX"),o=i("BwbT"),a=i("ULAX"),n=i("zYYD");e.exports=function(e,t){return r(e)?e:o(e,t)?[e]:a(n(e))}},scUu:function(e,t,i){e.exports={ary:i("MNFw"),assign:i("wnk4"),clone:i("5u71"),curry:i("WYPT"),forEach:i("WMT/"),isArray:i("PqlX"),isError:i("ohHe"),isFunction:i("RqPZ"),isWeakMap:i("TSPQ"),iteratee:i("vft2"),keys:i("Lalj"),rearg:i("YODn"),toInteger:i("LF0y"),toPath:i("ii79")}},scqR:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("yvxV"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},sdIU:function(e,t,i){"use strict";t.a={sharing:{LinkAccessLevel:{fields:[{description:"Users who use the link can view and comment on the content.",parameter:"viewer",type:{primitive:"Void"}},{description:"Users who use the link can edit, view and comment on the content.",parameter:"editor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermissions:{fields:[{description:"Whether the caller can revoke the shared link.",parameter:"can_revoke",type:{primitive:"Boolean"}},{description:"The current visibility of the link after considering the shared links policies of the the team (in case the link's owner is part of a team) and the shared folder (in case the linked file is part of a shared folder). This field is shown only if the caller has access to this info (the link's owner always has access to this data). For some links, an effective_audience value is returned instead.",parameter:"resolved_visibility",type:{optional:{datatype:"ResolvedVisibility",namespace:"sharing"}}},{description:"The shared link's requested visibility. This can be overridden by the team and shared folder policies. The final visibility, after considering these policies, can be found in :field:`resolved_visibility`. This is shown only if the caller is the link's owner and resolved_visibility is returned instead of effective_audience.",parameter:"requested_visibility",type:{optional:{datatype:"RequestedVisibility",namespace:"sharing"}}},{description:"The failure reason for revoking the link. This field will only be present if the :field:`can_revoke` is :val:`false`.",parameter:"revoke_failure_reason",type:{optional:{datatype:"SharedLinkAccessFailureReason",namespace:"sharing"}}},{description:"The type of audience who can benefit from the access level specified by the `link_access_level` field.",parameter:"effective_audience",type:{optional:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The access level that the link will grant to its users. A link can grant additional rights to a user beyond their current access level. For example, if a user was invited as a viewer to a file, and then opens a link with `link_access_level` set to `editor`, then they will gain editor privileges. The `link_access_level` is a property of the link, and does not depend on who is calling this API. In particular, `link_access_level` does not take into account the API caller's current permissions to the content.",parameter:"link_access_level",type:{optional:{datatype:"LinkAccessLevel",namespace:"sharing"}}}],stone_type:"struct"},ModifySharedLinkSettingsArgs:{fields:[{description:"URL of the shared link to change its settings.",parameter:"url",type:{primitive:"String"}},{description:"Set of settings for the shared link.",parameter:"settings",type:{datatype:"SharedLinkSettings",namespace:"sharing"}},{description:"If set to true, removes the expiration of the shared link.",parameter:"remove_expiration",type:{primitive:"Boolean"}}],stone_type:"struct"},ModifySharedLinkSettingsError:{fields:[{description:"The shared link wasn't found.",parameter:"shared_link_not_found",type:{primitive:"Void"}},{description:"The caller is not allowed to access this shared link.",parameter:"shared_link_access_denied",type:{primitive:"Void"}},{description:"This type of link is not supported; use :route:`files.export` instead.",parameter:"unsupported_link_type",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"There is an error with the given settings.",parameter:"settings_error",type:{datatype:"SharedLinkSettingsError",namespace:"sharing"}},{description:"The caller's email should be verified.",parameter:"email_not_verified",type:{primitive:"Void"}}],stone_type:"open_union"},RequestedLinkAccessLevel:{fields:[{description:"Users who use the link can view and comment on the content.",parameter:"viewer",type:{primitive:"Void"}},{description:"Users who use the link can edit, view and comment on the content. Note not all file types support edit links yet.",parameter:"editor",type:{primitive:"Void"}},{description:"Request for the maximum access level you can set the link to.",parameter:"max",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RequestedVisibility:{description:"The access permission that can be requested by the caller for the shared link. Note that the final resolved visibility of the shared link takes into account other aspects, such as team and shared folder settings. Check the :type:`ResolvedVisibility` for more info on the possible resolved visibility values of shared links.",fields:[{description:"Anyone who has received the link can access it. No login required.",parameter:"public",type:{primitive:"Void"}},{description:"Only members of the same team can access the link. Login is required.",parameter:"team_only",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}}],stone_type:"union"},ResolvedVisibility:{description:"The actual access permissions values of shared links after taking into account user preferences and the team and shared folder settings. Check the :type:`RequestedVisibility` for more info on the possible visibility values that can be set by the shared link's owner.",fields:[{description:"Anyone who has received the link can access it. No login required.",parameter:"public",type:{primitive:"Void"}},{description:"Only members of the same team can access the link. Login is required.",parameter:"team_only",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Only members of the same team who have the link-specific password can access the link. Login is required.",parameter:"team_and_password",type:{primitive:"Void"}},{description:"Only members of the shared folder containing the linked file can access the link. Login is required.",parameter:"shared_folder_only",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLinkAccessFailureReason:{fields:[{description:"User is not logged in.",parameter:"login_required",type:{primitive:"Void"}},{description:"User's email is not verified.",parameter:"email_verify_required",type:{primitive:"Void"}},{description:"The link is password protected.",parameter:"password_required",type:{primitive:"Void"}},{description:"Access is allowed for team members only.",parameter:"team_only",type:{primitive:"Void"}},{description:"Access is allowed for the shared link's owner only.",parameter:"owner_only",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedLinkMetadata:{description:"The metadata of a shared link.",fields:[{description:"URL of the shared link.",parameter:"url",type:{primitive:"String"}},{description:"The linked file name (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The link's access permissions.",parameter:"link_permissions",type:{datatype:"LinkPermissions",namespace:"sharing"}},{description:"A unique identifier for the linked file.",parameter:"id",type:{optional:{primitive:"String"}}},{description:"Expiration time, if set. By default the link won't expire.",parameter:"expires",type:{optional:{primitive:"Timestamp"}}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will only be present only if the linked file is in the authenticated user's  dropbox.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The team membership information of the link's owner.  This field will only be present  if the link's owner is a team member.",parameter:"team_member_info",type:{optional:{datatype:"TeamMemberInfo",namespace:"sharing"}}},{description:"The team information of the content's owner. This field will only be present if the content's owner is a team member and the content's owner team is different from the link's owner team.",parameter:"content_owner_team_info",type:{optional:{datatype:"Team",namespace:"users"}}}],stone_type:"struct",todo:!0},SharedLinkSettings:{fields:[{description:"The requested access for this shared link.",parameter:"requested_visibility",type:{optional:{datatype:"RequestedVisibility",namespace:"sharing"}}},{description:"If :field:`requested_visibility` is :field:`RequestedVisibility.password` this is needed to specify the password to access the link.",parameter:"link_password",type:{optional:{primitive:"String"}}},{description:"Expiration time of the shared link. By default the link won't expire.",parameter:"expires",type:{optional:{primitive:"Timestamp"}}},{description:"The new audience who can benefit from the access level specified by the link's access level specified in the `link_access_level` field of `LinkPermissions`. This is used in conjunction with team policies and shared folder policies to determine the final effective audience type in the `effective_audience` field of `LinkPermissions.",parameter:"audience",type:{optional:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"Requested access level you want the audience to gain from this link. Note, modifying access level for an existing link is not supported.",parameter:"access",type:{optional:{datatype:"RequestedLinkAccessLevel",namespace:"sharing"}}}],stone_type:"struct"},SharedLinkSettingsError:{fields:[{description:"The given settings are invalid (for example, all attributes of the :type:`SharedLinkSettings` are empty, the requested visibility is :field:`RequestedVisibility.password` but the :field:`SharedLinkSettings.link_password` is missing, :field:`SharedLinkSettings.expires` is set to the past, etc.).",parameter:"invalid_settings",type:{primitive:"Void"}},{description:"User is not allowed to modify the settings of this link. Note that basic users can only set :field:`RequestedVisibility.public` as the :field:`SharedLinkSettings.requested_visibility` and cannot set :field:`SharedLinkSettings.expires`.",parameter:"not_authorized",type:{primitive:"Void"}}],stone_type:"union"},TeamMemberInfo:{description:"Information about a team member.",fields:[{description:"Information about the member's team.",parameter:"team_info",type:{datatype:"Team",namespace:"users"}},{description:"The display name of the user.",parameter:"display_name",type:{primitive:"String"}},{description:"ID of user as a member of a team. This field will only be present if the member is in the same team as current user.",parameter:"member_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},sqvh:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("b1Uc"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},tDyL:function(e,t,i){var r=i("wiKJ"),o=i("kXPx"),a=i("yoW1"),n=i("PqlX"),s=i("0qVv");e.exports=function(e){return"function"==typeof e?e:null==e?a:"object"==typeof e?n(e)?o(e[0],e[1]):r(e):s(e)}},taMz:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("kPK8"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},"tb+2":function(e,t,i){var r=i("07F0"),o=i("E7Xw"),a=Object.prototype.propertyIsEnumerable,n=Object.getOwnPropertySymbols,s=n?function(e){return null==e?[]:(e=Object(e),r(n(e),(function(t){return a.call(e,t)})))}:o;e.exports=s},teEV:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Kesh"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},tfKQ:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("YXVp"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},tfRC:function(e,t,i){"use strict";t.a={files:{ContentSyncSetting:{fields:[{description:"Id of the item this setting is applied to.",parameter:"id",type:{primitive:"String"}},{description:"Setting for this item.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}}],stone_type:"struct"},SyncSetting:{fields:[{description:"On first sync to members' computers, the specified folder will follow its parent folder's setting or otherwise follow default sync behavior.",parameter:"default",type:{primitive:"Void"}},{description:"On first sync to members' computers, the specified folder will be set to not sync with selective sync.",parameter:"not_synced",type:{primitive:"Void"}},{description:"The specified folder's not_synced setting is inactive due to its location or other configuration changes. It will follow its parent folder's setting.",parameter:"not_synced_inactive",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},team:{TeamFolderAccessError:{fields:[{description:"The team folder ID is invalid.",parameter:"invalid_team_folder_id",type:{primitive:"Void"}},{description:"The authenticated app does not have permission to manage that team folder.",parameter:"no_access",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderListArg:{fields:[{description:"The maximum number of results to return per request.",parameter:"limit",type:{primitive:"UInt32"}}],stone_type:"struct"},TeamFolderListError:{fields:[{parameter:"access_error",type:{datatype:"TeamFolderAccessError",namespace:"team"}}],stone_type:"struct"},TeamFolderListResult:{description:"Result for :route:`team_folder/list` and :route:`team_folder/list/continue`.",fields:[{description:"List of all team folders in the authenticated team.",parameter:"team_folders",type:{list:{datatype:"TeamFolderMetadata",namespace:"team"}}},{description:"Pass the cursor into :route:`team_folder/list/continue` to obtain additional team folders.",parameter:"cursor",type:{primitive:"String"}},{description:"Is true if there are additional team folders that have not been returned yet. An additional call to :route:`team_folder/list/continue` can retrieve them.",parameter:"has_more",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamFolderMetadata:{description:"Properties of a team folder.",fields:[{description:"The ID of the team folder.",parameter:"team_folder_id",type:{primitive:"String"}},{description:"The name of the team folder.",parameter:"name",type:{primitive:"String"}},{description:"The status of the team folder.",parameter:"status",type:{datatype:"TeamFolderStatus",namespace:"team"}},{description:"True if this team folder is a shared team root.",parameter:"is_team_shared_dropbox",type:{primitive:"Boolean"}},{description:"The sync setting applied to this team folder.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}},{description:"Sync settings applied to contents of this team folder.",parameter:"content_sync_settings",type:{list:{datatype:"ContentSyncSetting",namespace:"files"}}}],stone_type:"struct"},TeamFolderStatus:{fields:[{description:"The team folder and sub-folders are available to all members.",parameter:"active",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archived",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},tfj2:function(e,t,i){(function(e){var r=i("s3UK"),o=i("1ezk"),a=t&&!t.nodeType&&t,n=a&&"object"==typeof e&&e&&!e.nodeType&&e,s=n&&n.exports===a?r.Buffer:void 0,p=(s?s.isBuffer:void 0)||o;e.exports=p}).call(this,i("RoC8")(e))},tilW:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("jvgW"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},tk5P:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("JAzK"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},u2vY:function(e,t,i){var r=i("Exs5");e.exports=function(e){return function(t){return r(t,e)}}},u6UW:function(e,t,i){var r=i("O76R")((function(e,t,i){return e+(i?"-":"")+t.toLowerCase()}));e.exports=r},u7St:function(e,t){var i=Date.now;e.exports=function(e){var t=0,r=0;return function(){var o=i(),a=16-(o-r);if(r=o,a>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},uRZf:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("YtR8"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},ucKr:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("yjxx"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},uhQy:function(e,t,i){"use strict";t.a={files:{ListFolderContinueArg:{fields:[{description:"The cursor returned by your last call to :route:`list_folder` or :route:`list_folder/continue`.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},ListFolderContinueError:{fields:[{parameter:"path",type:{datatype:"LookupError",namespace:"files"}},{description:"Indicates that the cursor has been invalidated. Call :route:`list_folder` to obtain a new cursor.",parameter:"reset",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListFolderResult:{fields:[{description:"The files and (direct) subfolders in the folder.",parameter:"entries",type:{list:{datatype:"Metadata",namespace:"files"}}},{description:"Pass the cursor into :route:`list_folder/continue` to see what's changed in the folder since your previous query.",parameter:"cursor",type:{primitive:"String"}},{description:"If true, then there are more entries available. Pass the cursor to :route:`list_folder/continue` to retrieve the rest.",parameter:"has_more",type:{primitive:"Boolean"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0}}}},"uj+d":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("jzUB"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},utPc:function(e,t,i){"use strict";t.a={team:{DeleteSecondaryEmailResult:{description:"Result of trying to delete a secondary email address. 'success' is the only value indicating that a secondary email was successfully deleted. The other values explain the type of error that occurred, and include the email for which the error occured.",fields:[{description:"The secondary email was successfully deleted.",parameter:"success",type:{primitive:"String"}},{description:"The email address was not found for the user.",parameter:"not_found",type:{primitive:"String"}},{description:"The email address is the primary email address of the user, and cannot be removed.",parameter:"cannot_remove_primary",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},DeleteSecondaryEmailsArg:{fields:[{description:"List of users and their secondary emails to delete.",parameter:"emails_to_delete",type:{list:{datatype:"UserSecondaryEmailsArg",namespace:"team"}}}],stone_type:"struct"},DeleteSecondaryEmailsResult:{fields:[{parameter:"results",type:{list:{datatype:"UserDeleteResult",namespace:"team"}}}],stone_type:"struct"},UserDeleteEmailsResult:{fields:[{parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"results",type:{list:{datatype:"DeleteSecondaryEmailResult",namespace:"team"}}}],stone_type:"struct"},UserDeleteResult:{description:"Result of trying to delete a user's secondary emails. 'success' is the only value indicating that a user was successfully retrieved for deleting secondary emails. The other values explain the type of error that occurred, and include the user for which the error occured.",fields:[{description:"Describes a user and the results for each attempt to delete a secondary email.",parameter:"success",type:{datatype:"UserDeleteEmailsResult",namespace:"team"}},{description:"Specified user is not a valid target for deleting secondary emails.",parameter:"invalid_user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UserSecondaryEmailsArg:{description:"User and a list of secondary emails.",fields:[{parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{parameter:"secondary_emails",type:{list:{primitive:"String"}}}],stone_type:"struct"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}}}},"v/yk":function(e,t,i){"use strict";t.a={sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AclUpdatePolicy:{description:"Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.",fields:[{description:"Only the owner can update the ACL.",parameter:"owner",type:{primitive:"Void"}},{description:"Any editor can update the ACL. This may be further restricted to editors on the same team.",parameter:"editors",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AudienceExceptionContentInfo:{description:"Information about the content that has a link audience different than that of this folder.",fields:[{description:"The name of the content, which is either a file or a folder.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},AudienceExceptions:{description:"The total count and truncated list of information of content inside this folder that has a different audience than the link on this folder. This is only returned for folders.",fields:[{parameter:"count",type:{primitive:"UInt32"}},{description:"A truncated list of some of the content that is an exception. The length of this list could be smaller than the count since it is only a sample but will not be empty as long as count is not 0.",parameter:"exceptions",type:{list:{datatype:"AudienceExceptionContentInfo",namespace:"sharing"}}}],stone_type:"struct"},AudienceRestrictingSharedFolder:{description:"Information about the shared folder that prevents the link audience for this link from being more restrictive.",fields:[{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The name of the shared folder.",parameter:"name",type:{primitive:"String"}},{description:"The link audience of the shared folder.",parameter:"audience",type:{datatype:"LinkAudience",namespace:"sharing"}}],stone_type:"struct"},ExpectedSharedContentLinkMetadata:{description:"The expected metadata of a shared link for a file or folder when a link is first created for the content. Absent if the link already exists.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileAction:{description:"Sharing actions that may be taken on files.",fields:[{description:"Disable viewer information on the file.",parameter:"disable_viewer_info",type:{primitive:"Void"}},{description:"Change or edit contents of the file.",parameter:"edit_contents",type:{primitive:"Void"}},{description:"Enable viewer information on the file.",parameter:"enable_viewer_info",type:{primitive:"Void"}},{description:"Add a member with view permissions.",parameter:"invite_viewer",type:{primitive:"Void"}},{description:"Add a member with view permissions but no comment permissions.",parameter:"invite_viewer_no_comment",type:{primitive:"Void"}},{description:"Add a member with edit permissions.",parameter:"invite_editor",type:{primitive:"Void"}},{description:"Stop sharing this file.",parameter:"unshare",type:{primitive:"Void"}},{description:"Relinquish one's own membership to the file.",parameter:"relinquish_membership",type:{primitive:"Void"}},{description:"Use create_view_link and create_edit_link instead.",parameter:"share_link",type:{primitive:"Void"}},{description:"Use create_view_link and create_edit_link instead.",parameter:"create_link",type:{primitive:"Void"}},{description:"Create a shared link to a file that only allows users to view the content.",parameter:"create_view_link",type:{primitive:"Void"}},{description:"Create a shared link to a file that allows users to edit the content.",parameter:"create_edit_link",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FilePermission:{description:"Whether the user is allowed to take the sharing action on the file.",fields:[{description:"The action that the user may wish to take on the file.",parameter:"action",type:{datatype:"FileAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},FolderPolicy:{description:"A set of policies governing membership and privileges for a shared folder.",fields:[{description:"Who can add and remove members from this shared folder.",parameter:"acl_update_policy",type:{datatype:"AclUpdatePolicy",namespace:"sharing"}},{description:"Who links can be shared with.",parameter:"shared_link_policy",type:{datatype:"SharedLinkPolicy",namespace:"sharing"}},{description:"Who can be a member of this shared folder, as set on the folder itself. The effective policy may differ from this value if the team-wide policy is more restrictive. Present only if the folder is owned by a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can be a member of this shared folder, taking into account both the folder and the team-wide policy. This value may differ from that of member_policy if the team-wide policy is more restrictive than the folder policy. Present only if the folder is owned by a team.",parameter:"resolved_member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}}],stone_type:"struct"},GetFileMetadataArg:{description:"Arguments of :route:`get_file_metadata`.",fields:[{description:"The file to query.",parameter:"file",type:{primitive:"String"}},{description:"A list of `FileAction`s corresponding to `FilePermission`s that should appear in the  response's :field:`SharedFileMetadata.permissions` field describing the actions the  authenticated user can perform on the file.",parameter:"actions",type:{optional:{list:{datatype:"FileAction",namespace:"sharing"}}}}],stone_type:"struct"},GetFileMetadataError:{description:"Error result for :route:`get_file_metadata`.",fields:[{parameter:"user_error",type:{datatype:"SharingUserError",namespace:"sharing"}},{parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAction:{description:"Actions that can be performed on a link.",fields:[{description:"Change the access level of the link.",parameter:"change_access_level",type:{primitive:"Void"}},{description:"Change the audience of the link.",parameter:"change_audience",type:{primitive:"Void"}},{description:"Remove the expiry date of the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Remove the password of the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Create or modify the expiry date of the link.",parameter:"set_expiry",type:{primitive:"Void"}},{description:"Create or modify the password of the link.",parameter:"set_password",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermission:{description:"Permissions for actions that can be performed on a link.",fields:[{parameter:"action",type:{datatype:"LinkAction",namespace:"sharing"}},{parameter:"allow",type:{primitive:"Boolean"}},{parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},MemberPolicy:{description:"Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.",fields:[{description:"Only a teammate can become a member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can become a member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedContentLinkMetadata:{description:"Metadata of a shared link for a file or folder.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The URL of the link.",parameter:"url",type:{primitive:"String"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}},{description:"The content inside this folder with link audience different than this folder's. This is only returned when an endpoint that returns metadata for a single shared folder is called, e.g. /get_folder_metadata.",parameter:"audience_exceptions",type:{optional:{datatype:"AudienceExceptions",namespace:"sharing"}}}],stone_type:"struct"},SharedFileMetadata:{description:"Properties of the shared file.",fields:[{description:"The ID of the file.",parameter:"id",type:{primitive:"String"}},{description:"The name of this file.",parameter:"name",type:{primitive:"String"}},{description:"Policies governing this shared file.",parameter:"policy",type:{datatype:"FolderPolicy",namespace:"sharing"}},{description:"URL for displaying a web preview of the shared file.",parameter:"preview_url",type:{primitive:"String"}},{description:"The current user's access level for this shared file.",parameter:"access_type",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The expected metadata of the link associated for the file when it is first shared. Absent if the link already exists. This is for an unreleased feature so it may not be returned yet.",parameter:"expected_link_metadata",type:{optional:{datatype:"ExpectedSharedContentLinkMetadata",namespace:"sharing"}}},{description:"The metadata of the link associated for the file. This is for an unreleased feature so it may not be returned yet.",parameter:"link_metadata",type:{optional:{datatype:"SharedContentLinkMetadata",namespace:"sharing"}}},{description:"The display names of the users that own the file. If the file is part of a team folder, the display names of the team admins are also included. Absent if the owner display names cannot be fetched.",parameter:"owner_display_names",type:{optional:{list:{primitive:"String"}}}},{description:"The team that owns the file. This field is not present if the file is not owned by a team.",parameter:"owner_team",type:{optional:{datatype:"Team",namespace:"users"}}},{description:"The ID of the parent shared folder. This field is present only if the file is contained within a shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1. Absent for unmounted files.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"The lower-case full path of this file. Absent for unmounted files.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The sharing permissions that requesting user has on this file. This corresponds to the entries given in :field:`GetFileMetadataBatchArg.actions` or :field:`GetFileMetadataArg.actions`.",parameter:"permissions",type:{optional:{list:{datatype:"FilePermission",namespace:"sharing"}}}},{description:"Timestamp indicating when the current user was invited to this shared file. If the user was not invited to the shared file, the timestamp will indicate when the user was invited to the parent shared folder. This value may be absent.",parameter:"time_invited",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},SharedLinkPolicy:{description:"Who can view shared links in this folder.",fields:[{description:"Links can be shared with anyone.",parameter:"anyone",type:{primitive:"Void"}},{description:"Links can be shared with anyone on the same team as the owner.",parameter:"team",type:{primitive:"Void"}},{description:"Links can only be shared among members of the shared folder.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingFileAccessError:{description:"User could not access this file.",fields:[{description:"Current user does not have sufficient privileges to perform the desired action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"File specified was not found.",parameter:"invalid_file",type:{primitive:"Void"}},{description:"A folder can't be shared this way. Use folder sharing or a shared link instead.",parameter:"is_folder",type:{primitive:"Void"}},{description:"A file inside a public folder can't be shared this way. Use a public link instead.",parameter:"inside_public_folder",type:{primitive:"Void"}},{description:"A Mac OS X package can't be shared this way. Use a shared link instead.",parameter:"inside_osx_package",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingUserError:{description:"User account had a problem preventing this action.",fields:[{description:"The current user must verify the account e-mail address before performing this action.",parameter:"email_unverified",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ViewerInfoPolicy:{fields:[{description:"Viewer information is available on this file.",parameter:"enabled",type:{primitive:"Void"}},{description:"Viewer information is disabled on this file.",parameter:"disabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},vDbd:function(e,t,i){var r=i("V2ZB"),o=i("Vujp");e.exports=function(e){return r(e,o(e))}},vF0A:function(e,t,i){"use strict";t.a={files:{ContentSyncSetting:{fields:[{description:"Id of the item this setting is applied to.",parameter:"id",type:{primitive:"String"}},{description:"Setting for this item.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}}],stone_type:"struct"},SyncSetting:{fields:[{description:"On first sync to members' computers, the specified folder will follow its parent folder's setting or otherwise follow default sync behavior.",parameter:"default",type:{primitive:"Void"}},{description:"On first sync to members' computers, the specified folder will be set to not sync with selective sync.",parameter:"not_synced",type:{primitive:"Void"}},{description:"The specified folder's not_synced setting is inactive due to its location or other configuration changes. It will follow its parent folder's setting.",parameter:"not_synced_inactive",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},team:{TeamFolderAccessError:{fields:[{description:"The team folder ID is invalid.",parameter:"invalid_team_folder_id",type:{primitive:"Void"}},{description:"The authenticated app does not have permission to manage that team folder.",parameter:"no_access",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderArchiveArg:{fields:[{description:"The ID of the team folder.",parameter:"team_folder_id",type:{primitive:"String"}},{description:"Whether to force the archive to happen synchronously.",parameter:"force_async_off",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamFolderArchiveError:{description:"",fields:[{parameter:"access_error",type:{datatype:"TeamFolderAccessError",namespace:"team"}},{parameter:"status_error",type:{datatype:"TeamFolderInvalidStatusError",namespace:"team"}},{parameter:"team_shared_dropbox_error",type:{datatype:"TeamFolderTeamSharedDropboxError",namespace:"team"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderArchiveLaunch:{fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{parameter:"complete",type:{datatype:"TeamFolderMetadata",namespace:"team"}}],stone_type:"union"},TeamFolderInvalidStatusError:{fields:[{description:"The folder is active and the operation did not succeed.",parameter:"active",type:{primitive:"Void"}},{description:"The folder is archived and the operation did not succeed.",parameter:"archived",type:{primitive:"Void"}},{description:"The folder is being archived and the operation did not succeed.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderMetadata:{description:"Properties of a team folder.",fields:[{description:"The ID of the team folder.",parameter:"team_folder_id",type:{primitive:"String"}},{description:"The name of the team folder.",parameter:"name",type:{primitive:"String"}},{description:"The status of the team folder.",parameter:"status",type:{datatype:"TeamFolderStatus",namespace:"team"}},{description:"True if this team folder is a shared team root.",parameter:"is_team_shared_dropbox",type:{primitive:"Boolean"}},{description:"The sync setting applied to this team folder.",parameter:"sync_setting",type:{datatype:"SyncSetting",namespace:"files"}},{description:"Sync settings applied to contents of this team folder.",parameter:"content_sync_settings",type:{list:{datatype:"ContentSyncSetting",namespace:"files"}}}],stone_type:"struct"},TeamFolderStatus:{fields:[{description:"The team folder and sub-folders are available to all members.",parameter:"active",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archived",type:{primitive:"Void"}},{description:"The team folder is not accessible outside of the team folder manager.",parameter:"archive_in_progress",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TeamFolderTeamSharedDropboxError:{fields:[{description:"This action is not allowed for a shared team root.",parameter:"disallowed",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},vLtW:function(e,t,i){"use strict";t.a={files:{ListFolderLongpollArg:{fields:[{description:"A cursor as returned by :route:`list_folder` or :route:`list_folder/continue`. Cursors retrieved by setting :field:`ListFolderArg.include_media_info` to :val:`true` are not supported.",parameter:"cursor",type:{primitive:"String"}},{description:"A timeout in seconds. The request will block for at most this length of time, plus up to 90 seconds of random jitter added to avoid the thundering herd problem. Care should be taken when using this parameter, as some network infrastructure does not support long timeouts.",parameter:"timeout",type:{primitive:"UInt64"}}],stone_type:"struct"},ListFolderLongpollError:{fields:[{description:"Indicates that the cursor has been invalidated. Call :route:`list_folder` to obtain a new cursor.",parameter:"reset",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListFolderLongpollResult:{fields:[{description:"Indicates whether new changes are available. If true, call :route:`list_folder/continue` to retrieve the changes.",parameter:"changes",type:{primitive:"Boolean"}},{description:"If present, backoff for at least this many seconds before calling :route:`list_folder/longpoll` again.",parameter:"backoff",type:{optional:{primitive:"UInt64"}}}],stone_type:"struct"}}}},vMVM:function(e,t,i){var r=i("jgJv"),o=Object.prototype,a=o.hasOwnProperty,n=o.toString,s=r?r.toStringTag:void 0;e.exports=function(e){var t=a.call(e,s),i=e[s];try{e[s]=void 0;var r=!0}catch(p){}var o=n.call(e);return r&&(t?e[s]=i:delete e[s]),o}},"vR+s":function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("GDdE"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},vVN2:function(e,t,i){"use strict";t.a={file_properties:{AddPropertiesArg:{fields:[{description:"A unique identifier for the file or folder.",parameter:"path",type:{primitive:"String"}},{description:"The property groups which are to be added to a Dropbox file. No two groups in the input should  refer to the same template.",parameter:"property_groups",type:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}],stone_type:"struct"},AddPropertiesError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{parameter:"path",type:{datatype:"LookupError",namespace:"file_properties"}},{description:"This folder cannot be tagged. Tagging folders is not supported for team-owned templates.",parameter:"unsupported_folder",type:{primitive:"Void"}},{description:"One or more of the supplied property field values is too large.",parameter:"property_field_too_large",type:{primitive:"Void"}},{description:"One or more of the supplied property fields does not conform to the template specifications.",parameter:"does_not_fit_template",type:{primitive:"Void"}},{description:"There are 2 or more property groups referring to the same templates in the input.",parameter:"duplicate_property_groups",type:{primitive:"Void"}},{description:"A property group associated with this template and file already exists.",parameter:"property_group_already_exists",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{parameter:"malformed_path",type:{primitive:"String"}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}}}},vWFG:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{AdminTier:{description:"Describes which team-related admin permissions a user has.",fields:[{description:"User is an administrator of the team - has all permissions.",parameter:"team_admin",type:{primitive:"Void"}},{description:"User can do most user provisioning, de-provisioning and management.",parameter:"user_management_admin",type:{primitive:"Void"}},{description:"User can do a limited set of common support tasks for existing users.",parameter:"support_admin",type:{primitive:"Void"}},{description:"User is not an admin of the team.",parameter:"member_only",type:{primitive:"Void"}}],stone_type:"union"},MembersSetProfileArg:{description:"Exactly one of team_member_id, email, or external_id must be provided to identify the user account.\nAt least one of new_email, new_external_id, new_given_name, and/or new_surname must be provided.",fields:[{description:"Identity of user whose profile will be set.",parameter:"user",type:{datatype:"UserSelectorArg",namespace:"team"}},{description:"New email for member.",parameter:"new_email",type:{optional:{primitive:"String"}}},{description:"New external ID for member.",parameter:"new_external_id",type:{optional:{primitive:"String"}}},{description:"New given name for member.",parameter:"new_given_name",type:{optional:{primitive:"String"}}},{description:"New surname for member.",parameter:"new_surname",type:{optional:{primitive:"String"}}},{description:"New persistent ID. This field only available to teams using persistent ID SAML configuration.",parameter:"new_persistent_id",type:{optional:{primitive:"String"}}},{description:"New value for whether the user is a directory restricted user.",parameter:"new_is_directory_restricted",type:{optional:{primitive:"Boolean"}}}],stone_type:"struct"},MembersSetProfileError:{fields:[{description:"No matching user found. The provided team_member_id, email, or external_id does not exist on this team.",parameter:"user_not_found",type:{primitive:"Void"}},{description:"The user is not a member of the team.",parameter:"user_not_in_team",type:{primitive:"Void"}},{description:"It is unsafe to use both external_id and new_external_id.",parameter:"external_id_and_new_external_id_unsafe",type:{primitive:"Void"}},{description:"None of new_email, new_given_name, new_surname, or new_external_id are specified.",parameter:"no_new_data_specified",type:{primitive:"Void"}},{description:"Email is already reserved for another user.",parameter:"email_reserved_for_other_user",type:{primitive:"Void"}},{description:"The external ID is already in use by another team member.",parameter:"external_id_used_by_other_user",type:{primitive:"Void"}},{description:"Modifying deleted users is not allowed.",parameter:"set_profile_disallowed",type:{primitive:"Void"}},{description:"Parameter new_email cannot be empty.",parameter:"param_cannot_be_empty",type:{primitive:"Void"}},{description:"Persistent ID is only available to teams with persistent ID SAML configuration. Please contact Dropbox for more information.",parameter:"persistent_id_disabled",type:{primitive:"Void"}},{description:"The persistent ID is already in use by another team member.",parameter:"persistent_id_used_by_other_user",type:{primitive:"Void"}},{description:"Directory Restrictions option is not available.",parameter:"directory_restricted_off",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberInfo:{description:"Information about a team member.",fields:[{description:"Profile of a user as a member of a team.",parameter:"profile",type:{datatype:"TeamMemberProfile",namespace:"team"}},{description:"The user's role in the team.",parameter:"role",type:{datatype:"AdminTier",namespace:"team"}}],stone_type:"struct"},TeamMemberProfile:{description:"Profile of a user as a member of a team.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"List of group IDs of groups that the user belongs to.",parameter:"groups",type:{list:{primitive:"String"}}},{description:"The namespace id of the user's root folder.",parameter:"member_folder_id",type:{primitive:"String"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"},UserSelectorArg:{description:"Argument for selecting a single user, either by team_member_id, external_id or email.",fields:[{parameter:"team_member_id",type:{primitive:"String"}},{parameter:"external_id",type:{primitive:"String"}},{parameter:"email",type:{primitive:"String"}}],stone_type:"union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},vdEC:function(e,t,i){var r=i("e+GP");function o(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}e.exports=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==r(e)&&"function"!=typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var i={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var s=a?Object.getOwnPropertyDescriptor(e,n):null;s&&(s.get||s.set)?Object.defineProperty(i,n,s):i[n]=e[n]}return i.default=e,t&&t.set(e,i),i}},vfsU:function(e,t,i){"use strict";t.a={file_properties:{InvalidPropertyGroupError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{parameter:"path",type:{datatype:"LookupError",namespace:"file_properties"}},{description:"This folder cannot be tagged. Tagging folders is not supported for team-owned templates.",parameter:"unsupported_folder",type:{primitive:"Void"}},{description:"One or more of the supplied property field values is too large.",parameter:"property_field_too_large",type:{primitive:"Void"}},{description:"One or more of the supplied property fields does not conform to the template specifications.",parameter:"does_not_fit_template",type:{primitive:"Void"}},{description:"There are 2 or more property groups referring to the same templates in the input.",parameter:"duplicate_property_groups",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{parameter:"malformed_path",type:{primitive:"String"}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{CommitInfo:{fields:[{description:"Path in the user's Dropbox to save the file.",parameter:"path",type:{primitive:"String"}},{description:"Selects what to do if the file already exists.",parameter:"mode",type:{datatype:"WriteMode",namespace:"files"}},{description:"If there's a conflict, as determined by :field:`mode`, have the Dropbox server try to autorename the file to avoid conflict.",parameter:"autorename",type:{primitive:"Boolean"}},{description:"The value to store as the :field:`client_modified` timestamp. Dropbox automatically records the time at which the file was written to the Dropbox servers. It can also record an additional timestamp, provided by Dropbox desktop clients, mobile clients, and API apps of when the file was actually created or modified.",parameter:"client_modified",type:{optional:{primitive:"Timestamp"}}},{description:"Normally, users are made aware of any file modifications in their Dropbox account via notifications in the client software. If :val:`true`, this tells the clients that this modification shouldn't result in a user notification.",parameter:"mute",type:{primitive:"Boolean"}},{description:"List of custom properties to add to file.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:'Be more strict about how each :type:`WriteMode` detects conflict. For example, always return a conflict error when :field:`mode` = :field:`WriteMode.update` and the given "rev" doesn\'t match the existing file\'s "rev", even if the existing file has been deleted.',parameter:"strict_conflict",type:{primitive:"Boolean"}}],stone_type:"struct"},Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"},UploadError:{fields:[{description:"Unable to save the uploaded contents to a file.",parameter:"path",type:{datatype:"UploadWriteFailed",namespace:"files"}},{description:"The supplied property group is invalid. The file has uploaded without property groups.",parameter:"properties_error",type:{datatype:"InvalidPropertyGroupError",namespace:"file_properties"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UploadWriteFailed:{fields:[{description:"The reason why the file couldn't be saved.",parameter:"reason",type:{datatype:"WriteError",namespace:"files"}},{description:"The upload session ID; data has already been uploaded to the corresponding upload session and this ID may be used to retry the commit with :route:`upload_session/finish`.",parameter:"upload_session_id",type:{primitive:"String"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteMode:{description:"Your intent when writing a file to some path. This is used to determine what constitutes a conflict and what the autorename strategy is.\nIn some situations, the conflict behavior is identical: (a) If the target path doesn't refer to anything, the file is always written; no conflict. (b) If the target path refers to a folder, it's always a conflict. (c) If the target path refers to a file with identical contents, nothing gets written; no conflict.\nThe conflict checking differs in the case where there's a file at the target path with contents different from the contents you're trying to write.",fields:[{description:'Do not overwrite an existing file if there is a conflict. The autorename strategy is to append a number to the file name. For example, "document.txt" might become "document (2).txt".',parameter:"add",type:{primitive:"Void"}},{description:"Always overwrite the existing file. The autorename strategy is the same as it is for :field:`add`.",parameter:"overwrite",type:{primitive:"Void"}},{description:'Overwrite if the given "rev" matches the existing file\'s "rev". The autorename strategy is to append the string "conflicted copy" to the file name. For example, "document.txt" might become "document (conflicted copy).txt" or "document (Panda\'s conflicted copy).txt".',parameter:"update",type:{primitive:"String"}}],stone_type:"union"}}}},vft2:function(e,t,i){var r=i("0711"),o=i("tDyL");e.exports=function(e){return o("function"==typeof e?e:r(e,1))}},vh2y:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("pEwU"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},vhWV:function(e,t,i){"use strict";t.__esModule=!0,t.parsePath=function(e){var t=e||"/",i="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var a=t.indexOf("?");-1!==a&&(i=t.substr(a),t=t.substr(0,a));return{pathname:t,search:"?"===i?"":i,hash:"#"===r?"":r}}},viao:function(e,t,i){"use strict";t.a={file_requests:{DeleteAllClosedFileRequestsError:{description:"There was an error deleting all closed file requests.",fields:[{description:"This user's Dropbox Business team doesn't allow file requests.",parameter:"disabled_for_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"This file request ID was not found.",parameter:"not_found",type:{primitive:"Void"}},{description:"The specified path is not a folder.",parameter:"not_a_folder",type:{primitive:"Void"}},{description:"This file request is not accessible to this app. Apps with the app folder permission can only access file requests in their app folder.",parameter:"app_lacks_access",type:{primitive:"Void"}},{description:"This user doesn't have permission to access or modify this file request.",parameter:"no_permission",type:{primitive:"Void"}},{description:"This user's email address is not verified. File requests are only available on accounts with a verified email address. Users can verify their email address :link:`here https://www.dropbox.com/help/317`.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"There was an error validating the request. For example, the title was invalid, or there were disallowed characters in the destination path.",parameter:"validation_error",type:{primitive:"Void"}}],stone_type:"open_union"},DeleteAllClosedFileRequestsResult:{description:"Result for :route:`delete_all_closed`.",fields:[{description:"The file requests deleted for this user.",parameter:"file_requests",type:{list:{datatype:"FileRequest",namespace:"file_requests"}}}],stone_type:"struct"},FileRequest:{description:"A :link:`file request https://www.dropbox.com/help/9090` for receiving files into the user's Dropbox account.",fields:[{description:"The ID of the file request.",parameter:"id",type:{primitive:"String"}},{description:"The URL of the file request.",parameter:"url",type:{primitive:"String"}},{description:"The title of the file request.",parameter:"title",type:{primitive:"String"}},{description:"When this file request was created.",parameter:"created",type:{primitive:"Timestamp"}},{description:"Whether or not the file request is open. If the file request is closed, it will not accept any more file submissions.",parameter:"is_open",type:{primitive:"Boolean"}},{description:"The number of files this file request has received.",parameter:"file_count",type:{primitive:"Int64"}},{description:"The path of the folder in the Dropbox where uploaded files will be sent. This can be :val:`null` if the destination was removed. For apps with the app folder permission, this will be relative to the app folder.",parameter:"destination",type:{optional:{primitive:"String"}}},{description:"The deadline for this file request. Only set if the request has a deadline.",parameter:"deadline",type:{optional:{datatype:"FileRequestDeadline",namespace:"file_requests"}}}],stone_type:"struct"},FileRequestDeadline:{fields:[{description:"The deadline for this file request.",parameter:"deadline",type:{primitive:"Timestamp"}},{description:"If set, allow uploads after the deadline has passed. These     uploads will be marked overdue.",parameter:"allow_late_uploads",type:{optional:{datatype:"GracePeriod",namespace:"file_requests"}}}],stone_type:"struct"},GracePeriod:{fields:[{parameter:"one_day",type:{primitive:"Void"}},{parameter:"two_days",type:{primitive:"Void"}},{parameter:"seven_days",type:{primitive:"Void"}},{parameter:"thirty_days",type:{primitive:"Void"}},{parameter:"always",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},vmoe:function(e,t,i){"use strict";t.a={file_properties:{InvalidPropertyGroupError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{parameter:"path",type:{datatype:"LookupError",namespace:"file_properties"}},{description:"This folder cannot be tagged. Tagging folders is not supported for team-owned templates.",parameter:"unsupported_folder",type:{primitive:"Void"}},{description:"One or more of the supplied property field values is too large.",parameter:"property_field_too_large",type:{primitive:"Void"}},{description:"One or more of the supplied property fields does not conform to the template specifications.",parameter:"does_not_fit_template",type:{primitive:"Void"}},{description:"There are 2 or more property groups referring to the same templates in the input.",parameter:"duplicate_property_groups",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{parameter:"malformed_path",type:{primitive:"String"}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},OverwritePropertyGroupArg:{fields:[{description:"A unique identifier for the file or folder.",parameter:"path",type:{primitive:"String"}},{description:'The property groups "snapshot" updates to force apply. No two groups in the input should  refer to the same template.',parameter:"property_groups",type:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}],stone_type:"struct"},PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}}}},vvBr:function(e,t,i){var r=i("naAV");e.exports=function(e,t){var i=t?r(e.buffer):e.buffer;return new e.constructor(i,e.byteOffset,e.length)}},w5ta:function(e,t,i){var r=i("PYDc"),o=i("XXCu"),a=i("DZMJ"),n=i("i0JV"),s=i("xKNE");function p(e){var t=-1,i=null==e?0:e.length;for(this.clear();++t<i;){var r=e[t];this.set(r[0],r[1])}}p.prototype.clear=r,p.prototype.delete=o,p.prototype.get=a,p.prototype.has=n,p.prototype.set=s,e.exports=p},wDX8:function(e,t,i){"use strict";t.a={file_properties:{LookUpPropertiesError:{fields:[{description:"No property group was found.",parameter:"property_group_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{parameter:"malformed_path",type:{primitive:"String"}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RemovePropertiesArg:{fields:[{description:"A unique identifier for the file or folder.",parameter:"path",type:{primitive:"String"}},{description:"A list of identifiers for a template created by :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"property_template_ids",type:{list:{primitive:"String"}}}],stone_type:"struct"},RemovePropertiesError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{parameter:"path",type:{datatype:"LookupError",namespace:"file_properties"}},{description:"This folder cannot be tagged. Tagging folders is not supported for team-owned templates.",parameter:"unsupported_folder",type:{primitive:"Void"}},{parameter:"property_group_lookup",type:{datatype:"LookUpPropertiesError",namespace:"file_properties"}}],stone_type:"open_union"}}}},wS8Z:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Z6X3"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},wXp5:function(e,t,i){var r=i("jcrF"),o=i("X3Hh"),a=i("e766");e.exports=function(e){if(e instanceof r)return e.clone();var t=new o(e.__wrapped__,e.__chain__);return t.__actions__=a(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}},we8o:function(e,t,i){"use strict";t.a={sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AclUpdatePolicy:{description:"Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.",fields:[{description:"Only the owner can update the ACL.",parameter:"owner",type:{primitive:"Void"}},{description:"Any editor can update the ACL. This may be further restricted to editors on the same team.",parameter:"editors",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AudienceExceptionContentInfo:{description:"Information about the content that has a link audience different than that of this folder.",fields:[{description:"The name of the content, which is either a file or a folder.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},AudienceExceptions:{description:"The total count and truncated list of information of content inside this folder that has a different audience than the link on this folder. This is only returned for folders.",fields:[{parameter:"count",type:{primitive:"UInt32"}},{description:"A truncated list of some of the content that is an exception. The length of this list could be smaller than the count since it is only a sample but will not be empty as long as count is not 0.",parameter:"exceptions",type:{list:{datatype:"AudienceExceptionContentInfo",namespace:"sharing"}}}],stone_type:"struct"},AudienceRestrictingSharedFolder:{description:"Information about the shared folder that prevents the link audience for this link from being more restrictive.",fields:[{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The name of the shared folder.",parameter:"name",type:{primitive:"String"}},{description:"The link audience of the shared folder.",parameter:"audience",type:{datatype:"LinkAudience",namespace:"sharing"}}],stone_type:"struct"},ExpectedSharedContentLinkMetadata:{description:"The expected metadata of a shared link for a file or folder when a link is first created for the content. Absent if the link already exists.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileAction:{description:"Sharing actions that may be taken on files.",fields:[{description:"Disable viewer information on the file.",parameter:"disable_viewer_info",type:{primitive:"Void"}},{description:"Change or edit contents of the file.",parameter:"edit_contents",type:{primitive:"Void"}},{description:"Enable viewer information on the file.",parameter:"enable_viewer_info",type:{primitive:"Void"}},{description:"Add a member with view permissions.",parameter:"invite_viewer",type:{primitive:"Void"}},{description:"Add a member with view permissions but no comment permissions.",parameter:"invite_viewer_no_comment",type:{primitive:"Void"}},{description:"Add a member with edit permissions.",parameter:"invite_editor",type:{primitive:"Void"}},{description:"Stop sharing this file.",parameter:"unshare",type:{primitive:"Void"}},{description:"Relinquish one's own membership to the file.",parameter:"relinquish_membership",type:{primitive:"Void"}},{description:"Use create_view_link and create_edit_link instead.",parameter:"share_link",type:{primitive:"Void"}},{description:"Use create_view_link and create_edit_link instead.",parameter:"create_link",type:{primitive:"Void"}},{description:"Create a shared link to a file that only allows users to view the content.",parameter:"create_view_link",type:{primitive:"Void"}},{description:"Create a shared link to a file that allows users to edit the content.",parameter:"create_edit_link",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FilePermission:{description:"Whether the user is allowed to take the sharing action on the file.",fields:[{description:"The action that the user may wish to take on the file.",parameter:"action",type:{datatype:"FileAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},FolderPolicy:{description:"A set of policies governing membership and privileges for a shared folder.",fields:[{description:"Who can add and remove members from this shared folder.",parameter:"acl_update_policy",type:{datatype:"AclUpdatePolicy",namespace:"sharing"}},{description:"Who links can be shared with.",parameter:"shared_link_policy",type:{datatype:"SharedLinkPolicy",namespace:"sharing"}},{description:"Who can be a member of this shared folder, as set on the folder itself. The effective policy may differ from this value if the team-wide policy is more restrictive. Present only if the folder is owned by a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can be a member of this shared folder, taking into account both the folder and the team-wide policy. This value may differ from that of member_policy if the team-wide policy is more restrictive than the folder policy. Present only if the folder is owned by a team.",parameter:"resolved_member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAction:{description:"Actions that can be performed on a link.",fields:[{description:"Change the access level of the link.",parameter:"change_access_level",type:{primitive:"Void"}},{description:"Change the audience of the link.",parameter:"change_audience",type:{primitive:"Void"}},{description:"Remove the expiry date of the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Remove the password of the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Create or modify the expiry date of the link.",parameter:"set_expiry",type:{primitive:"Void"}},{description:"Create or modify the password of the link.",parameter:"set_password",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermission:{description:"Permissions for actions that can be performed on a link.",fields:[{parameter:"action",type:{datatype:"LinkAction",namespace:"sharing"}},{parameter:"allow",type:{primitive:"Boolean"}},{parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},ListFilesContinueArg:{description:"Arguments for :route:`list_received_files/continue`.",fields:[{description:"Cursor in :field:`ListFilesResult.cursor`.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},ListFilesContinueError:{description:"Error results for :route:`list_received_files/continue`.",fields:[{description:"User account had a problem.",parameter:"user_error",type:{datatype:"SharingUserError",namespace:"sharing"}},{description:":field:`ListFilesContinueArg.cursor` is invalid.",parameter:"invalid_cursor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListFilesResult:{description:"Success results for :route:`list_received_files`.",fields:[{description:"Information about the files shared with current user.",parameter:"entries",type:{list:{datatype:"SharedFileMetadata",namespace:"sharing"}}},{description:"Cursor used to obtain additional shared files.",parameter:"cursor",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberPolicy:{description:"Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.",fields:[{description:"Only a teammate can become a member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can become a member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedContentLinkMetadata:{description:"Metadata of a shared link for a file or folder.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The URL of the link.",parameter:"url",type:{primitive:"String"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}},{description:"The content inside this folder with link audience different than this folder's. This is only returned when an endpoint that returns metadata for a single shared folder is called, e.g. /get_folder_metadata.",parameter:"audience_exceptions",type:{optional:{datatype:"AudienceExceptions",namespace:"sharing"}}}],stone_type:"struct"},SharedFileMetadata:{description:"Properties of the shared file.",fields:[{description:"The ID of the file.",parameter:"id",type:{primitive:"String"}},{description:"The name of this file.",parameter:"name",type:{primitive:"String"}},{description:"Policies governing this shared file.",parameter:"policy",type:{datatype:"FolderPolicy",namespace:"sharing"}},{description:"URL for displaying a web preview of the shared file.",parameter:"preview_url",type:{primitive:"String"}},{description:"The current user's access level for this shared file.",parameter:"access_type",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The expected metadata of the link associated for the file when it is first shared. Absent if the link already exists. This is for an unreleased feature so it may not be returned yet.",parameter:"expected_link_metadata",type:{optional:{datatype:"ExpectedSharedContentLinkMetadata",namespace:"sharing"}}},{description:"The metadata of the link associated for the file. This is for an unreleased feature so it may not be returned yet.",parameter:"link_metadata",type:{optional:{datatype:"SharedContentLinkMetadata",namespace:"sharing"}}},{description:"The display names of the users that own the file. If the file is part of a team folder, the display names of the team admins are also included. Absent if the owner display names cannot be fetched.",parameter:"owner_display_names",type:{optional:{list:{primitive:"String"}}}},{description:"The team that owns the file. This field is not present if the file is not owned by a team.",parameter:"owner_team",type:{optional:{datatype:"Team",namespace:"users"}}},{description:"The ID of the parent shared folder. This field is present only if the file is contained within a shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1. Absent for unmounted files.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"The lower-case full path of this file. Absent for unmounted files.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The sharing permissions that requesting user has on this file. This corresponds to the entries given in :field:`GetFileMetadataBatchArg.actions` or :field:`GetFileMetadataArg.actions`.",parameter:"permissions",type:{optional:{list:{datatype:"FilePermission",namespace:"sharing"}}}},{description:"Timestamp indicating when the current user was invited to this shared file. If the user was not invited to the shared file, the timestamp will indicate when the user was invited to the parent shared folder. This value may be absent.",parameter:"time_invited",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},SharedLinkPolicy:{description:"Who can view shared links in this folder.",fields:[{description:"Links can be shared with anyone.",parameter:"anyone",type:{primitive:"Void"}},{description:"Links can be shared with anyone on the same team as the owner.",parameter:"team",type:{primitive:"Void"}},{description:"Links can only be shared among members of the shared folder.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingUserError:{description:"User account had a problem preventing this action.",fields:[{description:"The current user must verify the account e-mail address before performing this action.",parameter:"email_unverified",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ViewerInfoPolicy:{fields:[{description:"Viewer information is available on this file.",parameter:"enabled",type:{primitive:"Void"}},{description:"Viewer information is disabled on this file.",parameter:"disabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},whiK:function(e,t,i){"use strict";t.a={file_requests:{CountFileRequestsError:{description:"There was an error counting the file requests.",fields:[{description:"This user's Dropbox Business team doesn't allow file requests.",parameter:"disabled_for_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},CountFileRequestsResult:{description:"Result for :route:`count`.",fields:[{description:"The number file requests owner by this user.",parameter:"file_request_count",type:{primitive:"UInt64"}}],stone_type:"struct"}}}},wiKJ:function(e,t,i){var r=i("VY7S"),o=i("Akg/"),a=i("a7YA");e.exports=function(e){var t=o(e);return 1==t.length&&t[0][2]?a(t[0][0],t[0][1]):function(i){return i===e||r(i,e,t)}}},wjXe:function(e,t,i){"use strict";t.a={async:{PollArg:{description:"Arguments for methods that poll the status of an asynchronous job.",fields:[{description:"Id of the asynchronous job. This is the value of a response returned from the method that launched the job.",parameter:"async_job_id",type:{primitive:"String"}}],stone_type:"struct"},PollEmptyResult:{description:"Result returned by methods that poll for the status of an asynchronous job. Upon completion of the job, no additional information is returned.",fields:[{description:"The asynchronous job is still in progress.",parameter:"in_progress",type:{primitive:"Void"}},{description:"The asynchronous job has completed successfully.",parameter:"complete",type:{primitive:"Void"}}],stone_type:"union"},PollError:{description:"Error returned by methods for polling the status of asynchronous job.",fields:[{description:"The job ID is invalid.",parameter:"invalid_async_job_id",type:{primitive:"Void"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},wnk4:function(e,t,i){var r=i("V2ZB"),o=i("h0av");e.exports=function(e,t){return e&&r(t,o(t),e)}},wpsh:function(e,t){var i=Object.prototype.toString;e.exports=function(e){var t=typeof e;return"undefined"===t?"undefined":null===e?"null":!0===e||!1===e||e instanceof Boolean?"boolean":"string"===t||e instanceof String?"string":"number"===t||e instanceof Number?"number":"function"===t||e instanceof Function?void 0!==e.constructor.name&&"Generator"===e.constructor.name.slice(0,9)?"generatorfunction":"function":void 0!==Array.isArray&&Array.isArray(e)?"array":e instanceof RegExp?"regexp":e instanceof Date?"date":"[object RegExp]"===(t=i.call(e))?"regexp":"[object Date]"===t?"date":"[object Arguments]"===t?"arguments":"[object Error]"===t?"error":"[object Promise]"===t?"promise":function(e){return e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}(e)?"buffer":"[object Set]"===t?"set":"[object WeakSet]"===t?"weakset":"[object Map]"===t?"map":"[object WeakMap]"===t?"weakmap":"[object Symbol]"===t?"symbol":"[object Map Iterator]"===t?"mapiterator":"[object Set Iterator]"===t?"setiterator":"[object String Iterator]"===t?"stringiterator":"[object Array Iterator]"===t?"arrayiterator":"[object Int8Array]"===t?"int8array":"[object Uint8Array]"===t?"uint8array":"[object Uint8ClampedArray]"===t?"uint8clampedarray":"[object Int16Array]"===t?"int16array":"[object Uint16Array]"===t?"uint16array":"[object Int32Array]"===t?"int32array":"[object Uint32Array]"===t?"uint32array":"[object Float32Array]"===t?"float32array":"[object Float64Array]"===t?"float64array":"object"}},wqhB:function(e,t,i){"use strict";t.a={file_properties:{PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}},files:{Dimensions:{description:"Dimensions for a photo or video.",fields:[{description:"Height of the photo/video.",parameter:"height",type:{primitive:"UInt64"}},{description:"Width of the photo/video.",parameter:"width",type:{primitive:"UInt64"}}],stone_type:"struct"},ExportInfo:{description:"Export information for a file.",fields:[{description:"Format to which the file can be exported to.",parameter:"export_as",type:{optional:{primitive:"String"}}}],stone_type:"struct"},FileLockMetadata:{fields:[{description:"True if caller holds the file lock.",parameter:"is_lockholder",type:{optional:{primitive:"Boolean"}}},{description:"The display name of the lock holder.",parameter:"lockholder_name",type:{optional:{primitive:"String"}}},{description:"The account ID of the lock holder if known.",parameter:"lockholder_account_id",type:{optional:{primitive:"String"}}},{description:"The timestamp of the lock was created.",parameter:"created",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},FileMetadata:{fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"A unique identifier for the file.",parameter:"id",type:{primitive:"String"}},{description:"For files, this is the modification time set by the desktop client when the file was added to Dropbox. Since this time is not verified (the Dropbox server stores whatever the desktop client sends up), this should only be used for display purposes (such as sorting) and not, for example, to determine if a file has changed or not.",parameter:"client_modified",type:{primitive:"Timestamp"}},{description:"The last time the file was modified on Dropbox.",parameter:"server_modified",type:{primitive:"Timestamp"}},{description:"A unique identifier for the current revision of a file. This field is the same rev as elsewhere in the API and can be used to detect changes and avoid conflicts.",parameter:"rev",type:{primitive:"String"}},{description:"The file size in bytes.",parameter:"size",type:{primitive:"UInt64"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"Additional information if the file is a photo or video. This field will not be set on entries returned by :route:`list_folder`, :route:`list_folder/continue`, or :route:`get_thumbnail_batch`, starting December 2, 2019.",parameter:"media_info",type:{optional:{datatype:"MediaInfo",namespace:"files"}}},{description:"Set if this file is a symlink.",parameter:"symlink_info",type:{optional:{datatype:"SymlinkInfo",namespace:"files"}}},{description:"Set if this file is contained in a shared folder.",parameter:"sharing_info",type:{optional:{datatype:"FileSharingInfo",namespace:"files"}}},{description:"If true, file can be downloaded directly; else the file must be exported.",parameter:"is_downloadable",type:{primitive:"Boolean"}},{description:"Information about format this file can be exported to. This filed must be set if :field:`is_downloadable` is set to false.",parameter:"export_info",type:{optional:{datatype:"ExportInfo",namespace:"files"}}},{description:"Additional information if the file has custom properties with the property template specified.",parameter:"property_groups",type:{optional:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}},{description:"This flag will only be present if include_has_explicit_shared_members  is true in :route:`list_folder` or :route:`get_metadata`. If this  flag is present, it will be true if this file has any explicit shared  members. This is different from sharing_info in that this could be true  in the case where a file has explicit members but is not contained within  a shared folder.",parameter:"has_explicit_shared_members",type:{optional:{primitive:"Boolean"}}},{description:"A hash of the file content. This field can be used to verify data integrity. For more information see our :link:`Content hash https://www.dropbox.com/developers/reference/content-hash` page.",parameter:"content_hash",type:{optional:{primitive:"String"}}},{description:"If present, the metadata associated with the file's current lock.",parameter:"file_lock_info",type:{optional:{datatype:"FileLockMetadata",namespace:"files"}}}],stone_type:"struct",todo:!0},FileSharingInfo:{description:"Sharing info for a file which is contained by a shared folder.",fields:[{description:"True if the file or folder is inside a read-only shared folder.",parameter:"read_only",type:{primitive:"Boolean"}},{description:"ID of shared folder that holds this file.",parameter:"parent_shared_folder_id",type:{primitive:"String"}},{description:"The last user who modified the file. This field will be null if the user's account has been deleted.",parameter:"modified_by",type:{optional:{primitive:"String"}}}],stone_type:"struct"},GpsCoordinates:{description:"GPS coordinates for a photo or video.",fields:[{description:"Latitude of the GPS coordinates.",parameter:"latitude",type:{primitive:"Float64"}},{description:"Longitude of the GPS coordinates.",parameter:"longitude",type:{primitive:"Float64"}}],stone_type:"struct"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MediaInfo:{fields:[{description:"Indicate the photo/video is still under processing and metadata is not available yet.",parameter:"pending",type:{primitive:"Void"}},{description:"The metadata for the photo/video.",parameter:"metadata",type:{datatype:"MediaMetadata",namespace:"files"}}],stone_type:"union"},MediaMetadata:{description:"Metadata for a photo or video.",fields:[{description:"Dimension of the photo/video.",parameter:"dimensions",type:{optional:{datatype:"Dimensions",namespace:"files"}}},{description:"The GPS coordinate of the photo/video.",parameter:"location",type:{optional:{datatype:"GpsCoordinates",namespace:"files"}}},{description:"The timestamp when the photo/video is taken.",parameter:"time_taken",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct",todo:!0},RestoreArg:{fields:[{description:"The path to save the restored file.",parameter:"path",type:{primitive:"String"}},{description:"The revision to restore.",parameter:"rev",type:{primitive:"String"}}],stone_type:"struct"},RestoreError:{fields:[{description:"An error occurs when downloading metadata for the file.",parameter:"path_lookup",type:{datatype:"LookupError",namespace:"files"}},{description:"An error occurs when trying to restore the file to that path.",parameter:"path_write",type:{datatype:"WriteError",namespace:"files"}},{description:"The revision is invalid. It may not exist.",parameter:"invalid_revision",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SymlinkInfo:{fields:[{description:"The target this symlink points to.",parameter:"target",type:{primitive:"String"}}],stone_type:"struct"},WriteConflictError:{fields:[{description:"There's a file in the way.",parameter:"file",type:{primitive:"Void"}},{description:"There's a folder in the way.",parameter:"folder",type:{primitive:"Void"}},{description:"There's a file at an ancestor path, so we couldn't create the required parent folders.",parameter:"file_ancestor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},WriteError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"Couldn't write to the target path because there was something in the way.",parameter:"conflict",type:{datatype:"WriteConflictError",namespace:"files"}},{description:"The user doesn't have permissions to write to the target location.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"The user doesn't have enough available space (bytes) to write more data.",parameter:"insufficient_space",type:{primitive:"Void"}},{description:"Dropbox will not save the file or folder because of its name.",parameter:"disallowed_name",type:{primitive:"Void"}},{description:"This endpoint cannot move or delete team folders.",parameter:"team_folder",type:{primitive:"Void"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},x7dA:function(e,t,i){var r=i("e766"),o=i("q+I6"),a=Math.min;e.exports=function(e,t){for(var i=e.length,n=a(t.length,i),s=r(e);n--;){var p=t[n];e[n]=o(p,i)?s[p]:void 0}return e}},x9cT:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("v/yk"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},xKNE:function(e,t,i){var r=i("FEiO");e.exports=function(e,t){var i=this.__data__;return this.size+=this.has(e)?0:1,i[e]=r&&void 0===t?"__lodash_hash_undefined__":t,this}},xPR9:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("viao"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},xPnu:function(e,t,i){var r=i("zcvR");e.exports=function(e,t){var i=r(this,e),o=i.size;return i.set(e,t),this.size+=i.size==o?0:1,this}},xUui:function(e,t,i){"use strict";t.a={sharing:{AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FileMemberActionError:{fields:[{description:"Specified member was not found.",parameter:"invalid_member",type:{primitive:"Void"}},{description:"User does not have permission to perform this action on this member.",parameter:"no_permission",type:{primitive:"Void"}},{description:"Specified file was invalid or user does not have access.",parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{description:"The action cannot be completed because the target member does not have explicit access to the file. The return value is the access that the member has to the file from a parent folder.",parameter:"no_explicit_access",type:{datatype:"MemberAccessLevelResult",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FileMemberRemoveActionResult:{fields:[{description:"Member was successfully removed from this file.",parameter:"success",type:{datatype:"MemberAccessLevelResult",namespace:"sharing"}},{description:"User was not able to remove this member.",parameter:"member_error",type:{datatype:"FileMemberActionError",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},MemberAccessLevelResult:{description:"Contains information about a member's access level to content after an operation.",fields:[{description:"The member still has this level of access to the content through a parent folder.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"A localized string with additional information about why the user has this access level to the content.",parameter:"warning",type:{optional:{primitive:"String"}}},{description:"The parent folders that a member has access to. The field is present if the user has access to the first parent folder where the member gains access.",parameter:"access_details",type:{optional:{list:{datatype:"ParentFolderAccessInfo",namespace:"sharing"}}}}],stone_type:"struct"},MemberAction:{description:"Actions that may be taken on members of a shared folder.",fields:[{description:"Allow the member to keep a copy of the folder when removing.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Make the member an editor of the folder.",parameter:"make_editor",type:{primitive:"Void"}},{description:"Make the member an owner of the folder.",parameter:"make_owner",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder.",parameter:"make_viewer",type:{primitive:"Void"}},{description:"Make the member a viewer of the folder without commenting permissions.",parameter:"make_viewer_no_comment",type:{primitive:"Void"}},{description:"Remove the member from the folder.",parameter:"remove",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MemberPermission:{description:"Whether the user is allowed to take the action on the associated member.",fields:[{description:"The action that the user may wish to take on the member.",parameter:"action",type:{datatype:"MemberAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},MemberSelector:{description:"Includes different ways to identify a member of a shared folder.",fields:[{description:"Dropbox account, team member, or group ID of member.",parameter:"dropbox_id",type:{primitive:"String"}},{description:"E-mail address of member.",parameter:"email",type:{primitive:"String"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ParentFolderAccessInfo:{description:"Contains information about a parent folder that a member has access to.",fields:[{description:"Display name for the folder.",parameter:"folder_name",type:{primitive:"String"}},{description:"The identifier of the parent shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The user's permissions for the parent shared folder.",parameter:"permissions",type:{list:{datatype:"MemberPermission",namespace:"sharing"}}},{description:"The full path to the parent shared folder relative to the acting user's root.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},RemoveFileMemberArg:{description:"Arguments for :route:`remove_file_member_2`.",fields:[{description:"File from which to remove members.",parameter:"file",type:{primitive:"String"}},{description:"Member to remove from this file. Note that even if an email is specified, it may result in the removal of a user (not an invitee) if the user's main account corresponds to that email address.",parameter:"member",type:{datatype:"MemberSelector",namespace:"sharing"}}],stone_type:"struct"},RemoveFileMemberError:{description:"Errors for :route:`remove_file_member_2`.",fields:[{parameter:"user_error",type:{datatype:"SharingUserError",namespace:"sharing"}},{parameter:"access_error",type:{datatype:"SharingFileAccessError",namespace:"sharing"}},{description:"This member does not have explicit access to the file and therefore cannot be removed. The return value is the access that a user might have to the file from a parent folder.",parameter:"no_explicit_access",type:{datatype:"MemberAccessLevelResult",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingFileAccessError:{description:"User could not access this file.",fields:[{description:"Current user does not have sufficient privileges to perform the desired action.",parameter:"no_permission",type:{primitive:"Void"}},{description:"File specified was not found.",parameter:"invalid_file",type:{primitive:"Void"}},{description:"A folder can't be shared this way. Use folder sharing or a shared link instead.",parameter:"is_folder",type:{primitive:"Void"}},{description:"A file inside a public folder can't be shared this way. Use a public link instead.",parameter:"inside_public_folder",type:{primitive:"Void"}},{description:"A Mac OS X package can't be shared this way. Use a shared link instead.",parameter:"inside_osx_package",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharingUserError:{description:"User account had a problem preventing this action.",fields:[{description:"The current user must verify the account e-mail address before performing this action.",parameter:"email_unverified",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},xkFB:function(e,t,i){var r=i("CzB4"),o=i("WjON"),a=i("aBIM"),n=i("yVxb"),s=i("xPnu");function p(e){var t=-1,i=null==e?0:e.length;for(this.clear();++t<i;){var r=e[t];this.set(r[0],r[1])}}p.prototype.clear=r,p.prototype.delete=o,p.prototype.get=a,p.prototype.has=n,p.prototype.set=s,e.exports=p},xtsi:function(e,t,i){var r=i("LeKB"),o=i("emEt").publicLoader,a=o.getResourcesForPathname,n=o.getResourcesForPathnameSync,s=o.getResourceURLsForPathname,p=o.loadPage,d=o.loadPageSync;t.apiRunner=function(e,t,i,o){void 0===t&&(t={});var l=r.map((function(i){if(i.plugin[e]){t.getResourcesForPathnameSync=n,t.getResourcesForPathname=a,t.getResourceURLsForPathname=s,t.loadPage=p,t.loadPageSync=d;var r=i.plugin[e](t,i.options);return r&&o&&(t=o({args:t,result:r,plugin:i})),r}}));return(l=l.filter((function(e){return void 0!==e}))).length>0?l:i?[i]:[]},t.apiRunnerAsync=function(e,t,i){return r.reduce((function(i,r){return r.plugin[e]?i.then((function(){return r.plugin[e](t,r.options)})):i}),Promise.resolve())}},xvMO:function(e,t,i){"use strict";t.__esModule=!0,t.useScrollRestoration=function(e){var t=(0,a.useLocation)(),i=(0,o.useContext)(r.ScrollContext),n=(0,o.useRef)();return(0,o.useLayoutEffect)((function(){if(n.current){var r=i.read(t,e);n.current.scrollTo(0,r||0)}}),[]),{ref:n,onScroll:function(){n.current&&i.save(t,e,n.current.scrollTop)}}};var r=i("czn3"),o=i("mXGw"),a=i("JF+v")},yBFp:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("hh6e"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},yDQl:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("CDQ7"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},yEgL:function(e,t,i){"use strict";t.a={team:{DateRange:{description:"Input arguments that can be provided for most reports.",fields:[{description:"Optional starting date (inclusive). If start_date is None or too long ago, this field will  be set to 6 months ago.",parameter:"start_date",type:{optional:{primitive:"Timestamp"}}},{description:"Optional ending date (exclusive).",parameter:"end_date",type:{optional:{primitive:"Timestamp"}}}],stone_type:"struct"},DateRangeError:{description:"Errors that can originate from problems in input arguments to reports.",fields:[{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},GetMembershipReport:{description:"Membership Report Result. Each of the items in the storage report is an array of values, one value per day. If there is no data for a day, then the value will be None.",fields:[{description:"First date present in the results as 'YYYY-MM-DD' or None.",parameter:"start_date",type:{primitive:"String"}},{description:"Team size, for each day.",parameter:"team_size",type:{list:{optional:{primitive:"UInt64"}}}},{description:"The number of pending invites to the team, for each day.",parameter:"pending_invites",type:{list:{optional:{primitive:"UInt64"}}}},{description:"The number of members that joined the team, for each day.",parameter:"members_joined",type:{list:{optional:{primitive:"UInt64"}}}},{description:"The number of suspended team members, for each day.",parameter:"suspended_members",type:{list:{optional:{primitive:"UInt64"}}}},{description:"The total number of licenses the team has, for each day.",parameter:"licenses",type:{list:{optional:{primitive:"UInt64"}}}}],stone_type:"struct"}}}},yF7r:function(e,t,i){var r=i("ZjZ4"),o=i("B4Jh"),a=i("yqAG");e.exports=function(e){return a(o(e,void 0,r),e+"")}},yPSF:function(e,t,i){"use strict";t.a={files:{FileLock:{fields:[{description:"The lock description.",parameter:"content",type:{datatype:"FileLockContent",namespace:"files"}}],stone_type:"struct"},FileLockContent:{fields:[{description:"Empty type to indicate no lock.",parameter:"unlocked",type:{primitive:"Void"}},{description:"A lock held by a single user.",parameter:"single_user",type:{datatype:"SingleUserLock",namespace:"files"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LockConflictError:{fields:[{description:"The lock that caused the conflict.",parameter:"lock",type:{datatype:"FileLock",namespace:"files"}}],stone_type:"struct"},LockFileArg:{fields:[{description:"Path in the user's Dropbox to a file.",parameter:"path",type:{primitive:"String"}}],stone_type:"struct"},LockFileBatchArg:{fields:[{description:"List of 'entries'. Each 'entry' contains a path of the file which will be locked or queried. Duplicate path arguments in the batch are considered only once.",parameter:"entries",type:{list:{datatype:"LockFileArg",namespace:"files"}}}],stone_type:"struct"},LockFileBatchResult:{fields:[{description:"Each Entry in the 'entries' will have '.tag' with the operation status (e.g. success), the metadata for the file and the lock state after the operation.",parameter:"entries",type:{list:{datatype:"LockFileResultEntry",namespace:"files"}}}],stone_type:"struct"},LockFileError:{fields:[{description:"Could not find the specified resource.",parameter:"path_lookup",type:{datatype:"LookupError",namespace:"files"}},{description:"There are too many write operations in user's Dropbox. Please retry this request.",parameter:"too_many_write_operations",type:{primitive:"Void"}},{description:"There are too many files in one request. Please retry with fewer files.",parameter:"too_many_files",type:{primitive:"Void"}},{description:"The user does not have permissions to change the lock state or access the file.",parameter:"no_write_permission",type:{primitive:"Void"}},{description:"Item is a type that cannot be locked.",parameter:"cannot_be_locked",type:{primitive:"Void"}},{description:"Requested file is not currently shared.",parameter:"file_not_shared",type:{primitive:"Void"}},{description:"The user action conflicts with an existing lock on the file.",parameter:"lock_conflict",type:{datatype:"LockConflictError",namespace:"files"}},{description:"Something went wrong with the job on Dropbox's end. You'll need to verify that the action you were taking succeeded, and if not, try again. This should happen very rarely.",parameter:"internal_error",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LockFileResult:{fields:[{description:"Metadata of the file.",parameter:"metadata",type:{datatype:"Metadata",namespace:"files"}},{description:"The file lock state after the operation.",parameter:"lock",type:{datatype:"FileLock",namespace:"files"}}],stone_type:"struct"},LockFileResultEntry:{fields:[{parameter:"success",type:{datatype:"LockFileResult",namespace:"files"}},{parameter:"failure",type:{datatype:"LockFileError",namespace:"files"}}],stone_type:"union"},LookupError:{fields:[{description:"The given path does not satisfy the required path format. Please refer to the :link:`Path formats documentation https://www.dropbox.com/developers/documentation/http/documentation#path-formats` for more information.",parameter:"malformed_path",type:{optional:{primitive:"String"}}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{description:"This operation is not supported for this content type.",parameter:"unsupported_content_type",type:{primitive:"Void"}},{description:"The given path is locked.",parameter:"locked",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},Metadata:{description:"Metadata for a file or folder.",fields:[{description:"The last component of the path (including extension). This never contains a slash.",parameter:"name",type:{primitive:"String"}},{description:"The lowercased full path in the user's Dropbox. This always starts with a slash. This field will be null if the file or folder is not mounted.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"The cased path to be used for display purposes only. In rare instances the casing will not correctly match the user's filesystem, but this behavior will match the path provided in the Core API v1, and at least the last path component will have the correct casing. Changes to only the casing of paths won't be returned by :route:`list_folder/continue`. This field will be null if the file or folder is not mounted.",parameter:"path_display",type:{optional:{primitive:"String"}}},{description:"Please use :field:`FileSharingInfo.parent_shared_folder_id` or :field:`FolderSharingInfo.parent_shared_folder_id` instead.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}}],stone_type:"struct",todo:!0},SingleUserLock:{fields:[{description:"The time the lock was created.",parameter:"created",type:{primitive:"Timestamp"}},{description:"The account ID of the lock holder if known.",parameter:"lock_holder_account_id",type:{primitive:"String"}},{description:"The id of the team of the account holder if it exists.",parameter:"lock_holder_team_id",type:{optional:{primitive:"String"}}}],stone_type:"struct"}}}},yQuk:function(e,t,i){"use strict";t.a={team:{Feature:{description:"A set of features that a Dropbox Business account may support.",fields:[{description:"The number of upload API calls allowed per month.",parameter:"upload_api_rate_limit",type:{primitive:"Void"}},{description:"Does this team have a shared team root.",parameter:"has_team_shared_dropbox",type:{primitive:"Void"}},{description:"Does this team have file events.",parameter:"has_team_file_events",type:{primitive:"Void"}},{description:"Does this team have team selective sync enabled.",parameter:"has_team_selective_sync",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FeatureValue:{description:"The values correspond to entries in :type:`Feature`. You may get different value according to your Dropbox Business plan.",fields:[{parameter:"upload_api_rate_limit",type:{datatype:"UploadApiRateLimitValue",namespace:"team"}},{parameter:"has_team_shared_dropbox",type:{datatype:"HasTeamSharedDropboxValue",namespace:"team"}},{parameter:"has_team_file_events",type:{datatype:"HasTeamFileEventsValue",namespace:"team"}},{parameter:"has_team_selective_sync",type:{datatype:"HasTeamSelectiveSyncValue",namespace:"team"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FeaturesGetValuesBatchArg:{fields:[{description:"A list of features in :type:`Feature`. If the list is empty, this route will return :type:`FeaturesGetValuesBatchError`.",parameter:"features",type:{list:{datatype:"Feature",namespace:"team"}}}],stone_type:"struct"},FeaturesGetValuesBatchError:{fields:[{description:"At least one :type:`Feature` must be included in the :type:`FeaturesGetValuesBatchArg`.features list.",parameter:"empty_features_list",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FeaturesGetValuesBatchResult:{fields:[{parameter:"values",type:{list:{datatype:"FeatureValue",namespace:"team"}}}],stone_type:"struct"},HasTeamFileEventsValue:{description:"The value for :field:`Feature.has_team_file_events`.",fields:[{description:"Does this team have file events.",parameter:"enabled",type:{primitive:"Boolean"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},HasTeamSelectiveSyncValue:{description:"The value for :field:`Feature.has_team_selective_sync`.",fields:[{description:"Does this team have team selective sync enabled.",parameter:"has_team_selective_sync",type:{primitive:"Boolean"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},HasTeamSharedDropboxValue:{description:"The value for :field:`Feature.has_team_shared_dropbox`.",fields:[{description:"Does this team have a shared team root.",parameter:"has_team_shared_dropbox",type:{primitive:"Boolean"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},UploadApiRateLimitValue:{description:"The value for :field:`Feature.upload_api_rate_limit`.",fields:[{description:"This team has unlimited upload API quota. So far both server version account and legacy  account type have unlimited monthly upload api quota.",parameter:"unlimited",type:{primitive:"Void"}},{description:"The number of upload API calls allowed per month.",parameter:"limit",type:{primitive:"UInt32"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},ySkN:function(e,t,i){var r=i("2xEH"),o=i("Qwyb"),a=i("DlYZ"),n=i("Sq4h"),s=i("97Yx"),p=i("XA32"),d=i("x7dA"),l=i("cud3"),m=i("s3UK");e.exports=function e(t,i,c,h,u,f,y,v,_,g){var b=128&i,w=1&i,T=2&i,V=24&i,k=512&i,S=T?void 0:n(t);return function x(){for(var A=arguments.length,P=Array(A),D=A;D--;)P[D]=arguments[D];if(V)var I=p(x),E=a(P,I);if(h&&(P=r(P,h,u,V)),f&&(P=o(P,f,y,V)),A-=E,V&&A<g){var L=l(P,I);return s(t,i,e,x.placeholder,c,P,L,v,_,g-A)}var R=w?c:this,M=T?R[t]:t;return A=P.length,v?P=d(P,v):k&&A>1&&P.reverse(),b&&_<A&&(P.length=_),this&&this!==m&&this instanceof x&&(M=S||n(M)),M.apply(R,P)}}},yT97:function(e,t,i){"use strict";t.a={file_properties:{GetTemplateArg:{fields:[{description:"An identifier for template added by route  See :route:`templates/add_for_user` or :route:`templates/add_for_team`.",parameter:"template_id",type:{primitive:"String"}}],stone_type:"struct"},GetTemplateResult:{fields:[{description:"Display name for the template. Template names can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description for the template. Template descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Definitions of the property fields associated with this template. There can be up to 32 properties in a single template.",parameter:"fields",type:{list:{datatype:"PropertyFieldTemplate",namespace:"file_properties"}}}],stone_type:"struct"},PropertyFieldTemplate:{description:"Defines how a single property field may be structured. Used exclusively by :type:`PropertyGroupTemplate`.",fields:[{description:"Key of the property field being described. Property field keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Description of the property field. Property field descriptions can be up to 1024 bytes.",parameter:"description",type:{primitive:"String"}},{description:"Data type of the value of this property field. This type will be enforced upon property creation and modifications.",parameter:"type",type:{datatype:"PropertyType",namespace:"file_properties"}}],stone_type:"struct"},PropertyType:{description:"Data type of the given property field added.",fields:[{description:"The associated property field will be of type string. Unicode is supported.",parameter:"string",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},TemplateError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},yTOx:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("OY//"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},yVxb:function(e,t,i){var r=i("zcvR");e.exports=function(e){return r(this,e).has(e)}},yhip:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("+iZH"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},yjxx:function(e,t,i){"use strict";t.a={sharing:{AccessInheritance:{description:"Information about the inheritance policy of a shared folder.",fields:[{description:"The shared folder inherits its members from the parent folder.",parameter:"inherit",type:{primitive:"Void"}},{description:"The shared folder does not inherit its members from the parent folder.",parameter:"no_inherit",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AccessLevel:{description:"Defines the access levels for collaborators.",fields:[{description:"The collaborator is the owner of the shared folder. Owners can view and edit the shared folder as well as set the folder's policies using :route:`update_folder_policy`.",parameter:"owner",type:{primitive:"Void"}},{description:"The collaborator can both view and edit the shared folder.",parameter:"editor",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder.",parameter:"viewer",type:{primitive:"Void"}},{description:"The collaborator can only view the shared folder and does not have any access to comments.",parameter:"viewer_no_comment",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AclUpdatePolicy:{description:"Who can change a shared folder's access control list (ACL). In other words, who can add, remove, or change the privileges of members.",fields:[{description:"Only the owner can update the ACL.",parameter:"owner",type:{primitive:"Void"}},{description:"Any editor can update the ACL. This may be further restricted to editors on the same team.",parameter:"editors",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},AudienceExceptionContentInfo:{description:"Information about the content that has a link audience different than that of this folder.",fields:[{description:"The name of the content, which is either a file or a folder.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"},AudienceExceptions:{description:"The total count and truncated list of information of content inside this folder that has a different audience than the link on this folder. This is only returned for folders.",fields:[{parameter:"count",type:{primitive:"UInt32"}},{description:"A truncated list of some of the content that is an exception. The length of this list could be smaller than the count since it is only a sample but will not be empty as long as count is not 0.",parameter:"exceptions",type:{list:{datatype:"AudienceExceptionContentInfo",namespace:"sharing"}}}],stone_type:"struct"},AudienceRestrictingSharedFolder:{description:"Information about the shared folder that prevents the link audience for this link from being more restrictive.",fields:[{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The name of the shared folder.",parameter:"name",type:{primitive:"String"}},{description:"The link audience of the shared folder.",parameter:"audience",type:{datatype:"LinkAudience",namespace:"sharing"}}],stone_type:"struct"},FolderAction:{description:"Actions that may be taken on shared folders.",fields:[{description:"Change folder options, such as who can be invited to join the folder.",parameter:"change_options",type:{primitive:"Void"}},{description:"Disable viewer information for this folder.",parameter:"disable_viewer_info",type:{primitive:"Void"}},{description:"Change or edit contents of the folder.",parameter:"edit_contents",type:{primitive:"Void"}},{description:"Enable viewer information on the folder.",parameter:"enable_viewer_info",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read and write permission.",parameter:"invite_editor",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission.",parameter:"invite_viewer",type:{primitive:"Void"}},{description:"Invite a user or group to join the folder with read permission but no comment permissions.",parameter:"invite_viewer_no_comment",type:{primitive:"Void"}},{description:"Relinquish one's own membership in the folder.",parameter:"relinquish_membership",type:{primitive:"Void"}},{description:"Unmount the folder.",parameter:"unmount",type:{primitive:"Void"}},{description:"Stop sharing this folder.",parameter:"unshare",type:{primitive:"Void"}},{description:"Keep a copy of the contents upon leaving or being kicked from the folder.",parameter:"leave_a_copy",type:{primitive:"Void"}},{description:"Use create_link instead.",parameter:"share_link",type:{primitive:"Void"}},{description:"Create a shared link for folder.",parameter:"create_link",type:{primitive:"Void"}},{description:"Set whether the folder inherits permissions from its parent.",parameter:"set_access_inheritance",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},FolderPermission:{description:"Whether the user is allowed to take the action on the shared folder.",fields:[{description:"The action that the user may wish to take on the folder.",parameter:"action",type:{datatype:"FolderAction",namespace:"sharing"}},{description:"True if the user is allowed to take the action.",parameter:"allow",type:{primitive:"Boolean"}},{description:"The reason why the user is denied the permission. Not present if the action is allowed, or if no reason is available.",parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},FolderPolicy:{description:"A set of policies governing membership and privileges for a shared folder.",fields:[{description:"Who can add and remove members from this shared folder.",parameter:"acl_update_policy",type:{datatype:"AclUpdatePolicy",namespace:"sharing"}},{description:"Who links can be shared with.",parameter:"shared_link_policy",type:{datatype:"SharedLinkPolicy",namespace:"sharing"}},{description:"Who can be a member of this shared folder, as set on the folder itself. The effective policy may differ from this value if the team-wide policy is more restrictive. Present only if the folder is owned by a team.",parameter:"member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can be a member of this shared folder, taking into account both the folder and the team-wide policy. This value may differ from that of member_policy if the team-wide policy is more restrictive than the folder policy. Present only if the folder is owned by a team.",parameter:"resolved_member_policy",type:{optional:{datatype:"MemberPolicy",namespace:"sharing"}}},{description:"Who can enable/disable viewer info for this shared folder.",parameter:"viewer_info_policy",type:{optional:{datatype:"ViewerInfoPolicy",namespace:"sharing"}}}],stone_type:"struct"},InsufficientPlan:{fields:[{description:"A message to tell the user to upgrade in order to support expected action.",parameter:"message",type:{primitive:"String"}},{description:"A URL to send the user to in order to obtain the account type they need, e.g. upgrading. Absent if there is no action the user can take to upgrade.",parameter:"upsell_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},LinkAction:{description:"Actions that can be performed on a link.",fields:[{description:"Change the access level of the link.",parameter:"change_access_level",type:{primitive:"Void"}},{description:"Change the audience of the link.",parameter:"change_audience",type:{primitive:"Void"}},{description:"Remove the expiry date of the link.",parameter:"remove_expiry",type:{primitive:"Void"}},{description:"Remove the password of the link.",parameter:"remove_password",type:{primitive:"Void"}},{description:"Create or modify the expiry date of the link.",parameter:"set_expiry",type:{primitive:"Void"}},{description:"Create or modify the password of the link.",parameter:"set_password",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkAudience:{fields:[{description:"Link is accessible by anyone.",parameter:"public",type:{primitive:"Void"}},{description:"Link is accessible only by team members.",parameter:"team",type:{primitive:"Void"}},{description:"The link can be used by no one. The link merely points the user to the content, and does not grant additional rights to the user. Members of the content who use this link can only access the content with their pre-existing access rights.",parameter:"no_one",type:{primitive:"Void"}},{description:"A link-specific password is required to access the link. Login is not required.",parameter:"password",type:{primitive:"Void"}},{description:"Link is accessible only by members of the content.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},LinkPermission:{description:"Permissions for actions that can be performed on a link.",fields:[{parameter:"action",type:{datatype:"LinkAction",namespace:"sharing"}},{parameter:"allow",type:{primitive:"Boolean"}},{parameter:"reason",type:{optional:{datatype:"PermissionDeniedReason",namespace:"sharing"}}}],stone_type:"struct"},MemberPolicy:{description:"Policy governing who can be a member of a shared folder. Only applicable to folders owned by a user on a team.",fields:[{description:"Only a teammate can become a member.",parameter:"team",type:{primitive:"Void"}},{description:"Anyone can become a member.",parameter:"anyone",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PermissionDeniedReason:{description:"Possible reasons the user is denied a permission.",fields:[{description:"User is not on the same team as the folder owner.",parameter:"user_not_same_team_as_owner",type:{primitive:"Void"}},{description:"User is prohibited by the owner from taking the action.",parameter:"user_not_allowed_by_owner",type:{primitive:"Void"}},{description:"Target is indirectly a member of the folder, for example by being part of a group.",parameter:"target_is_indirect_member",type:{primitive:"Void"}},{description:"Target is the owner of the folder.",parameter:"target_is_owner",type:{primitive:"Void"}},{description:"Target is the user itself.",parameter:"target_is_self",type:{primitive:"Void"}},{description:"Target is not an active member of the team.",parameter:"target_not_active",type:{primitive:"Void"}},{description:"Folder is team folder for a limited team.",parameter:"folder_is_limited_team_folder",type:{primitive:"Void"}},{description:"The content owner needs to be on a Dropbox team to perform this action.",parameter:"owner_not_on_team",type:{primitive:"Void"}},{description:"The user does not have permission to perform this action on the link.",parameter:"permission_denied",type:{primitive:"Void"}},{description:"The user's team policy prevents performing this action on the link.",parameter:"restricted_by_team",type:{primitive:"Void"}},{description:"The user's account type does not support this action.",parameter:"user_account_type",type:{primitive:"Void"}},{description:"The user needs to be on a Dropbox team to perform this action.",parameter:"user_not_on_team",type:{primitive:"Void"}},{description:"Folder is inside of another shared folder.",parameter:"folder_is_inside_shared_folder",type:{primitive:"Void"}},{description:"Policy cannot be changed due to restrictions from parent folder.",parameter:"restricted_by_parent_folder",type:{primitive:"Void"}},{parameter:"insufficient_plan",type:{datatype:"InsufficientPlan",namespace:"sharing"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SetAccessInheritanceArg:{fields:[{description:"The ID for the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"The access inheritance settings for the folder.",parameter:"access_inheritance",type:{datatype:"AccessInheritance",namespace:"sharing"}}],stone_type:"struct"},SetAccessInheritanceError:{fields:[{description:"Unable to access shared folder.",parameter:"access_error",type:{datatype:"SharedFolderAccessError",namespace:"sharing"}},{description:"The current user does not have permission to perform this action.",parameter:"no_permission",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ShareFolderLaunch:{fields:[{description:"This response indicates that the processing is asynchronous. The string is an id that can be used to obtain the status of the asynchronous job.",parameter:"async_job_id",type:{primitive:"String"}},{parameter:"complete",type:{datatype:"SharedFolderMetadata",namespace:"sharing"}}],stone_type:"union"},SharedContentLinkMetadata:{description:"Metadata of a shared link for a file or folder.",fields:[{description:"The audience options that are available for the content. Some audience options may be unavailable. For example, team_only may be unavailable if the content is not owned by a user on a team. The 'default' audience option is always available if the user can modify link settings.",parameter:"audience_options",type:{list:{datatype:"LinkAudience",namespace:"sharing"}}},{description:"The current audience of the link.",parameter:"current_audience",type:{datatype:"LinkAudience",namespace:"sharing"}},{description:"A list of permissions for actions you can perform on the link.",parameter:"link_permissions",type:{list:{datatype:"LinkPermission",namespace:"sharing"}}},{description:"Whether the link is protected by a password.",parameter:"password_protected",type:{primitive:"Boolean"}},{description:"The URL of the link.",parameter:"url",type:{primitive:"String"}},{description:"The access level on the link for this file.",parameter:"access_level",type:{optional:{datatype:"AccessLevel",namespace:"sharing"}}},{description:"The shared folder that prevents the link audience for this link from being more restrictive.",parameter:"audience_restricting_shared_folder",type:{optional:{datatype:"AudienceRestrictingSharedFolder",namespace:"sharing"}}},{description:"Whether the link has an expiry set on it. A link with an expiry will have its  audience changed to members when the expiry is reached.",parameter:"expiry",type:{optional:{primitive:"Timestamp"}}},{description:"The content inside this folder with link audience different than this folder's. This is only returned when an endpoint that returns metadata for a single shared folder is called, e.g. /get_folder_metadata.",parameter:"audience_exceptions",type:{optional:{datatype:"AudienceExceptions",namespace:"sharing"}}}],stone_type:"struct"},SharedFolderAccessError:{description:"There is an error accessing the shared folder.",fields:[{description:"This shared folder ID is invalid.",parameter:"invalid_id",type:{primitive:"Void"}},{description:"The user is not a member of the shared folder thus cannot access it.",parameter:"not_a_member",type:{primitive:"Void"}},{description:"Never set.",parameter:"email_unverified",type:{primitive:"Void"}},{description:"The shared folder is unmounted.",parameter:"unmounted",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},SharedFolderMetadata:{description:"The metadata which includes basic information about the shared folder.",fields:[{description:"The current user's access level for this shared folder.",parameter:"access_type",type:{datatype:"AccessLevel",namespace:"sharing"}},{description:"Whether this folder is inside of a team folder.",parameter:"is_inside_team_folder",type:{primitive:"Boolean"}},{description:"Whether this folder is a :link:`team folder https://www.dropbox.com/en/help/986`.",parameter:"is_team_folder",type:{primitive:"Boolean"}},{description:"The name of the this shared folder.",parameter:"name",type:{primitive:"String"}},{description:"Policies governing this shared folder.",parameter:"policy",type:{datatype:"FolderPolicy",namespace:"sharing"}},{description:"URL for displaying a web preview of the shared folder.",parameter:"preview_url",type:{primitive:"String"}},{description:"The ID of the shared folder.",parameter:"shared_folder_id",type:{primitive:"String"}},{description:"Timestamp indicating when the current user was invited to this shared folder.",parameter:"time_invited",type:{primitive:"Timestamp"}},{description:"The display names of the users that own the folder. If the folder is part of a team folder, the display names of the team admins are also included. Absent if the owner display names cannot be fetched.",parameter:"owner_display_names",type:{optional:{list:{primitive:"String"}}}},{description:"The team that owns the folder. This field is not present if the folder is not owned by a team.",parameter:"owner_team",type:{optional:{datatype:"Team",namespace:"users"}}},{description:"The ID of the parent shared folder. This field is present only if the folder is contained within another shared folder.",parameter:"parent_shared_folder_id",type:{optional:{primitive:"String"}}},{description:"The lower-cased full path of this shared folder. Absent for unmounted folders.",parameter:"path_lower",type:{optional:{primitive:"String"}}},{description:"Display name for the parent folder.",parameter:"parent_folder_name",type:{optional:{primitive:"String"}}},{description:"The metadata of the shared content link to this shared folder. Absent if there is no link on the folder. This is for an unreleased feature so it may not be returned yet.",parameter:"link_metadata",type:{optional:{datatype:"SharedContentLinkMetadata",namespace:"sharing"}}},{description:"Actions the current user may perform on the folder and its contents. The set of permissions corresponds to the FolderActions in the request.",parameter:"permissions",type:{optional:{list:{datatype:"FolderPermission",namespace:"sharing"}}}},{description:"Whether the folder inherits its members from its parent.",parameter:"access_inheritance",type:{datatype:"AccessInheritance",namespace:"sharing"}}],stone_type:"struct"},SharedLinkPolicy:{description:"Who can view shared links in this folder.",fields:[{description:"Links can be shared with anyone.",parameter:"anyone",type:{primitive:"Void"}},{description:"Links can be shared with anyone on the same team as the owner.",parameter:"team",type:{primitive:"Void"}},{description:"Links can only be shared among members of the shared folder.",parameter:"members",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ViewerInfoPolicy:{fields:[{description:"Viewer information is available on this file.",parameter:"enabled",type:{primitive:"Void"}},{description:"Viewer information is disabled on this file.",parameter:"disabled",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}},users:{Team:{description:"Information about a team.",fields:[{description:"The team's unique ID.",parameter:"id",type:{primitive:"String"}},{description:"The name of the team.",parameter:"name",type:{primitive:"String"}}],stone_type:"struct"}}}},ymBw:function(e,t,i){"use strict";t.a={secondary_emails:{SecondaryEmail:{fields:[{description:"Secondary email address.",parameter:"email",type:{primitive:"String"}},{description:"Whether or not the secondary email address is verified to be owned by a user.",parameter:"is_verified",type:{primitive:"Boolean"}}],stone_type:"struct"}},team:{AdminTier:{description:"Describes which team-related admin permissions a user has.",fields:[{description:"User is an administrator of the team - has all permissions.",parameter:"team_admin",type:{primitive:"Void"}},{description:"User can do most user provisioning, de-provisioning and management.",parameter:"user_management_admin",type:{primitive:"Void"}},{description:"User can do a limited set of common support tasks for existing users.",parameter:"support_admin",type:{primitive:"Void"}},{description:"User is not an admin of the team.",parameter:"member_only",type:{primitive:"Void"}}],stone_type:"union"},MembersListContinueArg:{fields:[{description:"Indicates from what point to get the next set of members.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},MembersListContinueError:{fields:[{description:"The cursor is invalid.",parameter:"invalid_cursor",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},MembersListResult:{fields:[{description:"List of team members.",parameter:"members",type:{list:{datatype:"TeamMemberInfo",namespace:"team"}}},{description:"Pass the cursor into :route:`members/list/continue` to obtain the additional members.",parameter:"cursor",type:{primitive:"String"}},{description:"Is true if there are additional team members that have not been returned yet. An additional call to :route:`members/list/continue` can retrieve them.",parameter:"has_more",type:{primitive:"Boolean"}}],stone_type:"struct"},RemovedStatus:{fields:[{description:"True if the removed team member is recoverable.",parameter:"is_recoverable",type:{primitive:"Boolean"}},{description:"True if the team member's account was converted to individual account.",parameter:"is_disconnected",type:{primitive:"Boolean"}}],stone_type:"struct"},TeamMemberInfo:{description:"Information about a team member.",fields:[{description:"Profile of a user as a member of a team.",parameter:"profile",type:{datatype:"TeamMemberProfile",namespace:"team"}},{description:"The user's role in the team.",parameter:"role",type:{datatype:"AdminTier",namespace:"team"}}],stone_type:"struct"},TeamMemberProfile:{description:"Profile of a user as a member of a team.",fields:[{description:"ID of user as a member of a team.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Email address of user.",parameter:"email",type:{primitive:"String"}},{description:"Is true if the user's email is verified to be owned by the user.",parameter:"email_verified",type:{primitive:"Boolean"}},{description:"The user's status as a member of a specific team.",parameter:"status",type:{datatype:"TeamMemberStatus",namespace:"team"}},{description:"Representations for a person's name.",parameter:"name",type:{datatype:"Name",namespace:"users"}},{description:"The user's membership type: full (normal team member) vs limited (does not use a license; no access to the team's shared quota).",parameter:"membership_type",type:{datatype:"TeamMembershipType",namespace:"team"}},{description:"List of group IDs of groups that the user belongs to.",parameter:"groups",type:{list:{primitive:"String"}}},{description:"The namespace id of the user's root folder.",parameter:"member_folder_id",type:{primitive:"String"}},{description:"External ID that a team can attach to the user. An application using the API may find it easier to use their own IDs instead of Dropbox IDs like account_id or team_member_id.",parameter:"external_id",type:{optional:{primitive:"String"}}},{description:"A user's account identifier.",parameter:"account_id",type:{optional:{primitive:"String"}}},{description:"Secondary emails of a user.",parameter:"secondary_emails",type:{optional:{list:{datatype:"SecondaryEmail",namespace:"secondary_emails"}}}},{description:"The date and time the user was invited to the team (contains value only when the member's status matches :field:`TeamMemberStatus.invited`).",parameter:"invited_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user joined as a member of a specific team.",parameter:"joined_on",type:{optional:{primitive:"Timestamp"}}},{description:"The date and time the user was suspended from the team (contains value only when the member's status matches :field:`TeamMemberStatus.suspended`).",parameter:"suspended_on",type:{optional:{primitive:"Timestamp"}}},{description:"Persistent ID that a team can attach to the user. The persistent ID is unique ID to be used for SAML authentication.",parameter:"persistent_id",type:{optional:{primitive:"String"}}},{description:"Whether the user is a directory restricted user.",parameter:"is_directory_restricted",type:{optional:{primitive:"Boolean"}}},{description:"URL for the photo representing the user, if one is set.",parameter:"profile_photo_url",type:{optional:{primitive:"String"}}}],stone_type:"struct"},TeamMemberStatus:{description:"The user's status as a member of a specific team.",fields:[{description:"User has successfully joined the team.",parameter:"active",type:{primitive:"Void"}},{description:"User has been invited to a team, but has not joined the team yet.",parameter:"invited",type:{primitive:"Void"}},{description:"User is no longer a member of the team, but the account can be un-suspended, re-establishing the user as a team member.",parameter:"suspended",type:{primitive:"Void"}},{description:"User is no longer a member of the team. Removed users are only listed when include_removed is true in members/list.",parameter:"removed",type:{datatype:"RemovedStatus",namespace:"team"}}],stone_type:"union"},TeamMembershipType:{fields:[{description:"User uses a license and has full access to team resources like the shared quota.",parameter:"full",type:{primitive:"Void"}},{description:"User does not have access to the shared quota and team admins have restricted administrative control.",parameter:"limited",type:{primitive:"Void"}}],stone_type:"union"}},users:{Name:{description:"Representations for a person's name to assist with internationalization.",fields:[{description:"Also known as a first name.",parameter:"given_name",type:{primitive:"String"}},{description:"Also known as a last name or family name.",parameter:"surname",type:{primitive:"String"}},{description:"Locale-dependent name. In the US, a person's familiar name is their :field:`given_name`, but elsewhere, it could be any combination of a person's :field:`given_name` and :field:`surname`.",parameter:"familiar_name",type:{primitive:"String"}},{description:"A name that can be used directly to represent the name of a user's Dropbox account.",parameter:"display_name",type:{primitive:"String"}},{description:"An abbreviated form of the person's name. Their initials in most locales.",parameter:"abbreviated_name",type:{primitive:"String"}}],stone_type:"struct"}}}},yoW1:function(e,t){e.exports=function(e){return e}},yqAG:function(e,t,i){var r=i("lLPU"),o=i("u7St")(r);e.exports=o},yvxV:function(e,t,i){"use strict";t.a={file_requests:{FileRequest:{description:"A :link:`file request https://www.dropbox.com/help/9090` for receiving files into the user's Dropbox account.",fields:[{description:"The ID of the file request.",parameter:"id",type:{primitive:"String"}},{description:"The URL of the file request.",parameter:"url",type:{primitive:"String"}},{description:"The title of the file request.",parameter:"title",type:{primitive:"String"}},{description:"When this file request was created.",parameter:"created",type:{primitive:"Timestamp"}},{description:"Whether or not the file request is open. If the file request is closed, it will not accept any more file submissions.",parameter:"is_open",type:{primitive:"Boolean"}},{description:"The number of files this file request has received.",parameter:"file_count",type:{primitive:"Int64"}},{description:"The path of the folder in the Dropbox where uploaded files will be sent. This can be :val:`null` if the destination was removed. For apps with the app folder permission, this will be relative to the app folder.",parameter:"destination",type:{optional:{primitive:"String"}}},{description:"The deadline for this file request. Only set if the request has a deadline.",parameter:"deadline",type:{optional:{datatype:"FileRequestDeadline",namespace:"file_requests"}}}],stone_type:"struct"},FileRequestDeadline:{fields:[{description:"The deadline for this file request.",parameter:"deadline",type:{primitive:"Timestamp"}},{description:"If set, allow uploads after the deadline has passed. These     uploads will be marked overdue.",parameter:"allow_late_uploads",type:{optional:{datatype:"GracePeriod",namespace:"file_requests"}}}],stone_type:"struct"},GracePeriod:{fields:[{parameter:"one_day",type:{primitive:"Void"}},{parameter:"two_days",type:{primitive:"Void"}},{parameter:"seven_days",type:{primitive:"Void"}},{parameter:"thirty_days",type:{primitive:"Void"}},{parameter:"always",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},ListFileRequestsContinueArg:{fields:[{description:"The cursor returned by the previous API call specified in the endpoint description.",parameter:"cursor",type:{primitive:"String"}}],stone_type:"struct"},ListFileRequestsContinueError:{description:"There was an error retrieving the file requests.",fields:[{description:"This user's Dropbox Business team doesn't allow file requests.",parameter:"disabled_for_team",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{description:"The cursor is invalid.",parameter:"invalid_cursor",type:{primitive:"Void"}}],stone_type:"open_union"},ListFileRequestsV2Result:{description:"Result for :route:`list:2` and :route:`list/continue`.",fields:[{description:"The file requests owned by this user. Apps with the app folder permission will only see file requests in their app folder.",parameter:"file_requests",type:{list:{datatype:"FileRequest",namespace:"file_requests"}}},{description:"Pass the cursor into :route:`list/continue` to obtain additional file requests.",parameter:"cursor",type:{primitive:"String"}},{description:"Is true if there are additional file requests that have not been returned yet. An additional call to :route:list/continue` can retrieve them.",parameter:"has_more",type:{primitive:"Boolean"}}],stone_type:"struct"}}}},zAWK:function(e,t,i){"use strict";t.a={team:{DeviceSessionArg:{fields:[{description:"The session id.",parameter:"session_id",type:{primitive:"String"}},{description:"The unique id of the member owning the device.",parameter:"team_member_id",type:{primitive:"String"}}],stone_type:"struct"},RevokeDesktopClientArg:{fields:[{description:"The session id.",parameter:"session_id",type:{primitive:"String"}},{description:"The unique id of the member owning the device.",parameter:"team_member_id",type:{primitive:"String"}},{description:"Whether to delete all files of the account (this is possible only if supported by the desktop client and  will be made the next time the client access the account).",parameter:"delete_on_unlink",type:{primitive:"Boolean"}}],stone_type:"struct"},RevokeDeviceSessionArg:{fields:[{description:"End an active session.",parameter:"web_session",type:{datatype:"DeviceSessionArg",namespace:"team"}},{description:"Unlink a linked desktop device.",parameter:"desktop_client",type:{datatype:"RevokeDesktopClientArg",namespace:"team"}},{description:"Unlink a linked mobile device.",parameter:"mobile_client",type:{datatype:"DeviceSessionArg",namespace:"team"}}],stone_type:"union"},RevokeDeviceSessionError:{fields:[{description:"Device session not found.",parameter:"device_session_not_found",type:{primitive:"Void"}},{description:"Member not found.",parameter:"member_not_found",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"}}}},zEvu:function(e,t){e.exports=function(e){var t=this.__data__,i=t.delete(e);return this.size=t.size,i}},zIph:function(e,t,i){var r=i("6TGQ"),o=i("B4/L"),a=i("Vujp");e.exports=function(e){return r(e,a,o)}},"zL5+":function(e,t,i){"use strict";i.d(t,"h",(function(){return k})),i.d(t,"g",(function(){return ae})),i.d(t,"j",(function(){return N})),i.d(t,"i",(function(){return te})),i.d(t,"f",(function(){return O})),i.d(t,"a",(function(){return ne})),i.d(t,"c",(function(){return se})),i.d(t,"d",(function(){return pe})),i.d(t,"e",(function(){return de})),i.d(t,"b",(function(){return le}));var r=i("/FXl"),o=i("WGrI"),a=i.n(o),n=i("M8e6"),s=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,p=Object(n.a)((function(e){return s.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91})),d=i("V/u5"),l=i("mXGw"),m=i("aD51");function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e}).apply(this,arguments)}var h=function(e,t,i,r,o){for(t=t&&t.split?t.split("."):[t],r=0;r<t.length;r++)e=e?e[t[r]]:o;return e===o?i:e},u=[40,52,64].map((function(e){return e+"em"})),f={space:[0,4,8,16,32,64,128,256,512],fontSizes:[12,14,16,20,24,32,48,64,72]},y={bg:"backgroundColor",m:"margin",mt:"marginTop",mr:"marginRight",mb:"marginBottom",ml:"marginLeft",mx:"marginX",my:"marginY",p:"padding",pt:"paddingTop",pr:"paddingRight",pb:"paddingBottom",pl:"paddingLeft",px:"paddingX",py:"paddingY"},v={marginX:["marginLeft","marginRight"],marginY:["marginTop","marginBottom"],paddingX:["paddingLeft","paddingRight"],paddingY:["paddingTop","paddingBottom"],size:["width","height"]},_={color:"colors",backgroundColor:"colors",borderColor:"colors",margin:"space",marginTop:"space",marginRight:"space",marginBottom:"space",marginLeft:"space",marginX:"space",marginY:"space",padding:"space",paddingTop:"space",paddingRight:"space",paddingBottom:"space",paddingLeft:"space",paddingX:"space",paddingY:"space",top:"space",right:"space",bottom:"space",left:"space",gridGap:"space",gridColumnGap:"space",gridRowGap:"space",gap:"space",columnGap:"space",rowGap:"space",fontFamily:"fonts",fontSize:"fontSizes",fontWeight:"fontWeights",lineHeight:"lineHeights",letterSpacing:"letterSpacings",border:"borders",borderTop:"borders",borderRight:"borders",borderBottom:"borders",borderLeft:"borders",borderWidth:"borderWidths",borderStyle:"borderStyles",borderRadius:"radii",borderTopRightRadius:"radii",borderTopLeftRadius:"radii",borderBottomRightRadius:"radii",borderBottomLeftRadius:"radii",borderTopWidth:"borderWidths",borderTopColor:"colors",borderTopStyle:"borderStyles",borderBottomWidth:"borderWidths",borderBottomColor:"colors",borderBottomStyle:"borderStyles",borderLeftWidth:"borderWidths",borderLeftColor:"colors",borderLeftStyle:"borderStyles",borderRightWidth:"borderWidths",borderRightColor:"colors",borderRightStyle:"borderStyles",outlineColor:"colors",boxShadow:"shadows",textShadow:"shadows",zIndex:"zIndices",width:"sizes",minWidth:"sizes",maxWidth:"sizes",height:"sizes",minHeight:"sizes",maxHeight:"sizes",flexBasis:"sizes",size:"sizes",fill:"colors",stroke:"colors"},g=function(e,t){if("number"!=typeof t||t>=0)return h(e,t,t);var i=Math.abs(t),r=h(e,i,i);return"string"==typeof r?"-"+r:-1*r},b=["margin","marginTop","marginRight","marginBottom","marginLeft","marginX","marginY","top","bottom","left","right"].reduce((function(e,t){var i;return c({},e,((i={})[t]=g,i))}),{}),w=function e(t){return function(i){void 0===i&&(i={});var r=c({},f,{},i.theme||i),o={},a=function(e){return function(t){var i={},r=h(t,"breakpoints",u),o=[null].concat(r.map((function(e){return"@media screen and (min-width: "+e+")"})));for(var a in e){var n="function"==typeof e[a]?e[a](t):e[a];if(null!=n)if(Array.isArray(n))for(var s=0;s<n.slice(0,o.length).length;s++){var p=o[s];p?(i[p]=i[p]||{},null!=n[s]&&(i[p][a]=n[s])):i[a]=n[s]}else i[a]=n}return i}}("function"==typeof t?t(r):t)(r);for(var n in a){var s=a[n],p="function"==typeof s?s(r):s;if("variant"!==n)if(p&&"object"==typeof p)o[n]=e(p)(r);else{var d=h(y,n,n),l=h(_,d),m=h(r,l,h(r,d,{})),g=h(b,d,h)(m,p,p);if(v[d])for(var w=v[d],T=0;T<w.length;T++)o[w[T]]=g;else o[d]=g}else o=c({},o,{},e(h(r,p))(r))}return o}},T=w,V=function(e){if(!e)return null;var t={};for(var i in e)"sx"!==i&&(t[i]=e[i]);var r=function(e){if(e.sx||e.css)return function(t){return[T(e.sx)(t),"function"==typeof e.css?e.css(t):e.css]}}(e);return r&&(t.css=r),t},k=function(e,t){for(var i=arguments,r=arguments.length,o=new Array(r>2?r-2:0),a=2;a<r;a++)o[a-2]=i[a];return m.c.apply(void 0,[e,V(t)].concat(o))};function S(e){return(S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function x(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function A(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function P(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?A(Object(i),!0).forEach((function(t){x(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):A(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function D(e,t){if(null==e)return{};var i,r,o=function(e,t){if(null==e)return{};var i,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)i=a[r],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)i=a[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}function I(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e))&&"[object Arguments]"!==Object.prototype.toString.call(e))return;var i=[],r=!0,o=!1,a=void 0;try{for(var n,s=e[Symbol.iterator]();!(r=(n=s.next()).done)&&(i.push(n.value),!t||i.length!==t);r=!0);}catch(p){o=!0,a=p}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return i}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var E="function"==typeof Symbol&&Symbol.for,L=E?Symbol.for("react.element"):60103,R=E?Symbol.for("react.forward_ref"):60103,M=function(e){return!!e&&"object"===S(e)&&e.$$typeof!==L&&e.$$typeof!==R},F=function(e,t,i){return t},q=function(e,t){return a()(e,t,{isMergeableObject:M,arrayMerge:F})};q.all=function(){for(var e=arguments,t=arguments.length,i=new Array(t),r=0;r<t;r++)i[r]=e[r];return a.a.all(i,{isMergeableObject:M,arrayMerge:F})};var U=function(e){return function(){for(var t=arguments,i=arguments.length,r=new Array(i),o=0;o<i;o++)r[o]=t[o];var a=Object(l.forwardRef)((function(t,i){var o=t.as,a=D(t,["as"]),n="string"!=typeof e||o&&"string"!=typeof o,s=Object(l.useContext)(m.b),d=n?a:{},c={};if(r.forEach((function(e){var t="function"==typeof e?e(P({theme:s},a)):e;Object.assign(c,t)})),!n)for(var h in a)p(h)&&(d[h]=a[h]);return k(o||e,P({},d,{ref:i,css:c}))}));return a}},C=function(e){return function(t){return w(h(t.theme,"styles.".concat(e)))(t.theme)}},j={inlineCode:"code",thematicBreak:"hr",root:"div"},O=U("div")(C("div")),B={};["p","b","i","a","h1","h2","h3","h4","h5","h6","img","pre","code","ol","ul","li","blockquote","hr","em","table","tr","th","td","em","strong","delete","inlineCode","thematicBreak","div","root"].forEach((function(e){var t;B[e]=U(j[t=e]||t)(C(e)),O[e]=B[e]}));var G=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={};return Object.keys(e).forEach((function(i){t[i]=U(e[i])(C(i))})),t},W=Object(l.createContext)({emotionVersion:d.a,theme:null,components:B}),N=function(){return Object(l.useContext)(W)},z=function(e){return"--theme-ui-".concat(e)},X=function(e,t){return"var(".concat(z(e),", ").concat(t,")")},H=function(){for(var e=arguments,t=arguments.length,i=new Array(t),r=0;r<t;r++)i[r]=e[r];return i.filter(Boolean).join("-")},Y={fontWeights:!0,lineHeights:!0},K={useCustomProperties:!0,initialColorModeName:!0,initialColorMode:!0},J=function(e,t){return"number"!=typeof t||Y[e]?t:t+"px"},Z="undefined"!=typeof Storage,Q=function(e){return Z&&window.localStorage.getItem("theme-ui-color-mode")||e},$=function(e){return Z&&window.localStorage.setItem("theme-ui-color-mode",e)},ee=function(e){var t=I(Object(l.useState)(function(e){return e.initialColorModeName||e.initialColorMode||"default"}(e)),2),i=t[0],r=t[1];return Object(l.useEffect)((function(){var t=Q();document.body.classList.remove("theme-ui-"+t);var o,a,n=(o="(prefers-color-scheme: dark)",(a=window.matchMedia?window.matchMedia(o):{}).media===o&&a.matches);if(!t&&n&&e.useColorSchemeMediaQuery)return r("dark");t&&t!==i&&r(t)}),[]),Object(l.useEffect)((function(){i&&$(i)}),[i]),[i,r]},te=function(){var e=N(),t=e.colorMode,i=e.setColorMode;if("function"!=typeof i)throw new Error("[useColorMode] requires the ThemeProvider component");return[t,i]},ie=function(e){var t=e.context,i=e.components,o=e.children,a=P({},t.theme);return!1!==a.useCustomProperties&&(a.colors=function e(t,i,r){var o=Array.isArray(t)?[]:{};for(var a in t){var n=t[a],s=H(i,a);if(n&&"object"===S(n))o[a]=e(n,s,a);else if(K[a])o[a]=n;else{var p=J(r||a,n);o[a]=X(s,p)}}return o}(a.colors,"colors")),k(m.b.Provider,{value:a},k(r.a,{components:i},k(W.Provider,{value:t,children:o})))},re=function(e){var t=e.theme,i=void 0===t?{}:t,r=e.components,o=e.children,a=N(),n="function"==typeof i?i({}):i,s=I(ee(a.theme||n),2),p=s[0],d=s[1],m=function(e,t){if(!t)return e;var i=h(e,"colors.modes",{});return q.all({},e,{colors:h(i,t,{})})}(a.theme||n,p),c=P({},a,{__THEME_UI__:!0,colorMode:p,setColorMode:d,components:P({},a.components,{},G(r)),theme:m});return Object(l.useEffect)((function(){window.__THEME_UI__=c}),[c.theme,c.colorMode]),k(ie,{context:c,components:c.components,children:o})},oe=function(e){var t=e.theme,i=e.components,r=e.children,o=N(),a="function"==typeof t?P({},o,{theme:t(o.theme)}):q.all({},o,{theme:t});return k(ie,{context:a,components:G(i),children:r})},ae=function(e){var t=N();return!e.scoped&&t.__THEME_UI__?k(oe,e):k(re,e)},ne=U("div")({boxSizing:"border-box",minWidth:0}),se=U(ne)({display:"flex"}),pe=function(e){return k(ne,P({},e,{sx:{minHeight:"100vh",display:"flex",flexDirection:"column",variant:"styles.Layout"}}))},de=function(e){return k(ne,P({as:"main"},e,{sx:{flex:"1 1 auto",variant:"styles.Main"}}))},le=function(e){return k(ne,P({},e,{sx:{width:"100%",minWidth:0,maxWidth:1024,mx:"auto",p:4,variant:"styles.Container"}}))}},zUua:function(e,t,i){"use strict";t.a={file_properties:{AddPropertiesArg:{fields:[{description:"A unique identifier for the file or folder.",parameter:"path",type:{primitive:"String"}},{description:"The property groups which are to be added to a Dropbox file. No two groups in the input should  refer to the same template.",parameter:"property_groups",type:{list:{datatype:"PropertyGroup",namespace:"file_properties"}}}],stone_type:"struct"},AddPropertiesError:{fields:[{description:"Template does not exist for the given identifier.",parameter:"template_not_found",type:{primitive:"String"}},{description:"You do not have permission to modify this template.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}},{parameter:"path",type:{datatype:"LookupError",namespace:"file_properties"}},{description:"This folder cannot be tagged. Tagging folders is not supported for team-owned templates.",parameter:"unsupported_folder",type:{primitive:"Void"}},{description:"One or more of the supplied property field values is too large.",parameter:"property_field_too_large",type:{primitive:"Void"}},{description:"One or more of the supplied property fields does not conform to the template specifications.",parameter:"does_not_fit_template",type:{primitive:"Void"}},{description:"There are 2 or more property groups referring to the same templates in the input.",parameter:"duplicate_property_groups",type:{primitive:"Void"}},{description:"A property group associated with this template and file already exists.",parameter:"property_group_already_exists",type:{primitive:"Void"}}],stone_type:"open_union"},LookupError:{fields:[{parameter:"malformed_path",type:{primitive:"String"}},{description:"There is nothing at the given path.",parameter:"not_found",type:{primitive:"Void"}},{description:"We were expecting a file, but the given path refers to something that isn't a file.",parameter:"not_file",type:{primitive:"Void"}},{description:"We were expecting a folder, but the given path refers to something that isn't a folder.",parameter:"not_folder",type:{primitive:"Void"}},{description:"The file cannot be transferred because the content is restricted.  For example, sometimes there are legal restrictions due to copyright claims.",parameter:"restricted_content",type:{primitive:"Void"}},{parameter:"other",type:{primitive:"Void"}}],stone_type:"open_union"},PropertyField:{description:"Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox files as a :type:`PropertyGroup`.",fields:[{description:"Key of the property field associated with a file and template. Keys can be up to 256 bytes.",parameter:"name",type:{primitive:"String"}},{description:"Value of the property field associated with a file and template. Values can be up to 1024 bytes.",parameter:"value",type:{primitive:"String"}}],stone_type:"struct"},PropertyGroup:{description:"A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`. Properties are always added to a Dropbox file as a :type:`PropertyGroup`. The possible key names and value types in this group are defined by the corresponding :type:`PropertyGroupTemplate`.",fields:[{description:"A unique identifier for the associated template.",parameter:"template_id",type:{primitive:"String"}},{description:"The actual properties associated with the template. There can be up to 32 property types per template.",parameter:"fields",type:{list:{datatype:"PropertyField",namespace:"file_properties"}}}],stone_type:"struct"}}}},zXe4:function(e,t,i){var r=i("GI0s"),o=i("T9Ud");e.exports=function(e){return"symbol"==typeof e||o(e)&&"[object Symbol]"==r(e)}},zYYD:function(e,t,i){var r=i("MfmI");e.exports=function(e){return null==e?"":r(e)}},zc1V:function(e,t,i){var r,o=i("d6Vr"),a=(r=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";e.exports=function(e){return!!a&&a in e}},zcvR:function(e,t,i){var r=i("7o+A");e.exports=function(e,t){var i=e.__data__;return r(t)?i["string"==typeof t?"string":"hash"]:i.map}},zlak:function(e,t,i){var r=i("s3t7"),o=i("T9Ud");e.exports=function(e){return o(e)&&"[object Set]"==r(e)}},zm72:function(e,t,i){var r=i("m5HO"),o=i("IOY3"),a=Array.prototype.push;function n(e,t){return 2==t?function(t,i){return e(t,i)}:function(t){return e(t)}}function s(e){for(var t=e?e.length:0,i=Array(t);t--;)i[t]=e[t];return i}function p(e,t){return function(){var i=arguments.length;if(i){for(var r=Array(i);i--;)r[i]=arguments[i];var o=r[0]=t.apply(void 0,r);return e.apply(void 0,r),o}}}e.exports=function e(t,i,d,l){var m="function"==typeof i,c=i===Object(i);if(c&&(l=d,d=i,i=void 0),null==d)throw new TypeError;l||(l={});var h=!("cap"in l)||l.cap,u=!("curry"in l)||l.curry,f=!("fixed"in l)||l.fixed,y=!("immutable"in l)||l.immutable,v=!("rearg"in l)||l.rearg,_=m?d:o,g="curry"in l&&l.curry,b="fixed"in l&&l.fixed,w="rearg"in l&&l.rearg,T=m?d.runInContext():void 0,V=m?d:{ary:t.ary,assign:t.assign,clone:t.clone,curry:t.curry,forEach:t.forEach,isArray:t.isArray,isError:t.isError,isFunction:t.isFunction,isWeakMap:t.isWeakMap,iteratee:t.iteratee,keys:t.keys,rearg:t.rearg,toInteger:t.toInteger,toPath:t.toPath},k=V.ary,S=V.assign,x=V.clone,A=V.curry,P=V.forEach,D=V.isArray,I=V.isError,E=V.isFunction,L=V.isWeakMap,R=V.keys,M=V.rearg,F=V.toInteger,q=V.toPath,U=R(r.aryMethod),C={castArray:function(e){return function(){var t=arguments[0];return D(t)?e(s(t)):e.apply(void 0,arguments)}},iteratee:function(e){return function(){var t=arguments[0],i=arguments[1],r=e(t,i),o=r.length;return h&&"number"==typeof i?(i=i>2?i-2:1,o&&o<=i?r:n(r,i)):r}},mixin:function(e){return function(t){var i=this;if(!E(i))return e(i,Object(t));var r=[];return P(R(t),(function(e){E(t[e])&&r.push([e,i.prototype[e]])})),e(i,Object(t)),P(r,(function(e){var t=e[1];E(t)?i.prototype[e[0]]=t:delete i.prototype[e[0]]})),i}},nthArg:function(e){return function(t){var i=t<0?1:F(t)+1;return A(e(t),i)}},rearg:function(e){return function(t,i){var r=i?i.length:0;return A(e(t,i),r)}},runInContext:function(i){return function(r){return e(t,i(r),l)}}};function j(e,t){if(h){var i=r.iterateeRearg[e];if(i)return function(e,t){return N(e,(function(e){var i=t.length;return function(e,t){return 2==t?function(t,i){return e.apply(void 0,arguments)}:function(t){return e.apply(void 0,arguments)}}(M(n(e,i),t),i)}))}(t,i);var o=!m&&r.iterateeAry[e];if(o)return function(e,t){return N(e,(function(e){return"function"==typeof e?n(e,t):e}))}(t,o)}return t}function O(e,t,i){if(f&&(b||!r.skipFixed[e])){var o=r.methodSpread[e],n=o&&o.start;return void 0===n?k(t,i):function(e,t){return function(){for(var i=arguments.length,r=i-1,o=Array(i);i--;)o[i]=arguments[i];var n=o[t],s=o.slice(0,t);return n&&a.apply(s,n),t!=r&&a.apply(s,o.slice(t+1)),e.apply(this,s)}}(t,n)}return t}function B(e,t,i){return v&&i>1&&(w||!r.skipRearg[e])?M(t,r.methodRearg[e]||r.aryRearg[i]):t}function G(e,t){for(var i=-1,r=(t=q(t)).length,o=r-1,a=x(Object(e)),n=a;null!=n&&++i<r;){var s=t[i],p=n[s];null==p||E(p)||I(p)||L(p)||(n[s]=x(i==o?p:Object(p))),n=n[s]}return a}function W(t,i){var o=r.aliasToReal[t]||t,a=r.remap[o]||o,n=l;return function(t){var r=m?T:V,s=m?T[a]:i,p=S(S({},n),t);return e(r,o,s,p)}}function N(e,t){return function(){var i=arguments.length;if(!i)return e();for(var r=Array(i);i--;)r[i]=arguments[i];var o=v?0:i-1;return r[o]=t(r[o]),e.apply(void 0,r)}}function z(e,t,i){var o,a=r.aliasToReal[e]||e,n=t,d=C[a];return d?n=d(t):y&&(r.mutate.array[a]?n=p(t,s):r.mutate.object[a]?n=p(t,function(e){return function(t){return e({},t)}}(t)):r.mutate.set[a]&&(n=p(t,G))),P(U,(function(e){return P(r.aryMethod[e],(function(t){if(a==t){var i=r.methodSpread[a],s=i&&i.afterRearg;return o=s?O(a,B(a,n,e),e):B(a,O(a,n,e),e),o=function(e,t,i){return g||u&&i>1?A(t,i):t}(0,o=j(a,o),e),!1}})),!o})),o||(o=n),o==t&&(o=g?A(o,1):function(){return t.apply(this,arguments)}),o.convert=W(a,t),o.placeholder=t.placeholder=i,o}if(!c)return z(i,d,_);var X=d,H=[];return P(U,(function(e){P(r.aryMethod[e],(function(e){var t=X[r.remap[e]||e];t&&H.push([e,z(e,t,X)])}))})),P(R(X),(function(e){var t=X[e];if("function"==typeof t){for(var i=H.length;i--;)if(H[i][0]==e)return;t.convert=W(e,t),H.push([e,t])}})),P(H,(function(e){X[e[0]]=e[1]})),X.convert=function(e){return X.runInContext.convert(e)(void 0)},X.placeholder=X,P(R(X),(function(e){P(r.realToAlias[e]||[],(function(t){X[t]=X[e]}))})),X}},zq6h:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("0z8Y"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},zrAz:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("Hsk6"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}},zuYy:function(e,t,i){"use strict";i.r(t);var r=i("Do+M"),o=i("P32m"),a=i("mXGw");t.default={Endpoint:r.a,stoneTypes:o.a,React:a}}},[["UxWs",2,234,236]]]);
//# sourceMappingURL=app-5adc56d2f854d08dc858.js.map